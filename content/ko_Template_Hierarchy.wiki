{{Languages|
{{en|Template Hierarchy}}
{{fr|Hiérarchie de modeles}}
{{ja|テンプレート階層}}
{{ko|Template Hierarchy}}
{{ru|Иерархия шаблонов}}
{{pt-br|Hierarquia de Temas Wordpress}}
}}
== 소개 ==

워드프레스 템플릿은 퍼즐의 조각처럼 결합되어 워드프레스 사이트에서 웹페이지를 표시합니다. 일부 템플릿 (예 : 헤더와 푸터 템플릿 파일)은 모든 웹 페이지에 사용되는 반면 다른 템플릿은 특정 조건 하에서에만 사용됩니다.

=== 이 문서는 어떠한 문서인가요? ===

이 문서는 다음의 질문에 답해 줄 것입니다.:

<blockquote>
''특정 유형의 페이지를 볼 때 어떤 서식 파일이 사용되는가?''
</blockquote>

=== 누구든 찾아서 사용할 수 있도록 ===

워드프레스 1.5 버전에서 [[Using Themes|테마]] 가 소개된 이후로 [[Templates|템플릿]] 은 더욱 더 많은 설정을 할 수 있게 되었습니다. [[Theme_Development|워드프레스 테마 개발]]을 하기 위해서는 워드프레스가 페이지를 표시할 때 템플릿 파일을 선택하는 방식을 제대로 이해하는 것이 필수적입니다. 이미 존재하는 워드프레스 테마를 커스텀하기 위해서 정보를 찾고 있었다면, 이 문서는 어떤 템플릿 파일을 편집해야할 지를 결정하는데 도움을 줄 것입니다.

=== 조건부 태그 사용하기 ===

워드프레스는 쿼리 유형에 따라 불러올 템플릿을 결정하는데 몇 가지 방법을 제공합니다. 워드프레스 테마 개발자는 [[Conditional Tags]] 를 사용해서 특정 페이지를 생성하기 위해 사용하는 템플릿을 제어할 수도 있습니다. 일부 테마들은 이 문서에서 설명하는 템플릿 파일 모두를 가지고 있지 않을 수도 있습니다. 또 일부 테마들은 조건 태그를 사용해서 다른 템플릿 파일을 불러오는 방식을 사용합니다. 이에 대해선 [[Conditional Tags]] 와 [[Theme Development#Query-based_Template_Files|"Query Based" in Theme Development]] 를 참고하시면 됩니다.

== 템플릿 파일 계층 구조 ==

=== 일반적인 아이디어 ===

WordPress uses the [[Glossary#Query_string|Query String]] &mdash; information contained within each link on your web site &mdash; to decide which template or set of templates will be used to display the page.

First, WordPress matches every Query String to query types &mdash; i.e. it decides what type of page (a search page, a category page, the home page etc.) is being requested.

Templates are then chosen &mdash; and web page content is generated &mdash; in the order suggested by the WordPress Template hierarchy, depending upon what templates are available in a particular WordPress Theme.

WordPress looks for template files with specific names in the current Theme's directory and uses the ''first matching'' template file listed under the appropriate query section below. 

With the exception of the basic <tt style="font-weight:bold; color:#036">index.php</tt> template file, Theme developers can choose whether they want to implement a particular template file or not. If WordPress cannot find a template file with a matching name, it skips down to the next file name in the hierarchy. If WordPress cannot find any matching template file, <tt style="font-weight:bold; color:#036">index.php</tt> (the Theme's home page template file) will be used.  

=== 예 ===

If your blog is at <tt style="font-weight:bold; color:#036"><nowiki>http://example.com/blog/</nowiki></tt> and a visitor clicks on a link to a category page like
<tt style="font-weight:bold; color:#036"><nowiki>http://example.com/blog/category/your-cat/</nowiki></tt>: Here is the progression of how WordPress uses the template hierarchy to find and generate the right file.

WordPress looks for a template file in the current Theme's directory that matches the category's ID.

# If the category's ID is 4, WordPress looks for a template file named <tt style="font-weight:bold; color:#036">category-4.php</tt>.
# If it is missing, WordPress next looks for a generic category template file, <tt style="font-weight:bold; color:#036">category.php</tt>. 
# If this file does not exist either, WordPress looks for a generic archive template, <tt style="font-weight:bold; color:#036">archive.php</tt>. 
# If it is missing as well, WordPress falls back on the main Theme template file, <tt style="font-weight:bold; color:#036">index.php</tt>.

If a visitor goes to your home page at <tt style="font-weight:bold; color:#036"><nowiki>http://example.com/blog/</nowiki></tt>, the following happens:

# WordPress first determines whether it has a [[Creating_a_Static_Front_Page|static front page]]. If a static front page has been set, then WordPress loads that page according to the [[Template_Hierarchy#Page_display|page template hierarchy]].
# If a static front page has not been set, then WordPress looks for a template file called <tt style="font-weight:bold; color:#036">home.php</tt> and uses it to generate the requested page. 
# If <tt style="font-weight:bold; color:#036">home.php</tt> is missing, WordPress looks for a file called <tt style="font-weight:bold; color:#036">index.php</tt> in the active theme's directory, and uses that template to generate the page.

=== 비주얼 개요 ===

다음 다이어그램은 워드프레스 계층구조를 기반으로 페이지를 생성할 때 어떤 템플릿 파일이 호출되는 지를 보여주고 있습니다.

[[Image:Template_Hierarchy.png|750px|Graphic Example of the WordPress Template Hierarchy Structure]]
<small>[http://codex.wordpress.org/images/1/18/Template_Hierarchy.png Full-Size Image (png)]</small>

템플릿 계층 다이어그램과 템플릿 관련 conditional tags, body CSS 클래스에 대한 심도 있는 정보는 [http://www.chipbennett.net/themes/template-hierarchy 여기]에서 찾아볼 수 있습니다.

=== 템플릿 계층구조 세부 항목 ===

다음 섹션들은 쿼리 유형에 따라 호출되는 템플릿 파일의 순서를 설명합니다.

==== 홈페이지 표시 ====
:#<tt style="font-weight:bold; color:#036">home.php</tt>
:#<tt style="font-weight:bold; color:#036">index.php</tt>

==== 프론트 페이지 표시 ====
:#<tt style="font-weight:bold; color:#036">front-page.php</tt> - Used for both '''Your latest posts''' or '''A static page''' as set in the '''Front page displays''' section of [[Administration_Panels#Reading|Settings]] -> [[Settings_Reading_SubPanel|Reading]]
:#[[#Page display|Page display rules]] - When '''Front page''' is set in the '''Front page displays''' section of [[Administration_Panels#Reading|Settings]] -> [[Settings_Reading_SubPanel|Reading]]
:#[[#Home Page display|Home Page display rules]] - When '''Posts page''' is set in the '''Front page displays''' section of [[Administration_Panels#Reading|Settings]] -> [[Settings_Reading_SubPanel|Reading]]

==== 싱글 포스트 표시 ====
:#<tt style="font-weight:bold; color:#036">single-{post_type}.php</tt> - If the [[Post Types|post type]] were <tt style="font-weight:bold; color:#036">product</tt>, WordPress would look for <tt style="font-weight:bold; color:#036">single-product.php</tt>. 
:#<tt style="font-weight:bold; color:#036">single.php</tt>
:#<tt style="font-weight:bold; color:#036">index.php</tt>

==== 페이지 표시 ====
:#<tt style="font-weight:bold; color:#036">custom template file</tt> - The [[Pages#Page_Templates|Page Template]] assigned to the Page. See [[Function Reference/get page templates|get_page_templates()]].
:#<tt style="font-weight:bold; color:#036">page-{slug}.php</tt> - If the page slug is '''recent-news''', WordPress will look to use <tt style="font-weight:bold; color:#036">page-recent-news.php</tt>
:#<tt style="font-weight:bold; color:#036">page-{id}.php</tt> - If the page ID is '''6''', WordPress will look to use <tt style="font-weight:bold; color:#036">page-6.php</tt>
:#<tt style="font-weight:bold; color:#036">page.php</tt>
:#<tt style="font-weight:bold; color:#036">index.php</tt>

==== 카테고리 표시 ====
:#<tt style="font-weight:bold; color:#036">category-{slug}.php</tt> - If the category's slug were <tt style="font-weight:bold; color:#036">news</tt>, WordPress would look for <tt style="font-weight:bold; color:#036">category-news.php</tt>
:#<tt style="font-weight:bold; color:#036">category-{id}.php</tt> - If the category's ID were <tt style="font-weight:bold; color:#036">6</tt>, WordPress would look for <tt style="font-weight:bold; color:#036">category-6.php</tt>
:#<tt style="font-weight:bold; color:#036">category.php</tt>
:#<tt style="font-weight:bold; color:#036">archive.php</tt>
:#<tt style="font-weight:bold; color:#036">index.php</tt>

==== 태그 표시 ====
:#<tt style="font-weight:bold; color:#036">tag-{slug}.php</tt> - If the tag's slug were <tt style="font-weight:bold; color:#036">sometag</tt>, WordPress would look for <tt style="font-weight:bold; color:#036">tag-sometag.php</tt>
:#<tt style="font-weight:bold; color:#036">tag-{id}.php</tt> - If the tag's ID were <tt style="font-weight:bold; color:#036">6</tt>, WordPress would look for <tt style="font-weight:bold; color:#036">tag-6.php</tt>
:#<tt style="font-weight:bold; color:#036">tag.php</tt>
:#<tt style="font-weight:bold; color:#036">archive.php</tt>
:#<tt style="font-weight:bold; color:#036">index.php</tt>

==== 사용자정의 분류 표시 ====
:#<tt style="font-weight:bold; color:#036">taxonomy-{taxonomy}-{slug}.php</tt> - If the taxonomy were <tt style="font-weight:bold; color:#036">sometax</tt>, and  taxonomy's slug were <tt style="font-weight:bold; color:#036">someterm</tt> WordPress would look for <tt style="font-weight:bold; color:#036">taxonomy-sometax-someterm.php.</tt> In the case of Post Formats, the taxonomy is 'post_format' and the terms are 'post-format-{format}. i.e. <tt style="font-weight:bold; color:#036">taxonomy-post_format-post-format-link.php</tt>
:#<tt style="font-weight:bold; color:#036">taxonomy-{taxonomy}.php</tt> - If the taxonomy were <tt style="font-weight:bold; color:#036">sometax</tt>, WordPress would look for <tt style="font-weight:bold; color:#036">taxonomy-sometax.php</tt>
:#<tt style="font-weight:bold; color:#036">taxonomy.php</tt>
:#<tt style="font-weight:bold; color:#036">archive.php</tt>
:#<tt style="font-weight:bold; color:#036">index.php</tt>

==== 사용자정의 게시물 유형 표시 ====
:#<tt style="font-weight:bold; color:#036">archive-{post_type}.php</tt> - If the [[Post Types|post type]] were <tt style="font-weight:bold; color:#036">product</tt>, WordPress would look for <tt style="font-weight:bold; color:#036">archive-product.php</tt>. 
:#<tt style="font-weight:bold; color:#036">archive.php</tt>
:#<tt style="font-weight:bold; color:#036">index.php</tt>
(when displaying a single custom post type see the Single Post display section above.)

==== 작성자 표시 ====
:#<tt style="font-weight:bold; color:#036">author-{nicename}.php</tt> - If the author's nice name were <tt style="font-weight:bold; color:#036">rami</tt>, WordPress would look for <tt style="font-weight:bold; color:#036">author-rami.php</tt>.
:#<tt style="font-weight:bold; color:#036">author-{id}.php</tt> - If the author's ID were <tt style="font-weight:bold; color:#036">6</tt>, WordPress would look for <tt style="font-weight:bold; color:#036">author-6.php</tt>. 
:#<tt style="font-weight:bold; color:#036">author.php</tt>
:#<tt style="font-weight:bold; color:#036">archive.php</tt>
:#<tt style="font-weight:bold; color:#036">index.php</tt>

==== 날짜 표시 ====
:#<tt style="font-weight:bold; color:#036">date.php</tt>
:#<tt style="font-weight:bold; color:#036">archive.php</tt>
:#<tt style="font-weight:bold; color:#036">index.php</tt>

==== 검색 결과 표시 ====
:#<tt style="font-weight:bold; color:#036">search.php</tt>
:#<tt style="font-weight:bold; color:#036">index.php</tt>

==== 404 (페이지 찾을 수 없음) 표시 ====
:#<tt style="font-weight:bold; color:#036">404.php</tt>
:#<tt style="font-weight:bold; color:#036">index.php</tt>

==== 첨부파일 표시 ====
:#<tt style="font-weight:bold; color:#036">MIME_type.php</tt> - it can be any [http://en.wikipedia.org/wiki/Internet_media_type MIME type] (<tt style="font-weight:bold; color:#036">image.php</tt>, <tt style="font-weight:bold; color:#036">video.php</tt>, <tt style="font-weight:bold; color:#036">application.php</tt>).  For <tt>text/plain</tt>, in order:  
:##<tt style="font-weight:bold; color:#036">text.php</tt>
:##<tt style="font-weight:bold; color:#036">plain.php</tt>
:##<tt style="font-weight:bold; color:#036">text_plain.php</tt>
:#<tt style="font-weight:bold; color:#036">attachment.php</tt>
:#<tt style="font-weight:bold; color:#036">single-attachment.php</tt>
:#<tt style="font-weight:bold; color:#036">single.php</tt>
:#<tt style="font-weight:bold; color:#036">index.php</tt>

== 필터 계층 구조 ==

The WordPress templates system allow you to filter the hierarchy. The filter (located in the [[Function_Reference/get_query_template|<tt>get_query_template()</tt>]] function) uses this filter name: <tt style="font-weight:bold; color:#036">"{$type}_template"</tt> where <tt style="font-weight:bold; color:#036">$type</tt> is the a file name in the hierarchy without the <tt style="font-weight:bold; color:#036">.php</tt> extension.

Full list:

* index_template
* 404_template
* archive_template
* author_template
* category_template
* tag_template
* taxonomy_template
* date_template
* home_template
* front_page_template
* page_template
* paged_template
* search_template
* single_template
* text_template, plain_template, text_plain_template (all mime types)
* attachment_template
* comments_popup


=== 예 ===

For example, let's take the default author hierarchy:

* <tt style="font-weight:bold; color:#036">author-{nicename}.php</tt>
* <tt style="font-weight:bold; color:#036">author-{id}.php</tt>
* <tt style="font-weight:bold; color:#036">author.php</tt>

To add <tt style="font-weight:bold; color:#036">author-{role}.php</tt> before <tt style="font-weight:bold; color:#036">author.php</tt> we can manipulate the actual hierarchy using the 'author_template' hook.  This allows a request for /author/username where username has the role of editor to display using author-editor.php if present in the current themes directory.

<pre>
function author_role_template( $templates='' )
{
	$author = get_queried_object();
	$role=$author->roles[0];
	
	if(!is_array($templates) && !empty($templates)) {
		$templates=locate_template(array("author-$role.php",$templates),false);
	} 
	elseif(empty($templates)) {
		$templates=locate_template("author-$role.php",false);
	}
	else {
		$new_template=locate_template(array("author-$role.php"));
		if(!empty($new_template)) array_unshift($templates,$new_template);
	}
	
	return $templates;
}
add_filter( 'author_template', 'author_role_template' );
</pre>

== 바뀐 부분 ==

* [[Version 3.1|3.1]] :
** [[#Custom Post Types display|archive-{post_type}.php]] added

* [[Version 3.0|3.0]] :
** [[#Front Page display|front-page.php]] added
** [[#Single Post display|single-{post_type}.php]] added
** [[#Custom Taxonomies display|taxonomy.php]] added
** [[#Custom Taxonomies display|taxonomy-{taxonomy}.php]] added
** [[#Custom Taxonomies display|taxonomy-{taxonomy}-{term}.php]] added
** [[#Author_display|author-{id}.php]] added
** [[#Author_display|author-{nicename}.php]] added

* [[Version 2.9|2.9]] :
** [[#Page_display|page-{id}.php]] added
** [[#Page_display|page-{slug}.php]] added
** [[#Tag display|tag-{id}.php]] added
**[[#Category display|category-{slug}.php]] added

* [[Version 2.3|2.3]] :
** [[#Tag display|tag.php]] added
** [[#Tag display|tag-{slug}.php]] added

* [[Version 2.0|2.0]] :
** [[#Attachment display|attachment.php]] added

* [[Version 1.5|1.5]] :
** Introduction of the theme system.

== 소스 파일 ==

* The template hierarchy functions are located in {{Trac|wp-includes/theme.php}}.
* The template-load hierarchy is located in {{Trac|wp-includes/template-loader.php}}.

== 관련 링크 ==

* [[Theme Development]]
* [[The Loop]]
* [[Conditional Tags]]
* [[Template Tags]]
* [[Using Permalinks]]

{{Theme Templates}}

[[Category:ko:Design and Layout]]
[[Category:ko:Advanced Topics]]
[[Category:ko:Templates]]
[[Category:ko:Template Tags]]
[[Category:ko:UI Link]]