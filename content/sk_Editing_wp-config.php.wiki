{{Languages|
{{en|Editing wp-config.php}}
{{ja|wp-config.php ã®ç·¨é}}
}}

{{WarningMsg
|Pred tým než začnete upravovať.
|Prosím, neupravujte túto stránku Codex s nastaveniami vášho vlastného serveru. Date tým svoje kritické údaje celému svetu a vaša inštalácia WordPress aj tak nebude fungovať. Ďakujeme.}}

__TOC__ Ako časť inštalácie WordPress musíte upraviť súbor <tt>wp-config.php</tt> a definovať v ňom konfiguračné nastavenia WordPress pre prístup do vašej MySQL databázy.

Tento súbor, <tt>wp-config.php</tt>, neexistuje v prevzatej kopii WordPress; potrebujete ho vytvoriť. Súbor <tt>wp-config-sample.php</tt> je daný ako príklad ako by mal taký súbor vyzerať.  Rozšírené nastavenia a príklady sú uvedené nižšie.

Na zmenu vášho súboru <tt>wp-config.php</tt> vašej inštalácie, budete potrebovať nasledujúce informácie:

; '''Database Name''' : Názov databázy použitý WordPress
; '''Database Username''' : Užívateľské meno použité na prístup do databázy
; '''Database Password''' : Heslo použité spolu s Užívateľským menom na prístup do databázy
; '''Database Host''' : Umiestnenie vášho databázového servera

If your hosting provider installed WordPress for you, get the information from them. If you manage your own [[Glossary#Web server|web server]] or hosting account, you will have this information as a result of [[Installing_WordPress#Step_2:_Create_the_Database_and_a_User|creating the database and user]].


== Configure Database Settings ==
'''Important:''' ''never'' use a word processor like Microsoft Word for editing WordPress files!

Locate the file <tt>wp-config-sample.php</tt> in the base directory of your WordPress directory and open in a [[Glossary#Text_editor|text editor]].

{{Note|Since [[Version 2.6]], <tt>wp-config.php</tt> can be moved to the directory directly above the WordPress application directory.}}


=== <tt>Default wp-config-sample.php</tt> ===
This is an example of a default <tt>wp-config-sample.php</tt>, you will need to replace the default values in your copy of this file with your own specific database settings.

{{Template:SampleConnection}} 

{{Note|Text inside <tt>/* */</tt> are ''comments'', for information purposes only.}}
{{Note|Do not change these details here by editing this page, change them on your web server.}}


==== Set Database Name ====
Replace <tt>putyourdbnamehere</tt>, with the name of your database, e.g. ''MyDatabaseName''.

{{Template:SampleDBName}}

==== Set Database User ====
Replace <tt>usernamehere</tt>, with the name of your username e.g. ''MyUserName''.

{{Template:SampleDBUser}}

==== Set Database Password ====
Replace <tt>yourpasswordhere</tt>, with the your password, e.g. ''MyPassWord''.

{{Template:SampleDBPassword}}

==== Set Database Host ====
Replace <tt>localhost</tt>, with the name of your database host, e.g. ''MyDatabaseHost''.

{{Template:SampleDBHost}}
<br>
{{Note|There is a 99% chance you will '''NOT''' have to change it.  If you are unsure, try installing with the default value of <tt>'localhost'</tt> and see if it works.  If the install fails, contact your web hosting provider.}}

=== Possible DB_HOST values ===
Different hosting companies use different network settings for their mysql database's. If your hosting company is listed below in the left column, the value on the right is similar to the correct value for DB_HOST.  Contact your tech support and/or search your hosting companies online Documentation to be sure.

{| style="width:95%; margin:0 auto;" border="0" cellpadding="2"
|- align="center" bgcolor="#999" color="000" border="1"
! '''Hosting Company''' !! '''DB_HOST Value Guess'''
|- bgcolor=#eee
|'''1and1''' ||  '''<tt>db12345678</tt>'''
|-
|'''AN Hosting''' || '''<tt>localhost</tt>'''
|- bgcolor=#eee
|'''BlueHost''' || '''<tt>localhost</tt>'''
|-
|'''DreamHost''' || '''<tt>mysql.example.com</tt>'''
|- bgcolor=#eee
|'''GoDaddy''' || '''<tt>h41mysql52.secureserver.net</tt>'''
|-
|'''HostGator''' || '''<tt>localhost</tt>'''
|- bgcolor=#eee
|'''HostICan''' || '''<tt>localhost</tt>'''
|-
|'''ICDSoft''' || '''<tt>localhost:/tmp/mysql5.sock</tt>'''
|- bgcolor=#eee
|'''LaughingSquid''' || '''<tt>localhost</tt>'''
|-
|'''MediaTemple GridServer''' || '''<tt>internal-db.s44441.gridserver.com</tt>'''
|- bgcolor=#eee
|'''one.com''' || '''<tt>localhost</tt>'''
|-
|'''pair Networks''' || '''<tt>dbnnnx.pair.com</tt>'''
|- bgcolor=#eee
|'''Yahoo''' || '''<tt>mysql</tt>'''
|-
|'''Hosts with cPanel''' || '''<tt>localhost</tt>'''
|- bgcolor=#eee
|'''Hosts with Plesk''' || '''<tt>localhost</tt>'''
|-
|'''Hosts with DirectAdmin''' || '''<tt>localhost</tt>'''
|}
<br>
<br>

=== MySQL Alternate Port ===
If your host uses an alternate port number for your database you'll need to change the '''DB_HOST''' value in the <tt>wp-config.php</tt> file to reflect the alternate port provided by your host.

For localhost
  define('DB_HOST', 'localhost:'''3307'''');

Other
 define('DB_HOST', 'mysql.example.com:'''4454'''');

=== Database character set ===
As of WordPress [[Version 2.2]], '''DB_CHARSET''' was made available to allow designation of the database [[Glossary#Character Set|character set]] (e.g. tis620 for TIS620 Thai) to be used when defining the MySQL database tables.  

The default value of '''utf8''' ([[Wikipedia:Unicode|Unicode]] [[Wikipedia:UTF-8|UTF-8]]) is almost always the best option.  UTF-8 supports any language, so you typically want to leave DB_CHARSET at '''utf8''' and use the [[#Database collation|DB_COLLATE]] value for your language instead.

This example shows utf8 which is considered the WordPress default value:

 define('DB_CHARSET', 'utf8');

{{WarningMsg|Those performing new installations
|There usuallly should be no reason to change the default value of DB_CHARSET. If your blog needs a different character set, please read [http://dev.mysql.com/doc/refman/5.0/en/charset-charsets.html Character Sets and Collations MySQL Supports] for valid DB_CHARSET values.}}

{{WarningMsg|Those performing upgrades (especially blogs that existed before 2.2)
|If DB_CHARSET and DB_COLLATE do not exist in your <tt>wp-config.php</tt> file, '''DO NOT''' add either definition to your <tt>wp-config.php</tt> file unless you read and understand [[Converting Database Character Sets]].  Adding DB_CHARSET and DB_COLLATE to the <tt>wp-config.php</tt> file, for an existing blog, can cause major problems.}}

=== Database collation ===
As of WordPress [[Version 2.2|Version 2.2]], '''DB_COLLATE''' was made available to allow designation of the database [[Glossary#Collation|collation]] (i.e. the sort order of the character set).  In most cases, this value should be left blank (null) so the database collation will be automatically assigned by MySQL based on the database character set specified by DB_CHARSET.  Set '''DB_COLLATE''' to one of the UTF-8 values defined in [http://dev.mysql.com/doc/refman/5.0/en/charset-unicode-sets.html UTF-8 character sets] for most Western European languages.

The WordPress default DB_COLLATE value:

 define('DB_COLLATE', ''); 

UTF-8 Unicode General collation

 define('DB_COLLATE', 'utf8_general_ci');

UTF-8 Unicode Turkish collation

 define('DB_COLLATE', 'utf8_turkish_ci');

{{WarningMsg
|Those performing new installations
|There usually should be no reason to change the default value of DB_COLLATE.   Leaving the value blank (null) will insure the collation is automatically assigned by MySQL when the database tables are created.}}

{{WarningMsg
|Those performing upgrades (especially blogs that existed before 2.2)
|If DB_COLLATE and DB_CHARSET do not exist in your <tt>wp-config.php</tt> file, '''DO NOT''' add  either definition to your <tt>wp-config.php</tt> file unless you read and understand [[Converting Database Character Sets]].  And you may be in need of a WordPress upgrade.}}

<!--
*'''Further warning for those upgrading to WP 2.3.x''': You cannot upgrade from a pre-2.3 version of WordPress with these lines in your wp-config.php file. The upgrade to 2.3.x moves data from the wp_categories table to the wp_terms table, and deletes the former. This cannot happen if the DB_COLLATE and DB_CHARSET lines are included. More info [http://wordpress.org/support/topic/150460 in the forums] and [http://www.webbleyou.com/2008-02-25-wordpress-23x-upgrade-error-tables-wp_terms-and-wp_term_taxonomy-dont-exist/ this blog post].
-->

=== Security Keys ===
Beginning with [[Version 2.6]], three (3) security keys, '''AUTH_KEY''', '''SECURE_AUTH_KEY''', and '''LOGGED_IN_KEY''', were added to insure better encryption of information stored in the user's cookies.  Beginning with [[Version 2.7]] a fourth key, '''NONCE_KEY''', was added to this group.

You don't have to remember the keys, just make them long and complicated or better yet, use the [https://api.wordpress.org/secret-key/1.1/ the online generator].  You can change these at any point in time to invalidate all existing cookies this does mean that all users will have to login again. 

Example:

 define('AUTH_KEY', ':dr+%/5V4sAUG-gg%aS*v;&xGhd%{YKC^Z7KKGh j>k[.Nf$y7iGKdJ3c*[Kr5Bg');
 define('SECURE_AUTH_KEY', 'TufWOuA _.t>#+hA?^|3RfGTm>@*+S=8\"\'+\"}]<m#+}V)p:Qi?jXLq,<h\\`39m_(');
 define('LOGGED_IN_KEY', 'S~AACm4h1;T^\"qW3_8Zv!Ji=y|)~5i63JI |Al[(<YS<2V^$T])=8Xh2a:b:}U_E');
 define('NONCE_KEY', 'k1+EOc-&w?hG8j84>6L9v\"6C89NH?ui{*3\\(t09mumL/fFP_!K$JCEkLuy ={x{0');


A '''secret key''' is a ''hashing salt'' which makes your site harder to hack and access harder to crack by adding random elements to the password.

In simple terms, a secret key is a password with elements that make it harder to generate enough options to break through your security barriers. A password like "password" or "test" is simple and easily broken. A random, unpredictable password such as "88a7da62429ba6ad3cb3c76a09641fc" takes years to come up with the right combination.

For more information on the technical background and breakdown of secret keys and secure passwords, see:

* [http://boren.nu/archives/2008/07/14/ssl-and-cookies-in-wordpress-26/ Ryan Boren - SSL and Cookies in WordPress 2.6]
* [http://wordpress.org/support/topic/170987 WordPress Support Forum - HOWTO: Set up secret keys in WordPress 2.6+]
* [http://en.wikipedia.org/wiki/Password_cracking Wikipedia's explanation of Password Cracking]
* [http://www.blogherald.com/2007/05/08/protect-your-blog-with-a-solid-password/ Lorelle VanFossen - Protect Your Blog With a Solid Password]
* [http://security.yahoo.com/article.html?aid=2006102509 Yahoo's Security Password Tips]
* [http://uk.security.yahoo.com/protect-your-privacy/choose-password.html Yahoo Security - How to Choose a Password]
* [http://lifehacker.com/software/passwords/get-high-security-passwords-from-perfect-passwords-138100.php LifeHacker - Get high security passwords from Perfect Passwords]

== Advanced Options ==
The following sections may contain advanced / unsupported information, so please make sure you practice [[WordPress Backups|regular backups]] and know how to restore them before experimenting on a production installation.


=== table_prefix ===
The '''<tt>$table_prefix</tt>''' is the value placed in the front of your database tables.  Change the value if you want to use something other than '''wp_''' for your database prefix.  Typically this is changed if you are [[Installing Multiple Blogs|installing multiple WordPress blogs]] in the same database, and also for enhanced security.

Its a safe and good idea to change this value pre-installation to add more security to your WordPress blog.  Exploits attempted against your WordPress blog by malicious crackers often are built with the premise that your blog uses the prefix '''wp_''', by changing the value you mitigate some attack vectors.

 // You can have multiple installations in one database if you give each a unique prefix
 $table_prefix  = 'r235_';   // Only numbers, letters, and underscores please!

A second blog installation using the same database can be achieved simply by using a different prefix than your other installations.
 $table_prefix  = 'y77_';   // Only numbers, letters, and underscores please!


=== WordPress address (URL) ===
'''WP_SITEURL''', defined since WordPress [[Version 2.2|Version 2.2]], allows the WordPress address (URL) to be defined.  The valued defined is the address where your WordPress core files reside.  It should include the <nowiki>http://</nowiki> part too.  Do not put a slash "'''/'''" at the end.  Setting this value in <tt>wp-config.php</tt> overrides the [[Database_Description#Table:_wp_options|wp_options table]] value for '''siteurl''' and disables the WordPress address (URL) field in the [[Administration_Panels|Administration]] > [[Administration_Panels#General|Settings]] > [[Settings_General_SubPanel|General]] panel. 

{{Note|It won't change the Database value though, and the url will revert to the old database value if this line is removed from wp-config. Use the '''RELOCATE''' constant to change the siteurl value in the database.}}

If WordPress is installed into a directory called "wordpress" for the [http://en.wikipedia.org/wiki/Domain_name_system domain] <nowiki>example.com</nowiki>, define WP_SITEURL like this:

 define('WP_SITEURL', 'http://example.com/wordpress');

Dynamically set WP_SITEURL based on $_SERVER['HTTP_HOST']

 define('WP_SITEURL', 'http://' . $_SERVER['HTTP_HOST'] . '/path/to/wordpressp');

{{Note|A safer alternative for some installations would be to use the server-generated SERVER_NAME instead of the php/user-generated HTTP_HOST which is created dynamically by php based on the value of the HTTP HOST Header in the request, thus possibly allowing for file inclusion vulnerabilities.  SERVER_NAME is set by the server configuration and is static.}}

Dynamically set WP_SITEURL based on $_SERVER['SERVER_NAME']

 define('WP_SITEURL', 'http://' . $_SERVER['SERVER_NAME'] . '/path/to/wordpressp');

===Blog address (URL)===
'''WP_HOME''' is another <tt>wp-config.php</tt> option added in WordPress [[Version 2.2|Version 2.2]]. Similar to WP_SITEURL, WP_HOME ''overrides the [[Database_Description#Table:_wp_options|wp_options table]] value for ''home'' but does not change it permanently.'' '''home''' is the address you want people to type in their browser to reach your WordPress blog. It should include the <nowiki>http://</nowiki> part.  Also, do not put a slash "'''/'''" at the end. 

 define('WP_HOME', 'http://example.com/wordpress'); 

If you are using the technique described in [[Giving_WordPress_Its_Own_Directory|Giving WordPress Its Own Directory]] then follow the example below.  Remember, you will also be placing an <tt>index.php</tt> in your web-root directory if you use a setting like this.

 define('WP_HOME', 'http://example.com');

Dynamically set WP_HOME based on $_SERVER['HTTP_HOST']

 define('WP_HOME',    'http://' . $_SERVER['HTTP_HOST'] . '/path/to/wordpress');


=== Moving wp-content ===
Since [[Version 2.6]], you can move the <tt>wp-content</tt> directory, which holds your themes, plugins, and uploads, outside of the WordPress application directory.

Set <var>WP_CONTENT_DIR</var> to the full '''local path''' of this directory (no trailing slash), e.g.

 define( 'WP_CONTENT_DIR', $_SERVER['DOCUMENT_ROOT'] . '/blog/wp-content' );

Set <var>WP_CONTENT_URL</var> to the full '''URI''' of this directory (no trailing slash), e.g.

 define( 'WP_CONTENT_URL', 'http://example/blog/wp-content');

''Optional''<br/>
Set <var>WP_PLUGIN_DIR</var> to the full '''local path''' of this directory (no trailing slash), e.g.

 define( 'WP_PLUGIN_DIR', $_SERVER['DOCUMENT_ROOT'] . '/blog/wp-content/plugins' );

Set <var>WP_PLUGIN_URL</var> to the full '''URI''' of this directory (no trailing slash), e.g.

 define( 'WP_PLUGIN_URL', 'http://example/blog/wp-content/plugins');

If you have compability issues with plugins
Set <var>PLUGINDIR</var> to the full '''local path''' of this directory (no trailing slash), e.g.

 define( 'PLUGINDIR', $_SERVER['DOCUMENT_ROOT'] . '/blog/wp-content/plugins' );


===Modify AutoSave Interval===
When editing a post, WordPress uses Ajax to auto-save revisions to the post as you edit.  You may want to increase this setting for longer delays in between auto-saves, or decrease the setting to make sure you never lose changes.  The default is 60 seconds.

 define('AUTOSAVE_INTERVAL', 160 );  // seconds


===Post Revisions===
WordPress, by default, will save copies of each edit made to a post or page, allowing the possibility of reverting to a previous version of that post or page.  The saving of revisions can be disabled, or a maximum number of revisions per post or page can be specified.


====Disable Post Revisions====
If you do '''not''' set this value, WordPress defaults <tt>WP_POST_REVISIONS</tt> to ''true'' (enable post revisions). If you want to disable the awesome revisions feature, use this setting:

 define('WP_POST_REVISIONS', false );


====Specify the Number of Post Revisions====
If you want to specify a maximum number of revisions, change ''false'' to an integer/number (''e.g.'', <tt>3</tt> or <tt>5</tt>).

 define('WP_POST_REVISIONS', 3);


===Set Cookie Domain===
The domain set in the cookies for WordPress can be specified for those with unusual domain setups.  One reason is if [http://www.askapache.com/htaccess/apache-speed-subdomains.html subdomains are used to serve static content]. To prevent WordPress cookies from being sent with each request to static content on your subdomain you can set the cookie domain to your non-static domain only.

 define('COOKIE_DOMAIN', 'www.askapache.com');


=== Debug ===
The <tt>WP_DEBUG</tt> option, added in WordPress [[Version 2.3.1|Version 2.3.1]], controls the display of some errors and warnings. If this setting is absent from <tt>wp-config.php</tt>, then the value is assumed to be <var>false</var>. 

{{Note|The <var>true</var> and <var>false</var> values in the example are not set in apostrophes (') because they are boolean values.}}

 define('WP_DEBUG', true);
 define('WP_DEBUG', false);

Additionally, if you are planning on modifying some of WordPress' built-in JavaScript, you should enable the following option:

 define('SCRIPT_DEBUG', true);

This will allow you to edit the <em>scriptname</em>.dev.js files in the wp-includes/js and wp-admin/js directories.

[http://trac.wordpress.org/ticket/5473 In Wordpress versions since 2.3.2, database errors are printed only if WP_DEBUG is set to <var>true</var>]. In earlier versions, database errors were always printed. (Database errors are handled by the wpdb class and are not affected by [http://www.php.net/errorfunc PHP's error settings].)

In WordPress version 2.5, setting WP_DEBUG to <var>true</var> also raises the [http://www.php.net/error-reporting error reporting level] to E_ALL and activates warnings when deprecated functions or files are used; otherwise, WordPress sets the error reporting level to <tt>E_ALL ^ E_NOTICE ^ E_USER_NOTICE</tt>.

=== Disable Javascript Concatenation ===

To result in a faster administration area, all Javascript files are [http://en.wikipedia.org/wiki/Concatenation concatenated] into one URL. If Javascript is failing to work in your administration area, you can try disabling this feature:

 define('CONCATENATE_SCRIPTS', false);

=== Configure Error Log ===
Because <tt>wp-config.php</tt> is loaded for every page view not loaded from a cache file, it is an excellent location to set php ini settings that control your php installation.  This is useful if you don't have access to a php.ini file, or if you just want to change some settings on the fly.

Here is an example that turns php error_logging on and logs them to a specific file.  If <tt>WP_DEBUG</tt> is defined to true, the errors will also be saved to this file.  Just place this above any ''require_once'' or ''include'' commands.

 @ini_set('log_errors','On');
 @ini_set('display_errors','Off');
 @ini_set('error_log','/home/example.com/logs/php_error.log');
 /* That's all, stop editing! Happy blogging. */


===Increasing memory allocated to PHP===
Also released with [[Version 2.5]], the '''WP_MEMORY_LIMIT''' option allows you to specify the maximum amount of memory that can be consumed by PHP.  This setting may be necessary in the event you receive a message such as "Allowed memory size of xxxxxx bytes exhausted".  

This setting increases PHP Memory only for WordPress, not other applications.  By default, WordPress will attempt to increase memory allocated to PHP to 32MB (code is at beginning of ''wp-settings.php''), so the setting in ''wp-config.php'' should reflect something higher than 32MB. 

Please note, this setting may not work if your host does not allow for increasing the PHP memory limit--in that event, contact your host to increase the PHP memory limit. Also, note that many hosts set the PHP limit at 8MB.    

Increase PHP Memory to 64MB

 define('WP_MEMORY_LIMIT', '64M');

Increase PHP Memory to 96MB

 define('WP_MEMORY_LIMIT', '96M');


===Cache===
The '''WP_CACHE''' setting, if true, includes the <tt>wp-content/advanced-cache.php</tt> script, when executing <tt>wp-settings.php</tt>.

 define('WP_CACHE', true);


=== Custom User and Usermeta Tables ===
'''CUSTOM_USER_TABLE''' and '''CUSTOM_USER_META_TABLE''' are used to designated that the user and usermeta tables normally utilized by WordPress are not used, instead these values/tables are used to store your user information.

 define('CUSTOM_USER_TABLE', $table_prefix.'my_users');
 define('CUSTOM_USER_META_TABLE', $table_prefix.'my_usermeta');


=== Language and Language Directory ===
'''WPLANG''' defines the name of the language translation (.mo) file.  '''LANGDIR''' defines what directory the WPLANG .mo file resides.  If LANGDIR is not defined WordPress looks first to wp-content/languages and then wp-includes/languages for the .mo defined by WPLANG file.

 define('WPLANG', 'de_DE');
 define('LANGDIR', 'mylanguagedirectory');


=== Save queries for analysis ===
The '''SAVEQUERIES''' definition saves the database queries to a array and that array can be displayed to help analyze those queries.  The information saves each query, what function called it, and how long that query took to execute.  

{{Note|This will have a performance impact on your site, so make sure to turn this off when you aren't debugging.}}

First, put this in wp-config.php:
 
 define('SAVEQUERIES', true);

Then in the footer of your theme put this:
<pre>
<?php
if (current_user_can('level_10')){
    global $wpdb;
    echo "&lt;pre&gt;";
    print_r($wpdb->queries);
    echo "&lt;/pre&gt;";
}
?>
</pre>

The code above uses the level_10 capability so only the administrator will see the query results.

=== Override of default file permissions ===
The '''FS_CHMOD_DIR''' and '''FS_CHMOD_FILE''' define statements allow override of default file permissions.  These two variables were developed in response to the problem of the core update function failing with hosts (e.g.  some Italian hosts) running under suexec.  If a host uses restrictive file permissions (e.g. 400) for all user files, and refuses to access files which have group or world permissions set, these definitions could solve the problem.  Note that the ''''0755'''' is an octal value and is not delineated with single quotes (').  See Also: [[Changing File Permissions]]

 define('FS_CHMOD_DIR', (0755 & ~ umask()));
 define('FS_CHMOD_FILE', (0644 & ~ umask()));

===FTP/SSH Constants===
To enable SSH2 as an upgrade option you will need to install the pecl SSH2 extension.  To install this library you will need to issue a command similar to the following or talk to your web hosting provider to get this installed:

<pre>
pecl install ssh2
</pre>

After installing the pecl ssh2 extension you will need to modify your php configuration to automatically load this extension.

These methods for the WordPress core, plugin, and theme upgrades try to determine the WordPress path, as reported by PHP, but symlink trickery can sometimes 'muck this up' so if you know the paths to the various folders on the server, as seen via your FTP user, you can manually define them in the wp-config.php file.  

The following are valid constants for FTP/SSH updates:

*'''FS_METHOD''' forces the filesystem method. It should only be "direct", "ssh", "ftpext", or "ftpsockets".
*'''FTP_BASE''' is the full path to the "base" folder of the WordPress installation.
*'''FTP_CONTENT_DIR''' is the full path to the wp-content folder of the WordPress installation.
*'''FTP_PLUGIN_DIR''' is the full path to the plugins folder of the WordPress installation.
*'''FTP_PUBKEY''' is the full path to your SSH public key.
*'''FTP_PRIKEY''' is the full path to your SSH private key.
*'''FTP_USER''' is either user FTP or SSH username.  Most likely these are the same, but use the appropriate one for the type of update you wish to do.
*'''FTP_PASS''' is the password for the username entered for '''FTP_USER'''.  If you are using SSH public key authentication this can be omitted.
*'''FTP_HOST''' is the hostname:port combination for your SSH/FTP server.  The standard FTP port is 21 and the standard SSH port is 22.

<pre>
define('FS_METHOD', 'ftpext');
define('FTP_BASE', '/path/to/wordpress/');
define('FTP_CONTENT_DIR', '/path/to/wordpress/wp-content/');
define('FTP_PLUGIN_DIR ', '/path/to/wordpress/wp-content/plugins/');
define('FTP_PUBKEY', '/home/username/.ssh/id_rsa.pub');
define('FTP_PRIKEY', '/home/username/.ssh/id_rsa');
define('FTP_USER', 'username');
define('FTP_PASS', 'password');
define('FTP_HOST', 'ftp.example.org:21');
</pre>

It is recommended to use a private key that is not pass phrase protected.  There have been numerous reports that pass phrase protected private keys do not work properly.  If you decide to try a pass phrase protected private key you will need to enter the pass phrase for the private key as FTP_PASS.

If you're still not clear on how to use SSH for upgrading or installing WordPress/plugins, [http://www.firesidemedia.net/dev/wordpress-install-upgrade-ssh/ read through this tutorial].

===Additional Defined Constants===
Here are additional constants that can be defined, but probably shouldn't be.  The Cookie definitions are particularly useful if you have an unusual domain setup.
<pre>
  define('COOKIEPATH', preg_replace('|https?://[^/]+|i', '', get_option('home') . '/' ) );
  define('SITECOOKIEPATH', preg_replace('|https?://[^/]+|i', '', get_option('siteurl') . '/' ) );
  define( 'ADMIN_COOKIE_PATH', SITECOOKIEPATH . 'wp-admin' );
  define( 'PLUGINS_COOKIE_PATH', preg_replace('|https?://[^/]+|i', '', WP_PLUGIN_URL)  );
  define('TEMPLATEPATH', get_template_directory());
  define('STYLESHEETPATH', get_stylesheet_directory());
  define('DISABLE_WP_CRON', true);
</pre>

=== View All Defined Constants ===
Php has a function that returns an array of all the currently defined constants with their values.  

  print_r(@get_defined_constants());

== Double Check Before Saving ==
'''''Be sure to check for leading and/or trailing spaces around any of the above values you entered, and DON'T delete the single quotes!'''''

Before you save the file, be sure to '''double-check''' that you have not accidentally deleted any of the single quotes around the parameter values. Be sure there is nothing after the closing PHP tag in the file. The last thing in the file should be '''?>''' and nothing else. No spaces.

To save the file, choose '''File > Save As > wp-config.php''' and save the file in the root of your WordPress install. Upload the file to your web server and you're ready to install WordPress!


== See Also ==
*[[WordPress Backups]]
*[[Installing Multiple Blogs|Installing Multiple Blogs requires special wp-config.php]]
*[[Upgrading_WordPress_Extended|Troubleshooting Installations]]
*[[Administration_Over_SSL|Securing your Installation]]

[[Category:sk:Getting Started]]
[[Category:sk:Advanced Topics]]
[[Category:sk:Installation]]
[[Category:sk:UI Link]]
[[Category:sk:Error handling]]