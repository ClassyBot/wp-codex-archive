WordPress'in varsayılan davranışlarını değiştirmenin bir yolu da <tt>functions.php</tt> adında bir dosya kullanmaktır. Bu dosya [[Using Themes|Tema]] klasörü altında olmalıdır. 

Fonksiyonlar Dosyası (functions.php) tıpkı bir [[Plugins|Eklenti]] gibi davranır, WordPress sitenize yeni ve gelişmiş özellikler katar. Fonksiyonları tıpkı bir PHP fonksiyonları ya da var olan WordPress fonksiyonları gibi çağırabilirsiniz. Fonksiyonların kullanımındaki sonuçlar eklenti kullanımındaki sonuçlarla aynı olacaktır.

Eklenti ve fonksiyon dosyası kullanımında birkaç farklılık vardır.

Bir WordPress Eklentisi: 

* Özel ve tekil bir Başlık Metni gerektirir.
* <tt>wp-content/plugins</tt> klasörü altında bulunmalıdır, genellikle kendine ait alt bir klasörde saklanır.
* Sadece Eklenti Panelinden aktif hale getirildiğinde çalışır.
* Tüm temalara eklenir.
* Genellikle tek bir işlevi vardır, örneğin yazıları Sayfaya çevirmek, arama motoru optimizasyonu sağlamak ya da yedek almak gibi.

Bir Fonksiyon Dosyası:

* Özel bir Başlık Metni gerektirmez.
* <tt>wp-content/themes</tt> altında bulunan temanıza ait alt klasörün içerisinde yer alır.
* Sadece temanızı etkinleştirdiğinizde ettiğinizde çalışır.
* Sadece bulunduğu temaya eklenmiştir. Eğer temanızı değiştirirseniz fonksiyonlar çalışmayacaktır.
* Birçok farklı amaçları gerçekleştirmek için tek bir fonksiyon dosyasında değişik fonksiyonlar tanımlayabilirsiniz.

Her tema kendine ait bir fonksiyon dosyası içerir; fakat sadece aktif temanızdaki <tt>functions.php</tt> dosyası Temanın genel görünüşü üzerinde etkilidir. Eğer temanızda hali hazırda bir fonksiyon dosyası varsa buraya dilediğiniz kodları ekleyebilirsiniz. Eğer yoksa yeni bir metin belgesi oluşturarak ismini <tt>functions.php</tt> olarak değiştirin ve tema klasörünüze ekleyin.

Bir [[Child_Themes|Alt Tema]] kendine ait <tt>functions.php</tt> dosyasına sahip olabilir. Bu alt fonksiyonlar Ana Tema'nın fonksiyonları artırabilir veya onların [[Child_Themes#Using_functions.php|yerine geçebilir]]. 

'''Bir fonksiyon dosyası ile yapabilecekleriniz:'''

* [[Plugin_API#Hooks.2C_Actions_and_Filters| WordPress Hooks]], [[Plugin API/Action Reference|WordPress actions]] ve [[Plugin API/Filter Reference|filtreler]]'i  kullanabilirsiniz. Örneğin <tt>[[Plugin API/Filter Reference/excerpt length|excerpt_length]]</tt> kullanarak var olan [[Function Reference/the excerpt#Control_Excerpt_Length_using_Filters|Post Excerpt]] uzunluğunu 55 kelimeden daha farklı bir değere değiştirebilirsiniz. 
* <tt>[[Function Reference/add theme support|add_theme_support()]]</tt> gibi yeni WordPress özelliklerini temanıza ekleyebilir, [[Post Thumbnails|Öne Çıkan Görsel]], [[Post Formats|Yazı Türleri]] ve [[Navigation Menus|Özel Menüler]] gibi özellikleri kullanıma açabilirsiniz. 
* Tanımladığınız Fonksiyon Dosyasını eğer isterseniz başka bir tema şablonlarında da kullanabilirsiniz. 

'''Dikkat:''' Eğer bir WordPress Eklentisi fonksiyon dosyanızdaki ile aynı fonksiyonu veya filtreyi çağırıyorsa bu beklenmeyen sonuçlara neden olabilir ve siteniz çalışmayabilir.

Web ortamında "WordPress functions.php" şeklinde arama yaparsanız WordPress sitenizin kabiliyetlerini artıracak fonksiyonları içeren fonksiyon dosyaları bulabilirsiniz. 

== Kaynaklar ==

* Fonksiyon Dosyası Tema'ya bağımlı değildir: [http://justintadlock.com/archives/2011/02/02/creating-a-custom-functions-plugin-for-end-users Creating a custom functions plugin]


[[Category:WordPress Lessons]]
[[Category:Design and Layout]]
[[Category:Templates]]


[[Category:New_page_created]]