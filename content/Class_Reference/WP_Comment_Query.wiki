{{Languages|
{{en|Class Reference/WP Comment Query}}
{{ja|Class Reference/WP Comment Query}}
}}

== Description ==

<tt>WP_Comment_Query</tt> is a class, defined in {{Trac|wp-includes/class-wp-comment-query.php}}, that allows querying [[Database_Description|WordPress database]] tables '<tt>[[Database_Description#Table:_wp_comments|wp_comments]]</tt>' and '<tt>[[Database_Description#Table:_wp_commentmeta|wp_commentmeta]]</tt>'. The class was introduced in [[Version 3.1]].

== Usage ==

<pre>
<?php
$args = array(
   // args here
);

// The Query
$comments_query = new WP_Comment_Query;
$comments = $comments_query->query( $args );

// Comment Loop
if ( $comments ) {
	foreach ( $comments as $comment ) {
		echo '<p>' . $comment->comment_content . '</p>';
	}
} else {
	echo 'No comments found.';
}
?>
</pre>

=== Default Usage ===

<pre>
<?php
$args = array(
    'author_email' => '',    
    'author_url' => '',
    'author__in' => '',
    'author__not_in' => '',
    'include_unapproved' => '',
    'fields' => '',
    'ID' => '',
    'comment__in' => '',
    'comment__not_in' => '',
    'karma' => '',
    'number' => '',
    'offset' => '',
    'no_found_rows' => true,
    'orderby' => '',
    'order' => 'DESC',
    'parent' => '',
    'parent__in' => '',
    'parent__not_in' => '',
    'post_author__in' => '',
    'post_author__not_in' => '',
    'post_id' => 0,
    'post__in' => '',
    'post__not_in' => '',
    'post_author' => '',
    'post_name' => '',
    'post_parent' => '',
    'post_status' => '',
    'post_type' => '',
    'status' => 'all',
    'type' => '',
    'type__in' => '',
    'type__not_in' => '',
    'user_id' => '',
    'search' => '',
    'hierarchical' => false,
    'count' => false,
    'cache_domain' => 'core',
    'meta_key' => '',
    'meta_value' => '',
    'meta_query' => '',
    'date_query' => null, // See WP_Date_Query
    'update_comment_meta_cache' => true,
    'update_comment_post_cache' => false,
);
?>
</pre>

== Methods and Properties ==

=== Properties ===



=== Methods ===



== Parameters ==

{{Parameter|$status|string|Only return comments with this status.<ul><li><tt>'hold'</tt> - unapproved comments</li><li><tt>'approve'</tt> - approved comments</li><li><tt>'trash'</tt> - trash comments</li></ul>|optional}}

{{Parameter|$orderby|string|Set the field used to sort comments.|optional|comment_date_gmt}}

{{Parameter|$order|string|How to sort <tt>$orderby</tt>. Valid values:<ul><li><tt>'ASC'</tt> - Ascending (lowest to highest).</li><li><tt>'DESC'</tt> - Descending (highest to lowest).</li></ul>|optional|DESC}}

{{Parameter|$number|integer|Number of comments to return. Leave blank to return all comments.|optional|unlimited}}

{{Parameter|$offset|integer|Offset from latest comment. You must include $number along with this.|optional|0}}

{{Parameter|$post_id|integer|Only return comments for a particular post or page.|optional}}

{{Parameter|$user_id|integer|Only return comments for a particular user.|optional}}

{{Parameter|$count|integer|Only return the total count of comments.|optional}}


{{Parameter|$type__in|array| Allows specification of specific comment types|optional}}

{{Parameter|$type__not_in|array| Allows specifying all comment types except those in the array|optional}}

{{Parameter|$meta_key|string|Custom meta field key.|optional}}

{{Parameter|$meta_value|string|Custom meta field value.|optional}}

{{Parameter|$meta_query|array|Advanced meta query parameters (available with [[Version 3.5]]).|optional}}

{{Parameter|$fields|string|Which fields to return (available with [[Version 4.0]]).<ul><li><tt>'ids'</tt> - Comments ID's</li><li><tt>'*'</tt> - All comment fields.</li></ul>|optional|*}}

=== Custom Field Parameters ===

Show comments associated with a certain custom field.

* '''<tt>meta_key</tt>''' (''string'') - Custom field key.
* '''<tt>meta_value</tt>''' (''string'') - Custom field value.

* '''<tt>meta_query</tt>''' (''array'') - Custom field parameters (available with [[Version 3.5]]).
** '''<tt>key</tt>''' (''string'') - Custom field key.
** '''<tt>value</tt>''' (''string''|''array'') - Custom field value (''Note'': Array support is limited to a compare value of 'IN', 'NOT IN', 'BETWEEN', 'NOT BETWEEN', 'EXISTS' or 'NOT EXISTS')
** '''<tt>compare</tt>''' (''string'') - Operator to test. Possible values are '=', '!=', '>', '>=', '<', '<=', 'LIKE', 'NOT LIKE', 'IN', 'NOT IN', 'BETWEEN', 'NOT BETWEEN', 'EXISTS', and 'NOT EXISTS'. Default value is '='.
** '''<tt>type</tt>''' (''string'') - Custom field type. Possible values are 'NUMERIC', 'BINARY', 'CHAR', 'DATE', 'DATETIME', 'DECIMAL', 'SIGNED', 'TIME', 'UNSIGNED'. Default value is 'CHAR'.

'''Display featured comments'''

 $comment_query = new WP_Comment_Query( array( 'meta_key' => 'featured', 'meta_value' => '1' ) );

'''Multiple meta fields handling'''

 $args = array(
 	'meta_query' => array(
 		'relation' => 'AND',
 		array(
 			'key' => 'featured',
 			'value' => '1'
 		),
 		array(
 			'key' => 'buried',
 			'value' => '1',
 			'type' => 'numeric',
 			'compare' => '!='
 		)
 	)
  );
 $comment_query = new WP_Comment_Query( $args );

== Returns ==

; (Array) : Comment fields with the following index keys (or an empty array if there are no comments):

; <tt>comment_ID</tt> : (''integer'') The comment ID
; <tt>comment_post_ID</tt> : (''integer'') The ID of the post/page that this  comment responds to
; <tt>comment_author</tt> : (''string'') The comment author's name
; <tt>comment_author_email</tt> : (''string'') The comment author's email
; <tt>comment_author_url</tt> : (''string'') The comment author's webpage
; <tt>comment_author_IP</tt> : (''string'') The comment author's IP
; <tt>comment_date</tt> : (''string'') The datetime of the comment (<tt>YYYY-MM-DD HH:MM:SS</tt>)
; <tt>comment_date_gmt</tt> : (''string'') The GMT datetime of the comment (<tt>YYYY-MM-DD HH:MM:SS</tt>)
; <tt>comment_content</tt> : (''string'') The comment's content
; <tt>comment_karma</tt> : (''integer'') The comment's karma
; <tt>comment_approved</tt> : (''string'') The comment approval level (0, 1 or "spam")
; <tt>comment_agent</tt> : (''string'') The commenter's user agent (browser, operating system, etc.)
; <tt>comment_type</tt> : (''string'') The comment's type if meaningfull (<tt>pingback|trackback</tt>), empty for normal comments
; <tt>comment_parent</tt> : (''string'') The parent comment's ID for nested comments (0 for top level)
; <tt>user_id</tt> : (''integer'') The comment author's ID if s/he is registered (0 otherwise)

== Change Log ==

* [[Version 4.6|4.6.0]]:
** Add '<tt>$cache_domain</tt>' parameter.

* [[Version 4.5|4.5.0]]:
** Add '<tt>$author_url</tt>' parameter.

* [[Version 4.4|4.4.0]]:
** Add '<tt>$parent__in</tt>' and '<tt>$parent__not_in</tt>' parameters.
** Add '<tt>$no_found_rows</tt>' and '<tt>$hierarchical</tt>' parameters.
** Add '<tt>$update_comment_meta_cache</tt>' and '<tt>$update_comment_post_cache</tt>' parameters.
** Add Order by '<tt>comment__in</tt>'.

* [[Version 4.1|4.1.0]]:
** Add '<tt>comment__in</tt>', '<tt>comment__not_in</tt>', '<tt>post_author__in</tt>', '<tt>post_author__not_in</tt>', '<tt>author__in</tt>', '<tt>author__not_in</tt>', '<tt>post__in</tt>', '<tt>post__not_in</tt>', '<tt>include_unapproved</tt>', '<tt>type__in</tt>', and '<tt>type__not_in</tt>' parameters.

* Since: [[Version 3.1|3.1.0]]

== Source File ==
<tt>WP_Comment_Query</tt> is located in {{Trac|wp-includes/class-wp-comment-query.php}}.

==Resources==
* [http://generatewp.com/wp_comment_query/ WordPress WP_Comment_Query Generator]

== Related ==

* [[Class_Reference/WP_Query | WP_Query]] - Class for post-related queries
* [[Class_Reference/WP_User_Query | WP_User_Query]] - Class for user-related queries

{{Class Footer}}

[[Category:Classes]]