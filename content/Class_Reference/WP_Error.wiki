{{Languages|
{{en|Class Reference/WP_Error}}
{{it|Riferimento classi/WP_Error}}
{{ja|クラスリファレンス/WP_Error}}
}}

==Description==

<tt>WP_Error</tt> is a class that makes error handling within plugins and WordPress itself much easier.

Instances of <tt>WP_Error</tt> store error codes and messages representing one or more errors, and whether or not a variable is an instance of <tt>WP_Error</tt> can be determined using the <tt>[[Function_Reference/is_wp_error | is_wp_error()]]</tt> function.

=== Error Codes ===
Error codes are slugs that are used to identify each error. They are mostly useful when a piece of code can produce several different errors, and you want to handle each of those errors differently.

The error codes used in WordPress are not integers, but strings, with any spaces between words replaced with underscores (example: <tt>an_error_code</tt>). The error codes used in WordPress are usually based on the error message associated with that code.

==Methods and Properties==

===Properties===

;	<tt>$errors</tt>
:		Array containing the list of errors.
;	<tt>$error_data</tt>
:		Array containing the list of data for error codes.

'''Note:''' Since 4.0, these properties are private, see [https://core.trac.wordpress.org/changeset/28511 <nowiki>[28511]</nowiki>]. Then were then made public again in [https://core.trac.wordpress.org/changeset/31138 <nowiki>[31138]</nowiki>].

===Methods===


;	<tt>__construct( $code = <nowiki>''</nowiki>, $message = <nowiki>''</nowiki>, $data = <nowiki>''</nowiki> )</tt>
:		Sets up the error message. All parameters are optional, and if the <tt>$code</tt> parameter is empty, the other parameters will be ignored. When you pass a value for the  <tt>$code</tt> parameter, the <tt>$message</tt> will be added for that code, even if you did not pass a value for <tt>$message</tt> (but <tt>$data</tt> will be used only when you pass a value for <tt>$data</tt>). It is possible to add multiple messages to the same code by using other methods in the class.

;	<tt>get_error_codes()</tt>
:		Retrieve all error codes. Access public, returns array List of error codes, if available.

;	<tt>get_error_code()</tt>
:		Retrieve first error code available. Access public, returns string, int or Empty if there is no error codes

;	<tt>get_error_messages($code)</tt>
:		Retrieve all error messages or error messages matching code. Access public, returns an array of error strings on success, or empty array on failure (if using code parameter)

;	<tt>get_error_message($code)</tt>
:		Get single error message. This will get the first message available for the code. If no code is given then the first code available will be used. Returns an error string.

;	<tt>get_error_data($code)</tt>
:		Retrieve error data for error code. Returns mixed or null, if no errors.

;	<tt>add($code, $message, $data)</tt>
:		Append more error messages to list of error messages. No return.

;	<tt>add_data($data, $code)</tt>
:		Add data for error code. The error code can only contain one error data. No return.

;	<tt>remove($code)</tt>
:		Remove any messages and data associated with an error code. No return.

===Example===
 function doer_of_stuff() {
     return new WP_Error( 'broke', __( "I've fallen and can't get up", "my_textdomain" ) );
 }
 
 $return = doer_of_stuff();
 if( is_wp_error( $return ) ) {
     echo $return->get_error_message();
 }

== Source ==
<tt>WP_Error</tt> is located in {{Trac|wp-includes/class-wp-error.php}}

== Change Log ==
* In [[Version_4.2 | 4.2.0]]: Errors and data arrays public again; magic methods removed (see [https://core.trac.wordpress.org/ticket/30891 Trac ticket #30891])
* In [[Version_4.1 | 4.1.0]]: Added <tt>remove()</tt> method.
* In [[Version_4.0 | 4.0.0]]: Errors and data arrays became private, added magic access methods for backwards compatibility.
* Introduced in [[Version_2.1 | 2.1.0]]

== Related ==

* see [[Function_Reference/is_wp_error|is_wp_error()]] for more information on trapping for errors (particularly useful when faced with the dreaded 'Catchable fatal error: Object of class WP_Error could not be converted to string')

== Resources ==
* [http://code.tutsplus.com/tutorials/wordpress-error-handling-with-wp_error-class-i--cms-21120 WordPress Error Handling with WP_Error Class]

{{Class Footer}}

[[Category:Classes]]
[[Category:Error Handling]]