{{Languages|
{{en|Giving WordPress Its Own Directory}}
{{fr|Donner_à_WordPress_son_Propre_Dossier}}
{{ja|Giving WordPress Its Own Directory}}
{{pl|Instalacja WordPressa w podkatalogu}}
{{ru|Размещаем WordPress в отдельном каталоге}}
{{pt-br|WordPress em Diretório Próprio}}
}}

__TOC__

Some people want their WordPress URL to coincide with their website's root (e.g. <tt><nowiki>http://example.com</nowiki></tt>) but they don't want all of the WordPress files cluttering up their root directory. WordPress allows you to install it into a subdirectory, but have your website served from the website root.

As of [[Version 3.5|Version 3.5]], Multisite users may use all of the functionality listed below. If you are running a version of WordPress older than 3.5, please update before installing a Multisite WordPress install on a subdirectory.

'''Note to theme/plugin developers:''' this will not separate your code from  WordPress. Themes and plugins will still reside under wp-content folder.

'''Caveat:''' ''Do this at your own risk.'' For most site owners, it is not recommended to put WordPress in a different directory unless you have a ''very good reason'', and are an ''experienced and highly skilled WordPress developer'', as this can cause issues with a ''lot'' of plugins.

=Moving a Root install to its own directory=

Let's say you've installed wordpress at `example.com`. Now you have two different methods to move wordpress installations into subdirectory: 
1) Without change of site URL (remains `example.com`) 
2) With change in site URL (it will redirect to `example.com/subdirectory`)


== Method I (Without URL change)==

1) After Installing the wordpress in root folder, move EVERYTHING from root folder into subdirectory. 

2)  Create a `.htaccess` file in root folder, and put this content inside (just change <tt>example.com</tt> and <tt>my_subdir</tt>):

<pre>
<IfModule mod_rewrite.c>
RewriteEngine on
RewriteCond %{HTTP_HOST} ^(www.)?example.com$
RewriteCond %{REQUEST_URI} !^/my_subdir/
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.*)$ /my_subdir/$1
RewriteCond %{HTTP_HOST} ^(www.)?example.com$
RewriteRule ^(/)?$ my_subdir/index.php [L] 
</IfModule>
</pre>

3.) Change the instances of "my_subdir" in lines 4, 7 and 9 to use the name of your subdirectory

4.) Change the instances of "example.com" to match your site's domain name.

5.) Save/upload the file

That's all :)

== Method II (With URL change)==

=== Moving process ===
(p.s. If you've already installed WP in subdirectory, some steps might be already done automatically).

# Create the new location for the core WordPress files to be stored (we will use <tt>/wordpress</tt> in our examples). (On linux, use <tt>mkdir wordpress</tt> from your <tt>www</tt> directory. You'll probably want to use <tt>chown apache:apache</tt> on the <tt>wordpress</tt> directory you created.)
# Go to the [[Administration_Screens#Settings|General]] Screen.
# In '''WordPress address (URL):''' set the address of your main WordPress core files. Example: <tt><nowiki>http://example.com/wordpress</nowiki></tt>
# In '''Site address (URL):''' set root directory's URL. Example: <tt><nowiki>http://example.com</nowiki></tt>
# Click '''Save Changes'''. (Do not worry about the errors that happen now! Continue reading)
# Now move your WordPress core files (from root directory) to the subdirectory.
# Copy (NOT MOVE!) the <tt>index.php</tt> and <tt>.htaccess</tt> files from the WordPress directory into the root directory of your site (Blog address). The <tt>.htaccess</tt> file is invisible, so you may have to set your FTP client to [[Changing_File_Permissions#Unhide_the_hidden_files|show hidden files]]. If you are not using [[Using_Permalinks#Using_.22Pretty.22_permalinks|pretty permalinks]], then you may not have a .<tt>htaccess</tt> file. <i><b>If you are running WordPress on a Windows (IIS) server</b> and are using pretty permalinks, you'll have a <tt>web.config</tt> rather than a <tt>.htaccess</tt> file in your WordPress directory. For the <tt>index.php</tt> file the instructions remain the same, copy (don't move) the index.php file to your root directory. The <tt>web.config</tt> file, must be treated differently than the <tt>.htaccess</tt> file so you must MOVE (DON'T COPY) the <tt>web.config</tt> file to your root directory.</i>
# Open your root directory's <tt>index.php</tt> file in a [[Glossary#Text editor|text editor]]
# Change the following and save the file. Change the line that says:<br /><tt>require( dirname( __FILE__ ) . '/wp-blog-header.php' );</tt><br />to the following, using your directory name for the WordPress core files:<br /><tt>require( dirname( __FILE__ ) . '/wordpress/wp-blog-header.php' );</tt>
# Login to the new location. It might now be <tt><nowiki>http://example.com/wordpress/wp-admin/</nowiki></tt>
# If you have set up [[Using Permalinks|Permalinks]], go to the [[Administration_Screens#Permalinks|Permalinks Screen]] and update your Permalink structure. WordPress will automatically update your <tt>.htaccess</tt> file if it has the appropriate file permissions. If WordPress can't write to your <tt>.htaccess</tt> file, it will display the new rewrite rules to you, which you should manually copy into your <tt>.htaccess</tt> file (in the same directory as the main <tt>index.php</tt> file.)

=== .htaccess modification ===
In some cases, some people like to install separate versions in a subdirectory (such as /2010, /2011, /latest and etc..), and want that website (by default) used the latest version, then Install WordPress in a subdirectory, such as <code>/my_subdir</code> and in your root folder's  .htaccess file add the following  (just change the words as you need):
<pre>
RewriteEngine On
RewriteCond %{HTTP_HOST} ^(www.)?example.com$
RewriteRule ^(/)?$ my_subdir [L]
</pre>


Now when users go to your root domain (example.com), it will automatically redirect to the subdirectory you specified. 

Note: This code comes from Site 5's post here: [https://qa.site5.com/advanced/how-to-redirect-your-domain-to-a-subfolder-using-htaccess/ How to Redirect Your Domain to a Subfolder Using .htaccess].

==Moving Specific WordPress Folders==
The following links explains how to change specific directories within WordPress:
*[[Editing_wp-config.php#Moving_wp-content_folder|Moving wp-content folder]]
*[[Editing_wp-config.php#Moving_plugin_folder|Moving Plugin Folder]]
*[[Editing_wp-config.php#Moving_themes_folder|Moving Themes Folder]]
*[[Editing_wp-config.php#Moving_uploads_folder|Moving Uploads Folder]]

 

[[Category:Installation]]
[[Category:WordPress Help]]
[[Category:Getting Started]]
[[Category:UI Link]]