{{Languages|
{{en|Styling Page-Links}}
{{pt-br|Estilos no Link de Páginas}}
}}

Did you know you could split a single post up into different web pages by just typing '''<nowiki><!--nextpage--></nowiki>''' in your post?  Called the '''Page-Link''' tag, place your cursor in the spot where you want a page break to appear in your post and type  '''<nowiki><!--nextpage--></nowiki>''' (you need to use the text mode of the editor to do so).  This technique can be used throughout a long post to make two or more pages out of a single post.  Note:  At one time there was a Next-Page quicktag button but it was deleted to [http://trac.wordpress.org/ticket/1345 reduce the clutter on the quicktag bar].

When you view your post on your site, the multi-page links appear as links at the bottom of the generated post and usually look like: 

<div style="border:1px solid blue; width:50%; color: blue; margin: 10px; padding:10px">Page <span style="color:black">1</span>, 2, 3</div>

==Examining the Page-Links Tag==

The default look for the page-links is shown above. The web page you are on isn't highlighted as a link but shown as a solid number.  If you do only a few multi-page posts, this might be all you need to have the reader continue reading the pages in sequence.

There are two template tags that may be used to style your page-links tag.  The [[Template_Tags/link_pages|link_pages()]] and [[Template_Tags/wp_link_pages|wp_link_pages()]] template tags.  The <tt>link_pages()</tt> tag uses ''strings'' in quotes as parameters and the <tt>wp_link_pages()</tt> uses [[Template_Tags/How_to_Pass_Tag_Parameters#Tags_with_PHP_function-style_parameters|boolean phrases]] as parameters.  Both do basically the same thing.

The default usage, shown above, for the <tt>wp_link_pages()</tt> tag is:

<pre><?php wp_link_pages(); ?></pre>

The parameters we'll be working with for the template tag are:
* '''before:''' Text to put before all the links. Defaults to <code>&lt;p&gt;Pages:</code>.
* '''after:''' Text to put after all the links. Defaults to <code>&lt;/p&gt;</code>.
* '''next_or_number:''' Indicates whether page numbers should be used. Valid values are <code>number</code> (Default) and <code>next</code>
* '''nextpagelink:''' Text for link to next page. Defaults to <code>Next page</code>.
* '''previouspagelink: (''string'') Text for link to previous page. Defaults to <code>Previous page</code>.
* '''pagelink:''' Format string for page numbers. The <code> % </code> in the parameter string will be replaced with the page number, so <code>Page %</code> generates "Page 1", "Page 2", etc. Defaults to <code>%</code>, just the page number.

You've seen the default look. Let's play with some other possibilities.

==Changing the Look of Page-Links==

By default, the page-links are in an HTML paragraph tag. Add a [[CSS]] class to the DIV section surrounding the paragraph tag and you have even more control over the look of the page-link tag.

The following use of the tag adds a DIV tag before and after the page-links, shows the word "Page" next to each page number, and when you are in the middle of the page order you will see the page number instead of the word "next", and lists the pages as shown below.

<pre><div class="pagelink"><?php wp_link_pages('pagelink=Page %'); ?></div></pre>

Let's give our style class "pagelink" a green color and italics:

<div style="border:1px solid blue; width:50%; margin: 20px; padding:20px; color: green; font-style: italic; padding:20px">Page 1   Page 2   Page 3</div>

Want to have more fun? Let's design these so they do more than just tell the reader "page 1".

<pre><?php wp_link_pages('before=To read this story, &amp;after=. &next_or_number=next
&amp;previouspagelink=you can go back to the previous page
&amp;nextpagelink= or you can read on to the next page'); ?> </pre>

If you were on page three of four pages, it might look like this:

<div style="border:1px solid blue; width:50%; padding:10px">To read this story, [[#Changing the Look of Page-Links|you can go back to the previous page]] [[#Changing the Look of Page-Links|or you can read on to the next page]].</div>


Using the <tt>wp_link_pages()</tt> you can add a [[Fun_Character_Entities|extended character or character entity]] to replace the '''next''' and '''previous''' for an interesting look.  Let's add the double right arrow &raquo; and double left arrow&laquo;.

<pre><?php wp_link_pages(array('next_or_number'=>'next', 'previouspagelink' => ' &amp;laquo; ', 'nextpagelink'=>' &amp;raquo;')); ?></pre>

And it might look like:

<div style="border:1px solid blue; width:50%; margin: 20px; padding:20px; padding:20px">Pages: <span style="color:blue">«  »</span></div>

:'''Note:''' ''When using [[Fun_Character_Entities|extended characters or HTML character entities]] with <tt>wp_link_pages()</tt>, pass in the parameters an array instead of a string. In string query format, the ampersand required to create the entity is seen by <tt>wp_link_pages()</tt> as the string delimiter and will not work.''

These are just a few samples and you can use your imagination to create a wide range of different styles and looks for your page links on your site or theme.

[[Category:WordPress Lessons]]