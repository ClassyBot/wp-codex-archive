== Description ==

This function is an alias to [[Function Reference/remove filter|remove_filter()]].

This function removes a function attached to a specified action hook. This method can be used to remove default functions attached to a specific action hook and possibly replace them with a substitute. See also [[Function Reference/remove filter|remove_filter()]], [[Function Reference/add action|add_action()]] and [[Function Reference/add filter|add_filter()]].

'''''Important:''' To remove a hook, the <tt>$function_to_remove</tt> and <tt>$priority</tt> arguments must match when the hook was added. This goes for both filters and actions. No warning will be given on removal failure.''

== Usage ==

%%%<?php remove_action( $tag, $function_to_remove, $priority ); ?>%%%

== Parameters ==

{{Parameter|$tag|string|The action hook to which the function to be removed is hooked.}}
{{Parameter|$function_to_remove|callable|The name of the function which should be removed.}}
{{Parameter|$priority|int|The priority of the function (as defined when the function was originally hooked).|optional|10}}

== Return ==

; (''boolean'') : Whether the function is removed.
:* <tt>True</tt> - The function was successfully removed.
:* <tt>False</tt> - The function could not be removed.

== Example ==

This function is identical to the [[Function Reference/remove filter|remove_filter()]] function.

%%% <?php remove_action( $tag, $function_to_remove, $priority ); ?> %%%

<code>remove_action()</code> must be called inside a function and cannot be called directly in your plugin or theme. 

<pre>
add_action( 'wp_head', 'remove_my_action' );
function remove_my_action(){
	remove_action( 'wp_footer', 'function_being_removed' );
}
</pre>

If an action has been added from within a <em>class</em>, for example by a plugin, removing it will require accessing the class through a variable that holds the class instance.
<pre>
add_action( 'wp_head', 'remove_my_class_action' );
function remove_my_class_action(){
	global $my_class;
	remove_action( 'wp_footer', array( $my_class, 'class_function_being_removed' ) );
}
</pre>

Unless the function is static in which case you could call the class and function directly.
<pre>
add_action( 'wp_head', 'remove_my_class_action' );
function remove_my_class_action(){
	remove_action( 'wp_footer', array( 'My_Class', 'class_function_being_removed' ) );
}
</pre>

<strong>Notes</strong>
<ol><li>You may need to prioritize the removal of the action to a hook that occurs after the action is added.</li> 
<li>You cannot successfully remove the action before it has been added.</li> 
<li>You also cannot remove an action after it has been run.</li>   
<li>To remove an action the priority must match the priority with with the function was originally added.</li>
</ol>

== Notes ==

== Change Log ==

Since: 1.2.0

== Source File ==

<tt>remove_action()</tt> is located in {{Trac|wp-includes/plugin.php}}.

== Related ==

{{Action Tags}}

{{Tag Footer}}

[[Category:Functions]]