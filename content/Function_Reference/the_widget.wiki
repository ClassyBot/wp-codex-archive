{{Languages|
{{en|Template Tags/the_widget}}
{{ja|テンプレートタグ/the_widget}}
}}

{{Stub}}

== Description ==

This template tag displays an arbitrary widget outside of a sidebar. It can be used anywhere in [[Templates|templates]].

== Usage ==

%%% <?php the_widget( $widget, $instance, $args ); ?> %%%

== Parameters ==

{{Parameter|$widget|string|The widget's PHP class name. The classes for the widgets included with WordPress are:
:* WP_Widget_Archives -- [[#Archives widget|Archives]]
:* WP_Widget_Calendar -- [[#Calendar widget|Calendar]]
:* WP_Widget_Categories -- [[#Categories widget|Categories]]
:* WP_Widget_Links -- [[#Links widget|Links]]
:* WP_Widget_Meta -- [[#Meta widget|Meta]]
:* WP_Widget_Pages -- [[#Pages widget|Pages]]
:* WP_Widget_Recent_Comments -- [[#Recent Comments widget|Recent Comments]]
:* WP_Widget_Recent_Posts -- [[#Recent Posts widget|Recent Posts]]
:* WP_Widget_RSS -- [[#RSS widget|RSS]]
:* WP_Widget_Search -- [[#Search widget|Search]] (a search from)
:* WP_Widget_Tag_Cloud -- [[#Tag Cloud widget|Tag Cloud]]
:* WP_Widget_Text -- [[#Text widget|Text]]
:* WP_Nav_Menu_Widget}}

{{Parameter|$instance|array&#124;string|The widget's instance settings. Either an array or [[Template Tags/How to Pass Tag Parameters#Tags with query-string-style parameters| query-style string]]. See each widget below for examples.|optional|<tt>array()</tt>}}

{{Parameter|$args|array&#124;string|The widget's sidebar args. Either an array or [[Template Tags/How to Pass Tag Parameters#Tags with query-string-style parameters| query-style string]]. If empty, it defaults to:

:; before_widget
:: (string) the text or HTML befor the widget.
:: Default： <nowiki><div class="widget {widget's classname}"></nowiki>
:; after_widget
:: (string) the text or HTML after the widget.
:: Default： <nowiki></div></nowiki>
:; before_title
:: (string) the text or HTML before the widget's title.
:: Default： <nowiki><h2 class="widgettitle"></nowiki>
:; after_title
:: (string) the text or HTML after the widget's title.
:: Default： <nowiki></h2></nowiki>
|optional|<tt>array()</tt>}}

== Archives widget ==

Display a monthly archive list.

%%% <?php the_widget( 'WP_Widget_Archives', $instance, $args ); ?> %%%

* widget's classname: <code>widget_archive</code>
* instance:
*; title 
*: The title of archive list. Default: <code>__('Archives')</code>
*; count 
*: Display number of posts in each archive (1). The ''show_post_count'' parameter of [[Template Tags/wp_get_archives|wp_get_archives]]. Default: 0 (hide)
*; dropdown 
*: Display as drop-down list (1). Default: 0 (an unordered list)

=== Examples ===

Default usage:
%%% <?php the_widget( 'WP_Widget_Archives' ); ?> %%%

Display drop-down list:
%%% <?php the_widget( 'WP_Widget_Archives', 'dropdown=1' ); ?> %%%

<div id="Calendar_widget">
== Calendar widget ==

Displays a Calendar.

%%% <?php the_widget( 'WP_Widget_Calendar', $instance, $args ); ?> %%%

* widget's classname: <code>widget_calendar</code>
* instance:
*; title 
*: The title of calendar. Default: <code>&nbsp;</code>

=== Example ===

Default usage:
%%% <?php the_widget( 'WP_Widget_Calendar' ); ?> %%%

== Categories widget ==

Displays a list of categories.

%%% <?php the_widget( 'WP_Widget_Categories', $instance, $args ); ?> %%%

* widget's classname: <code>widget_categories</code>
* instance:
*; title 
*: The title of categories list. Default: <code>__( 'Categories' )</code>
*; count 
*: Display number of posts in each category. The ''show_count'' parameter of [[Template Tags/wp_dropdown_categories|wp_dropdown_categories]] or [[Template Tags/wp_list_categories|wp_list_categories]]. Default: 0 (hide)
*; hierarchical 
*: Display sub-categories as nested items inside the parent category (1). Default: 0 (in-line)
*; dropdown 
*: Display as dropdown list (1). Default: 0 (an unordered list)

=== Examples ===

Default usage:
%%% <?php the_widget('WP_Widget_Categories'); ?> %%%

Display a dropdown list with number of posts.
%%% <?php the_widget( 'WP_Widget_Categories', 'dropdown=1&count=1' ); ?> %%%

== Custom HTML widget ==

Displays arbitrary HTML.
%%% <?php the_widget( 'WP_Widget_Custom_HTML', $instance, $args ); ?> %%%

* widget's classname: <code>widget_custom_html</code>
* instance:
*; title 
*: The title for the content. Default: <code>''</code>
*; content
*: arbitrary HTML. Default: <code>''</code>

=== Examples ===

Default usage:
%%% <?php the_widget('WP_Widget_Custom_HTML', array('title' => 'Example', 'content' => '<p>Basic example.</p>')); ?> %%%

== Links widget ==

Displays a list of links (blogroll) in categories.

%%% <?php the_widget( 'WP_Widget_Links', $instance, $args ); ?> %%%

* widget's classname: <code></code>
* instance:
*; title 
*: The title of the Links section.
*; category 
*: Link category IDs , separated by commas, to display. The ''category'' parameter of [[Template Tags/wp_list_bookmarks|wp_list_bookmarks]]. Default: false (display all of link categories)
*; description 
*: Display description of link (1 - true). The ''show_description'' parameter. Default: false (hide)
*; rating 
*: Display rating of link (1- true). The ''show_rating'' parameter. Default: false (hide)
*; images 
*: Display image of link (1 - true). The ''show_images'' parameter. Default: true (show)
*; name 
*: If display link image, output link name to the <code>alt</code> attribute. The ''show_name'' parameter. Default: false

=== Examples ===

Default usage:
%%% <?php the_widget( 'WP_Widget_Links' ); ?> %%%

Display lists in category IDs 2 or 3:
%%% <?php the_widget( 'WP_Widget_Links', 'category=2,3' ); ?> %%%

== Meta widget ==

Display site meta. (Log in/out, admin, feed and WordPress links )

%%% <?php the_widget( 'WP_Widget_Meta', $instance, $args ); ?> %%%

* widget's classname: <code>widget_meta</code>
* instance:
*; title 
*: The title of meta section. Default: <code>__( 'Meta' )</code>

=== Example ===

Default usage:
%%% <?php the_widget( 'WP_Widget_Meta' ); ?> %%%

== Pages widget ==

Display a list of [[Pages]].

%%% <?php the_widget( 'WP_Widget_Pages', $instance, $args ); ?> %%%

* widget's classname: <code>widget_pages</code>
* instance:
*; title 
*: The title of Pages list. Default: <code>__( 'Pages' )</code>
*; sortby 
*: The ''sort_column'' parameter of [[Template Tags/wp_list_pages|wp_list_pages]]. Default: <code>menu_order</code>
*; exclude 
*: Page IDs, separated by commas, to be excluded from the list. Default: null (show all of Pages)

=== Examples ===

Default usage:

<pre> the_widget( 'WP_Widget_Pages' ); </pre>

<h3>Contents</h3> as the heading, sort by last modified date:

<pre> the_widget('WP_Widget_Pages', 'title=Contents&sortby=post_modified', 'before_title=<h3>&after_title=</h3>'); </pre>

== Recent Comments widget ==

Display to a list of recent comments.

%%% <?php the_widget( 'WP_Widget_Recent_Comments', $instance, $args ); ?> %%%

* widget's classname: <code>widget_recent_comments</code>
* instance:
*; title 
*: The title of comment list. Default: <code>__( 'Recent Comments' )</code>
*; number 
*: Number of comments to show (at most 15). Default: 5

=== Example ===

Default usage:
%%% <?php the_widget( 'WP_Widget_Recent_Comments' ); ?> %%%

== Recent Posts widget ==

Display to a list of recent posts.

%%% <?php the_widget( 'WP_Widget_Recent_Posts', $instance, $args ); ?> %%%

* widget's classname: <code>widget_recent_entries</code>
* instance:
*; title 
*: The title of post list. Default: <code>__('Recent Posts')</code>
*; number 
*: Number of posts to show (at most 15). Default: 10

=== Example ===

Default usage:
%%% <?php the_widget( 'WP_Widget_Recent_Posts' ); ?> %%%

== RSS widget ==

Display a list of entries from any RSS or Atom feed.

%%% <?php the_widget( 'WP_Widget_RSS', $instance, $args ); ?> %%%

* widget's classname:
* instance :
*; title
*: The title of list
*: Default: the title inherited from the RSS or Atom feed
*; url
*: RSS or Atom feed URL to include.
*; items
*: the number of RSS or Atom items to display
*; show_summary
*; show_author
*; show_date

=== Example ===

Default usage:
%%% <?php the_widget( 'WP_Widget_RSS' ); ?> %%%

== Search widget ==

%%% <?php the_widget( 'WP_Widget_Search', $instance, $args ); ?> %%%

* widget's classname: <code>widget_search</code>
* instance:
*; title 
*: The title of search form. Default: null

=== Example ===

Default usage:
%%% <?php the_widget( 'WP_Widget_Search' ); ?> %%%

== Tag Cloud widget ==

%%% <?php the_widget( 'WP_Widget_Tag_Cloud', $instance, $args ); ?> %%%

* widget's classname: 
* instance:
*; title 
*: The title of tag cloud. default: <code>__( 'Tags' )</code>
*; taxonomy
*: The taxonomy the cloud will draw tags from. default: <code>post_tag</code>

=== Example ===

Default usage:
%%% <?php the_widget( 'WP_Widget_Tag_Cloud' ); ?> %%%

== Text widget ==

%%% <?php the_widget( 'WP_Widget_Text', $instance, $args ); ?> %%%

* widget's classname: <code>widget_text</code>
* instance:
** title
** text
** filter

=== Example ===

Default usage:
%%% <?php the_widget( 'WP_Widget_Text' ); ?> %%%


== Custom Widget ==

Display custom widget in template.

%%% <?php the_widget( 'My_Custom_Widget', $instance, $args ); ?> %%%

* widget's classname: WIDGET CLASS NAME (for example see below)
* instance: (optional)
* arguments: (optional)

=== Example ===

Default usage:

<code>class <strong>My_Custom_Widget</strong> extends WP_Widget 
{ 
/* your code* / 
}</code>

%%% <?php the_widget( 'My_Custom_Widget' ); ?> %%%


== Notes ==

* Uses: global <tt>$wp_widget_factory</tt> - To retrieve the widget object.
* Uses: <tt>[[Function_Reference/do_action | do_action()]]</tt> - Calls <tt>[[Plugin_API/Action_Reference/the_widget | 'the_widget']]</tt> with <tt>$widget</tt>, <tt>$instance</tt> and <tt>$args</tt>.

== Change Log ==

* Since [[Version 2.8|2.8.0]]

== Source File ==

<tt>the_widget()</tt> is located in {{Trac|wp-includes/widgets.php}}

== Resources ==

* {{Trac|wp-includes/default-widgets.php}} - Source code for the widgets included in WordPress Core.
* [https://core.trac.wordpress.org/ticket/9701 Ticket #9701] - Add a the_widget() function to output a generic widget anywhere in a template.

== Related ==

{{Widget Tags}}

{{Tag Footer}}

[[Category:Template Tags]]
[[Category:Widgets]]
[[Category:New page created]]