== Description ==
Retrieve user option that can be either per Site or per Network.

If the user ID is not given, then the current user will be used instead. The filter for the result will also pass the original option name and finally the user data object as the third parameter. 

The function will first check for the site-specific user metadata, then the network-wide user metadata. The option can either be modified or set by a plugin. 

== Usage ==
%%%<?php get_user_option( $option, $user ) ?>%%%

== Parameters ==
{{Parameter|$option|string|User option name.}}
{{Parameter|$user|integer|User ID. If not given, the current user will be used.|optional|0}}
{{Parameter|$deprecated|string|This parameter is no longer used. Setting it will generate a deprecated argument notice.|optional|Empty string}}

== Return Values ==
; (mixed) : Option value on success, false on failure

== Examples ==

<pre>
<?php

$bar = get_user_option( 'show_admin_bar_front', get_current_user_id() );

if (  $bar == 'true' ) {
	echo 'The admin bar is enabled';
} else {
	echo 'The admin bar is disabled';
}

?>
</pre>

== Notes ==
* Uses: [[Function_Reference/apply_filters|<tt>apply_filters()</tt>]] Calls <tt>'get_user_option_$option'</tt> hook with result, option parameter, and user data object.
* Uses global: (<tt>object</tt>) [[Class Reference/wpdb|<tt>$wpdb</tt>]] WordPress database object for queries.

== Change Log ==
* [[Version_3.0|3.0.0]] - The <tt>$check_blog_options</tt> parameter was deprecated, and the function no longer checks the options table if the option isn't found in <tt>[[Database_Description#Table:_wp_usermeta | wp_usermeta]]</tt>. See [https://core.trac.wordpress.org/ticket/11615 #11615].
* Since: [[Version_2.0|2.0.0]]

== Source File ==
<tt>get_user_option()</tt> is located in {{Trac|wp-includes/user.php}}.

== Related ==
{{User_Meta_Tags}}
{{Tag Footer}}

[[Category:Functions]]