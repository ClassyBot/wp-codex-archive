==Description==
Get filesystem credentials from the user, to be passed to WP_Filesystem.

==Usage==

<pre>
$creds = request_filesystem_credentials( 
	 $form_post,
	 "",         // type
	 false,      // error
	 false,      // context
	 null,       // extra_fields
	 false      // allow_relaxed_file_ownership
);
if ( false === $creds ) {
	return; 
}
</pre>

==Parameters==

{{Parameter|$form_post|string|The URL that the resulting form should be posted to. Most likely the URL should be created with wp_nonce_url().}}
{{Parameter|$type|string|The type of method to use for the WP_Filesystem. This is normally determined automatically, and so should remain a blank string. Useful for debugging only.|optional|blank string}}
{{Parameter|$error|boolean|false if no error was detected, true if there's an error in initializing the WP_Filesystem class.|optional|false}}
{{Parameter|$context|string/false|the directory path to test for filesystem methods in. Or false for the default case|optional|false}}
{{Parameter|$extra_fields|array of strings/null|An array of form field names to "pass-through" the credentials form. Information in the $_POST array will be used along with this array to build hidden inputs into the POST form, so that the data returns with credentials for later processing. Null if no extra fields are needed.|optional|false}}

== Return values ==

On success, returns credentials to be passed to the WP_Filesystem class directly. If credentials are needed, a credentials form is output to the user and false is returned.

== Further Reading ==

* [[Filesystem API]]
* [http://ottopress.com/2011/tutorial-using-the-wp_filesystem/ Tutorial: Using the WP_Filesystem]

== Source File ==
<tt>request_filesystem_credentials()</tt> is located in {{Trac|/wp-admin/includes/file.php}}.

[[Category:Functions|*]]