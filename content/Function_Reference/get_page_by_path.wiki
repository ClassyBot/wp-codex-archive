{{Languages|
{{en|Function Reference/get_page_by_path}}
{{ja|関数リファレンス/get_page_by_path}}
}}

== Description ==
Retrieves a page or other post object given its path.

== Usage ==
%%%<?php get_page_by_path( $page_path, $output, $post_type ); ?>%%%

== Parameters ==
{{Parameter|$page_path|string|Page path.}}
{{Parameter|$output|string|Output type. <tt>OBJECT</tt>, <tt>ARRAY_N</tt>, or <tt>ARRAY_A</tt>.|optional|OBJECT}}
{{Parameter|$post_type|string or array|Post type or array of post types.|optional|'page'}}

== Return Values ==
; (WP_Post|null) : WP_Post on success or null on failure.

== Examples ==
=== Page Path ===
This is the equivalent of the '<tt>pagename</tt>' query, as in: '<tt>index.php?pagename=parent-page/sub-page</tt>'.

Code for the above could be written as (assuming '<tt>parent-page/sub-page</tt>' is actually the path to a page):
 get_page_by_path('parent-page/sub-page');
<!-- Need creative examples. Feel free to link to external examples. -->

For non-hierarchical custom post types, you need to use just the slug in tandem with the post_type parameter.

 //Returns nothing, assumes animals is the rewrite slug for the animal CPT
 get_page_by_path('animals/cat', OBJECT, 'animal');
 
 //Returns the animal with the slug 'cat'
 get_page_by_path('cat', OBJECT, 'animal');

The functions basename() and untrailingslashit() are handy for grabbing the last part of the URL for this:

 $page_path = 'animals/cat/';
 get_page_by_path( basename( untrailingslashit( $page_path ) ) , OBJECT, 'animal');

== Notes ==
* Uses global: (<tt>object</tt>) [[Class Reference/wpdb|<tt>$wpdb</tt>]]
* Returns <tt>false</tt> for "private" pages/posts

== Change Log ==
Since: 2.1.0

== Source File ==
<!-- Need links to current source code files -->
<tt>get_page_by_path()</tt> is located in {{Trac|wp-includes/post.php}}.

== Related ==
{{Page Tags}}

{{Tag Footer}}

[[Category:Functions]]