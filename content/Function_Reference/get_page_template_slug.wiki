== Description ==

Get the specific template name for a page or any post type.

== Usage ==

%%% <?php get_page_template_slug( $post_id ); ?> %%%

== Parameters ==

{{Parameter|$post_id|integer|The page ID to check.|optional|The current post, when used in the [[The Loop]].}}

== Return Values ==

{{Return||string/bool|Returns [[Page_Templates|page template]] filename. Returns an empty string when the default page template is in use. Returns false if the post is not a page.}}

== Examples ==
Display the page template filename of the current Page:
<pre><?php echo get_page_template_slug( $post->ID ); ?></pre>

== Notes ==

* Uses: [[Function_Reference/get_post|<tt>get_post()</tt>]]
* Uses: [[Function_Reference/get_post_meta|<tt>get_post_meta()</tt>]]

The filename of a Page's assigned custom template is stored as the value of a [[Custom_Fields|Custom Field]] with a key named <tt>'_wp_page_template'</tt> (in the [[Database_Description#Table:_wp_postmeta|<tt>wp_postmeta</tt>]] database table). If the template is stored in a Theme's subdirectory (or a Parent Theme's subdirectory of a Child Theme), the value of the <tt>wp_postmeta</tt> is both the folder and file names, e.g.:
<pre>my-templates/my-custom-template.php</pre>

The function <tt>get_page_template_slug()</tt> returns an empty string when the value of <tt>'_wp_page_template'</tt> is either empty or <tt>'default'</tt>.

Custom fields starting with an underscore do ''not'' display in the Edit screen's Custom Fields module. To retrieve a Page's custom template metadata, you can also use:
<pre>get_post_meta( $post->ID, '_wp_page_template', true )</pre>

== Change Log ==

Since: 3.4.0

== Source File ==
<tt>get_page_template_slug()</tt> is located in {{Trac|wp-includes/post-template.php}}

== Related ==

[[Function_Reference/get_page_template|get_page_template()]], [[Function_Reference/get_page_templates|get_page_templates()]], [[Function_Reference/is_page_template|is_page_template()]]

{{Tag Footer}}

[[Category:Functions]]
[[Category:New_page_created]]