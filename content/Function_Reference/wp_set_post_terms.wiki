{{Languages|
{{en|Function Reference/wp_set_post_terms}}
{{it|Riferimento_funzioni/wp_set_post_terms}}
{{ja|関数リファレンス/wp_set_post_terms}}
}}

== Description ==
Set terms for a post.<br />
This function will work on any post type. Alternatively, wp_set_object_terms() can be used.<br />
Uses <code>[[Function Reference/wp set object terms|wp_set_object_terms()]]</code>.

== Usage ==
%%%<?php wp_set_post_terms( $post_id, $terms, $taxonomy, $append ) ?>%%%

== Parameters ==
{{Parameter|$post_id|integer|Post ID.|required|0}}
{{Parameter|$terms|string,array|List of terms. Can be an array or a comma separated string. If you want to enter terms of a hierarchical taxonomy like categories, then use IDs. If you want to add non-hierarchical terms like tags, then use names.|optional|array}}
{{Parameter|$taxonomy|string|Possible values for example: 'category', 'post_tag', 'taxonomy slug'|optional|post_tag|}}
{{Parameter|$append|boolean|If true, tags will be appended to the post. If false, tags will replace existing tags.|optional|false}}

== Return Values ==
; <tt>(array&#124;boolean&#124;WP_Error&#124;string)</tt> :

* (array) An array of the terms affected if successful,
* (boolean) false if integer value of $post_id evaluates as false (<tt>if ( ! (int) $post_id )</tt>),
* (WP_Error) The WordPress Error object on invalid taxonomy (<tt>'invalid_taxonomy'</tt>).
* (string) The first offending term if a term given in the $terms parameter is named incorrectly. (Invalid term ids are accepted and inserted).

== Hooks ==
*Action '''set_object_terms''' in {{Trac|wp-includes/taxonomy.php}}


== Examples ==
<!-- Need creative examples. Feel free to link to external examples. -->

== Notes ==
For hierarchical terms (such as categories), you must always pass the id rather than the term name to avoid confusion where there may be another child with the same name.

To get the term id you can use:
<pre>$term_id = term_exists( $term, $taxonomy, $parent );</pre>

You may also need to pass by reference:
<pre>wp_set_post_terms( $post_id, $term, $taxonomy );</pre>

For non-hierarchical terms (such as tags), you can pass either the term name or id. If you pass the id there is only one caveat: You must pass it as an integer, and it <em>must</em> be in an array. This is necessary because any non-array value passed will be converted to a string, which will be interpreted as a term name.

<pre>
$tag = '5'; // Wrong. This will add the tag with the *name* '5'.
$tag = 5; // Wrong. This will also add the tag with the name '5'.
$tag = array( '5' ); // Wrong. Again, this will be interpreted as a term name rather than an id.

$tag = array( 5 ); // Correct. This will add the tag with the id 5.
wp_set_post_terms( $post_id, $tag, $taxonomy );
</pre>


* Uses: [[Function_Reference/wp_set_object_terms|<tt>wp_set_object_terms()</tt>]]

== Change Log ==
Since: [[Version 2.8|2.8.0]]

== Source File ==
<tt>wp_set_post_terms()</tt> is located in {{Trac|wp-includes/post.php}}.

== Related ==
<!--
    To Do:
    Need to find related functions.
    Need to create groups of functions and create templates to add them to a page quickly.
    Some functions may be related to many groups of functions.
-->

{{Term Tags}}
<!-- To edit this Template go to:
http://codex.wordpress.org/Template:Term_Tags
-->
{{Tag Footer}}

[[Category:Functions]]
[[Category:New_page_created]]