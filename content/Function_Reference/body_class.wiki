{{#dotorgredirect:https://developer.wordpress.org/reference/functions/body_class/}}

{{Languages|
{{en|Template Tags/body_class}}
{{ja|テンプレートタグ/body class}}
}}
{{Copyedit}}
== Description ==
Themes have a template tag for the body tag which will help theme authors to style more effectively with CSS. The Template Tag is called <code>'''body_class'''</code>. This function gives the <code>body</code> element different classes and can be added, typically, in the header.php's HTML <code>body</code> tag.

== Usage ==
%%%<body <?php body_class( $class ); ?>> %%%

== Parameters ==

[[Template Tags/How to Pass Tag Parameters#Tags with PHP function-style parameters|How to pass parameters to tags with PHP function-style parameters]]

{{Parameter|class|string or array|One or more classes to add to the class attribute, separated by a single space.|optional|null}}

== Default Values ==

The <tt>body_class</tt> CSS classes appear based upon the pageview [[Conditional Tags]] as follows.

=== Front Page ===
Site front page: '''home'''

* If the site front page displays the blog posts index: '''home blog'''.
* If the site front page displays a static page: '''home page'''.

=== Blog Posts Index ===
Blog posts index: '''blog'''

* If the blog posts index is displayed on the site front page: '''home blog'''
* If the blog posts index is displayed on a static page: '''page blog'''

=== Single Post ===
Single post pages: '''single postid-{ID}'''

* Single blog post page: '''single-post'''
* Single custom post type page: '''single-{posttype}'''
* Post Formats (if supported): 
** Post format assigned: '''single-format-{format}'''
** No post format assigned: '''single-format-standard'''
* Single attachment pages: '''attachment single-attachment attachmentid-{ID} attachment-mime-type'''

=== Archives ===
Archive index pages: '''archive''' 

* Date archive index pages: '''date''' 
* Custom Post Type archive index pages: '''post-type-archive post-type-archive-{posttype}'''
* Author archive index pages: '''archive author author-user_nicename''' 
* Category archive index pages: '''archive category category-slug''' 
* Tag archive index pages: '''archive tag tag-slug''' 
* Taxonomy archive index pages: '''tax-{taxonomy} term-{term} term-{ID}'''
** Post Format archive index pages: '''tax-post_format term-post-format-{format} term-{ID}'''

=== Page ===
Static page: '''page page-id-{ID}'''

* Page Hierarchy
** Parent page: '''page-parent'''
** Child page: '''page-child parent-pageid-{ID}'''
* Page Templates
** Page template: '''page-template page-template-{directory}{filename}-php''' if [[Page_Templates|custom page template]] is assigned, or '''page-template-default''' if no custom page template is assigned.

=== Search ===
Search results page: '''search'''

* Results: '''search-results''' 
* No results: '''search-no-results'''

=== Paged/Multiple Pages ===

Multi-page index pages and paginated posts: '''paged'''. 
Multi-page index pages and paginated posts with more than 2 pages '''paged paged-n'''.

* Single Blog Post: '''single-paged-n'''
* Static Page: '''page-paged-n'''
* Category archive index: '''category-paged-n'''
* Tag archive index: '''tag-paged-n'''
* Date archive index: '''date-paged-n'''
* Author archive index: '''author-paged-n'''
* Search results index: '''search-paged-n'''
* Custom Post Type archive index: '''post-type-paged-n'''

=== 404 Page Error ===
Error 404 page: '''error404'''

=== Logged-in ===
If the current user is logged in: '''logged-in'''

=== Text Direction ===
If text direction is set to "right-to-left": '''rtl'''

=== Custom Background ===
If using [[Appearance Background Screen|Custom Background]] to display the site background image or color the class selectors: '''custom-background '''

=== Admin Toolbar ===
If the admin toolbar is displayed: '''admin-bar no-customize-support'''

== Examples ==

=== Implementation ===
The following example shows how to implement the <code>body_class</code> template tag into a theme. 

 <body <?php body_class(); ?>>

The actual HTML output might resemble something like this (the '''About the Tests''' page from the Theme Unit Test):

 <body class="page page-id-2 page-parent page-template-default logged-in">

In the WordPress Theme stylesheet, add the appropriate styles, such as:

<pre>.page {
	/* styles for all posts within the page class */
}
.page-id-2 {
	/* styles for only page ID number 2 */
}
.logged-in {
	/* styles for all pageviews when the user is logged in */
}
</pre>

=== Adding More Classes ===

By default, the only classes will be those described above. 

To add more classes, the template tag's parameter can be added. For example, to add a unique class to the same template used above:

<pre><body <?php body_class( 'class-name' ); ?>></pre>

The results would be:

<pre><body class="page page-id-2 page-parent page-template-default logged-in class-name"></pre>

=== Removing Classes By Filters ===

Remove an existing body class by unsetting the key from the body_class array.

<pre>
// Removes a class from the body_class array
add_filter( 'body_class', 'remove_class' );
function remove_class( $classes ) {
    // search the array for the class to remove
    $unset_key = array_search('class-to-remove', $classes);
    if ( false !== $unset_key ) {
        // unsets the class if the key exists
        unset( $classes[$unset_key] );
    }

    // return the $classes array
    return $classes;
}
</pre>

==== Add Classes By Filters ====

You can add additional body classes by filtering the body_class function.

To add the following to the WordPress Theme <tt>functions.php</tt> file, changing <tt>my_class_names</tt> and <tt>class-name</tt> to meet your needs:

<pre>// Add specific CSS class by filter
add_filter( 'body_class', 'my_class_names' );
function my_class_names( $classes ) {
	// add 'class-name' to the $classes array
	$classes[] = 'class-name';
	// return the $classes array
	return $classes;
}
</pre>

To add a category class to single post pageviews and template files, add the following to the <tt>functions.php</tt>.

<pre>// add category nicenames in body and post class
function category_id_class( $classes ) {
	global $post;
	foreach ( get_the_category( $post->ID ) as $category ) {
		$classes[] = $category->category_nicename;
	}
	return $classes;
}
add_filter( 'post_class', 'category_id_class' );
add_filter( 'body_class', 'category_id_class' );
</pre>

==== Add Sidebar Classes ====

You can add additional body classes by filtering the body_class function, but what if you want to add a class only when the sidebar.php file is being shown?  Here's a working example you can post in your themes <tt>functions.php</tt> file to add a sidebar class to the output of body_class.  From:  [http://www.askapache.com/wordpress/add-css-class-to-body-sidebar.html Add CSS Class to body when Sidebar is Present]

<pre>add_action( 'wp_head', create_function( '', 'ob_start();' ) );
add_action( 'get_sidebar', 'my_sidebar_class' );
add_action( 'wp_footer', 'my_sidebar_class_replace' );
 
function my_sidebar_class( $name = '' ) {
	static $class = 'withsidebar';
	if ( ! empty( $name ) ) {
		$class .= ' sidebar-' . $name;
	}
	my_sidebar_class_replace( $class );
}
 
function my_sidebar_class_replace( $c = '' ) {
	static $class = '';
	if ( ! empty( $c ) ) {
		$class = $c;
	} else {
		echo str_replace( '<body class="', '<body class="' . $class . ' ', ob_get_clean() );
		ob_start();
	}
}</pre>

== Changelog ==
* Since: 2.8

== Source Code ==
<tt>body_class()</tt> is located in {{Trac|wp-includes/post-template.php}}.

== Related ==
===Theme Functions===
{{Tag Post Tags}}

=== Hooks ===
* Filter Hook: [[Plugin_API/Filter_Reference/body_class|'body_class']]

{{PHP Function Tag Footer}}

[[Category:Template Tags|Body_class]]