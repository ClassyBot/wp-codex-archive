{{Languages|
{{en|Function_Reference/add_settings_error}}
{{ja|関数リファレンス/add_settings_error}}
}}

== Description ==

Register a settings error to be displayed to the user.

Part of the [[Settings API]]. Use this to show messages to users about settings validation problems, missing settings or anything else. 

Settings errors should be added inside the <tt>$sanitize_callback</tt> function defined in [[Function_Reference/register_setting|<tt>register_setting()</tt>]] for a given setting to give feedback about the submission.

By default messages will show immediately after the submission that generated the error. Additional calls to <tt>settings_errors()</tt> can be used to show errors even when the settings page is first accessed.

== Usage ==

%%%<?php add_settings_error( $setting, $code, $message, $type ) ?>%%%

== Parameters ==

{{Parameter|$setting|string|Slug title of the setting to which this error applies.}}
{{Parameter|$code|string|Slug-name to identify the error. Used as part of 'id' attribute in HTML output. A prefix of 'setting-error-' will be added to the string in $code and assigned to the 'id' attribute of the outermost &lt;div&gt; for this error.}}
{{Parameter|$message|string|The formatted message text to display to the user (will be shown inside styled &lt;div&gt; and &lt;p&gt;).}}
{{Parameter|$type|string|The type of message it is. $type will be add an HTML class of the same name of the outermost &lt;div&gt;. To add multiple classes separate them with a space.<ul><li>''error''</li><li>''updated''</li></ul>|optional|'error'}}

== Return Values ==

; (void) : This function does not return a value.

== Examples ==
<!-- Need creative examples. Feel free to link to external examples. -->

<pre>function change( $data ) {

    $message = null;
    $type = null;

    if ( null != $data ) {

        if ( false === get_option( 'myOption' ) ) {

            add_option( 'myOption', $data );
            $type = 'updated';
            $message = __( 'Successfully saved', 'my-text-domain' );

        } else {

            update_option( 'myOption', $data );
            $type = 'updated';
            $message = __( 'Successfully updated', 'my-text-domain' );

        }

    } else {

        $type = 'error';
        $message = __( 'Data can not be empty', 'my-text-domain' );

    }

    add_settings_error(
        'myUniqueIdentifier',
        esc_attr( 'settings_updated' ),
        $message,
        $type
    );

}</pre>

== Notes ==

The problem only occurs when I use add_menu_page() or add_submenu_page(). The validation errors are not shown.

A simple work around is to add settings_errors() to my options page, which will make the notification box show... However, seems like a dirty fix

<pre>
<h2>The heading of my settings page</h2>
<?php settings_errors(); ?>
</pre>

== Change Log ==

Since: [[Version_3.0|3.0]]

== Source File ==

<tt>add_settings_error()</tt> is located in {{Trac|wp-admin/includes/template.php}}.

== Related ==
{{Setting Tags}}

{{Tag Footer}}

[[Category:Functions]]
[[Category:New_page_created]]