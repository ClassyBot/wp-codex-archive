{{Languages|
{{en|Function Reference/load_theme_textdomain}}
{{de|Funktionsreferenz/load_theme_textdomain}}
{{ja|関数リファレンス/load_theme_textdomain}}
}}

== Description ==
Loads the theme's translated strings. 

If the current locale exists as a .mo file in the theme's root directory, it will be included in the translated strings by the <tt>$domain</tt>. 

The .mo files must be <strong>named based on the locale exactly</strong>, <code>sv_SE.mo</code> for example.

== Usage ==

%%%<?php load_theme_textdomain( $domain, $path ) ?>%%%

== Parameters ==

{{Parameter|$domain|string|Unique identifier for retrieving translated strings.}}
{{Parameter|$path|unknown|The directory where the .mo file can be found (without the trailing slash).|optional|false}}

== Return Values ==

; (bool) : This function return TRUE as textdomain well loaded, FALSE on failure.

== Examples ==
=== 1st example===

The load_theme_textdomain() function should generally be called from within the [[Plugin_API/Action_Reference/after_setup_theme|after_setup_theme]] action hook.
<pre>
add_action( 'after_setup_theme', 'my_theme_setup' );
function my_theme_setup(){
    load_theme_textdomain( 'my-theme', get_template_directory() . '/languages' );
}
</pre>

The <code>.mo</code> files must use language-only filenames, like <code>languages/de_DE.mo</code> in your theme directory.

Unlike plugin language files, a name like <code>my_theme-de_DE.mo</code> will NOT work. Although plugin language files allow you to specify the text-domain in the filename, this will NOT work with themes. Language files for themes should include the language shortcut ONLY.

=== 2nd example===

you can use this example if you wish to switch theme language using a variable passed within the URL, for example to load the <em>Tamazikht</em> language, your URL would look like; <code>www.example.com/?l=tz_MA</code>, this will search for a <code>.mo</code> file with name <code>tz_MA.mo</code> in the language directory inside your theme.

<pre>
// CHANGE LOCAL LANGUAGE
// must be called before load_theme_textdomain()
add_filter( 'locale', 'my_theme_localized' );
function my_theme_localized( $locale )
{
	if ( isset( $_GET['l'] ) )
	{
		return sanitize_key( $_GET['l'] );
	}

	return $locale;
}
</pre>	
<pre>
// SET THEME LANGUAGES DIRECTORY
// Theme translations can be filed in the my_theme/languages/ directory
// WordPress translations can be filed in the wp-content/languages/ directory
load_theme_textdomain( 'my_theme_textdomain', get_template_directory() . '/languages' );
</pre>

== Notes ==

Internationalization and localization (other correct spellings are internationalisation and localisation) are means of adapting computer software to different languages.
* <i>l10n</i> is an abbreviation for <i>localization</i>.
* <i>i18n</i> 18 stands for the number of letters between the first i and last n in <i>internationalization</i>.

== Change Log ==

* Since: [[Version 1.5|1.5.0]]

== Source File ==

<tt>load_theme_textdomain()</tt> is located in {{Trac|wp-includes/l10n.php}}.

== External Resources ==

* [http://generatewp.com/theme-support/ WordPress Theme Support Generator]

== Related ==
{{Localization}}

{{Tag Footer}}

[[Category:Functions]]
[[Category:New_page_created]]