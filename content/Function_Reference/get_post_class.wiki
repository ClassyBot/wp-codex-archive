{{Languages|
{{en|Template Tags/get_post_class}}
{{ja|????????/get_post_class}}
}}

WordPress Themes have a template tag for the post HTML tag which will help theme authors to style more effectively with CSS. The Template Tag is called <code>'''get_post_class'''</code>. This function returns different <code>post</code> container classes which can be added, typically, in the <tt>index.php</tt>, <tt>single.php</tt>, and other template files featuring post content, typically in the HTML <tt>&lt;div id="post"></tt> tag.

== Description ==
Retrieve the classes for the post div as an array.

Many class names can be added to posts. For example, if the post is a sticky, then the 'sticky' class name is added. The class 'hentry' is always added to each post. For each category, the class that will be added is 'category-' with the category slug is added. The tags are the same way as the categories with 'tag-' before the tag slug. All classes are passed through the filter 'post_class' with the list of classes, followed by $class parameter value, with the post ID as the last parameter.

;Note: ''get_post_class()'' is not simply a non-echoing alternative to [[Function Reference/post_class | post_class()]].  ''get_post_class()'' does not return a string, but an array that must be processed to produce text similar to what is echoed by [[Function Reference/post_class | post_class()]].

== Usage ==
%%%<?php get_post_class($class, $post_id); ?>%%%

== Parameters ==
{{Parameter|$class|string or array|A string or array of classes to add to the return value|optional|<nowiki>''</nowiki> (empty string)}}
{{Parameter|$post_id|int|An optional post ID|optional|null}}

== Return Value ==
{{Return|$classes|array|An array of class names.<br />Get the object post from <tt>get_post($post_id)</tt>; so, if empty return value of get_post (typically invalid <tt>$post_id</tt>), return an empty array of classes (<tt>$classes</tt>).}}

== Examples ==
;Default: Default example without params and global $post object available (''or in the loop'').
 <?php <br/> $postClass = get_post_class(); <br/> var_dump($postClass);<br/> <br/>/*Output:*/
  array() {
  0 => string 'post-[ID]' (length=7)
  1 => string '[post_type]' (length=4)
  2 => string 'type-[post_type]' (length=9)
  3 => string 'status-[post_status]' (length=14)
  4 => string 'format-[post_format]' (length=15)
  5 => string 'hentry' (length=6)
  6 => string 'category-[...]'
  X => string 'tag-[...]'
 }
 ?>

;With params: Passing an array of your own classes.
%%%<?php
/* Optional:
global $post;
$postID = $post->ID;
 OR $postID = get_the_ID();
$postClass = get_post_class(array('my-class'));
 OR $postClass = get_post_class(array('my-class'), (int) $postID);
*/

$postClass = get_post_class(array('my-class'));
var_dump($postClass);

/* Output:
array
  0 => string 'post-[ID]' (length=7)
  1 => string '[post_type]' (length=4)
  2 => string 'type-[post_type]' (length=9)
  3 => string 'status-[post_status]' (length=14)
  4 => string 'format-[post_format]' (length=15)
  5 => string 'hentry' (length=6)
  6 => string 'category-[...]'
  ...
  X => string 'tag-[...]'
  ...
  X+1 => string 'my-class' (length=8)
...
*/
?>%%%

== Source Code ==
<tt>get_post_class()</tt> is located in {{Trac|wp-includes/post-template.php}}.

== Changelog ==
* Since: 2.7

== Related ==
{{Tag Post Tags}}

[[Template_Tags/comment_class]]

{{PHP Function Tag Footer}}

[[Category:Template Tags|get_post_class]]

{{Copyedit}}