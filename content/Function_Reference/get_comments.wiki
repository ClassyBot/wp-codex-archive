{{Languages|
{{en|Function Reference/get_comments}}
{{zh-cn|函数参考/get_comments}}
{{ja|関数リファレンス/get_comments}}
}}

== Description ==

Retrieve a list of comments.

== Usage ==

%%%<?php get_comments( $args ); ?>%%%

=== Default Usage ===

<pre>
<?php $args = array(
	'author_email' => '',
	'author__in' => '',
	'author__not_in' => '',
	'include_unapproved' => '',
	'fields' => '',
	'ID' => '',
	'comment__in' => '',
	'comment__not_in' => '',
	'karma' => '',
	'number' => '',
	'offset' => '',
	'orderby' => '',
	'order' => 'DESC',
	'parent' => '',
	'post_author__in' => '',
	'post_author__not_in' => '',
	'post_ID' => '', // ignored (use post_id instead)
	'post_id' => 0,
	'post__in' => '',
	'post__not_in' => '',
	'post_author' => '',
	'post_name' => '',
	'post_parent' => '',
	'post_status' => '',
	'post_type' => '',
	'status' => 'all',
	'type' => '',
        'type__in' => '',
        'type__not_in' => '',
	'user_id' => '',
	'search' => '',
	'count' => false,
	'meta_key' => '',
	'meta_value' => '',
	'meta_query' => '',
	'date_query' => null, // See WP_Date_Query
);
get_comments( $args ); ?>
</pre>

== Parameters ==

{{Parameter|$author_email|string|Comment author email address.|optional|empty}}
{{Parameter|$author__in|array|Array of author IDs to include comments for.|optional|empty}}
{{Parameter|$author__not_in|array|Array of author IDs to exclude comments for.|optional|empty}}
{{Parameter|$comment__in|array|Array of comment IDs to include.|optional|empty}}
{{Parameter|$comment__not_in|array|Array of comment IDs to exclude.|optional|empty}}
{{Parameter|$count|bool|Whether to return a comment count (true) or array of comment objects (false).|optional|false}}
{{Parameter|$date_query|array|Date query clauses to limit comments by. See WP_Date_Query.|optional|null}}
{{Parameter|$fields|string|Comment fields to return. Accepts 'ids' for comment IDs only or empty for all fields.|optional|empty}}
{{Parameter|$ID|int|'''Currently unused.'''|optional}}
{{Parameter|$include_unapproved|array|Array of IDs or email addresses of users whose unapproved comments will be returned by the query regardless of ''$status''.|optional|empty}}
{{Parameter|$karma|int|Karma score to retrieve matching comments for.|optional|empty}}
{{Parameter|$meta_key|string|Include comments with a matching comment meta key.|optional|empty}}
{{Parameter|$meta_value|string|Include comments with a matching comment meta value. Requires ''$meta_key'' to be set.|optional|empty}}
{{Parameter|$meta_query|array|Meta query clauses to limit retrieved comments by. See WP_Meta_Query.|optional|empty}}
{{Parameter|$number|int|Maximum number of comments to retrieve.|optional|null (no limit)}}
{{Parameter|$offset|int|Number of comments to offset the query. Used to build LIMIT clause.|0}}
{{Parameter|$orderby|string_array|Comment field or array of comment fields. To use 'meta_value' or 'meta_value_num', ''$meta_key'' must also be defined. To sort by a specific ''$meta_query'' clause, use that clause's array key. <ul><li>''comment_agent''</li><li>''comment_approved''</li><li>''comment_author''</li><li>''comment_author_email''</li><li>''comment_author_IP''</li><li>''comment_author_url''</li><li>''comment_content''</li><li>''comment_date''</li><li>''comment_date_gmt''</li><li>''comment_ID''</li><li>''comment_karma''</li><li>''comment_parent''</li><li>''comment_post_ID''</li><li>''comment_type''</li><li>''user_id''</li><li>''meta_value''</li><li>''meta_value_num''</li><li>the value of $meta_key</li><li>and the array keys of ''$meta_query''</li><li>Also accepts false, an empty array, or 'none' to disable ''ORDER BY'' clause</li>|optional|''comment_date_gmt''}}
{{Parameter|$order|string|How to order retrieved comments. Accepts <ul><li>''ASC''</li><li>''DESC''</li>.|optional|'DESC'.}}
{{Parameter|$parent|int|Parent ID of comment to retrieve children of.|optional|empty}}
{{Parameter|$post_author__in|array|Array of author IDs to retrieve comments for.|optional|empty}}
{{Parameter|$post_author__not_in|array|Array of author IDs *not* to retrieve comments for.|optional|empty}}
{{Parameter|$post_ID|int|'''Currently unused'''|optional}}
{{Parameter|$post_id|int|Limit results to those affiliated with a given post ID.|optional|0}}
{{Parameter|$post__in|array|Array of post IDs to include affiliated comments for.|optional|empty}}
{{Parameter|$post__not_in|array|Array of post IDs to exclude affiliated comments for.|optional|empty}}
{{Parameter|$post_author|int|Comment author ID to limit results by.|optional|empty}}
{{Parameter|$post_status|string|Post status to retrieve affiliated comments for.|optional|empty}}
{{Parameter|$post_type|string|Post type to retrieve affiliated comments for.|optional|empty}}
{{Parameter|$post_name|string|Post name to retrieve affiliated comments for.|optional|empty}}
{{Parameter|$post_parent|int|Post parent ID to retrieve affiliated comments for.|optional|empty}}
{{Parameter|$search|string|Search term(s) to retrieve matching comments for.|optional|empty}}
{{Parameter|$status|string|Comment status to limit results by. Accepts 'hold', 'approve', 'all', or a custom comment status.|optional|''all''}}
{{Parameter|$type|string_array|Include comments of a given type, or array of types. Accepts 'comment', 'pings' (includes 'pingback' and 'trackback'), or any custom type string.|optional|empty}}
{{Parameter|$type__in|array|Include comments from a given array of comment types.|optional|empty}}
{{Parameter|$type__not_in|array|Exclude comments from a given array of comment types.|optional|empty}}
{{Parameter|$user_id|int|Include comments for a specific user ID.|optional|empty}}

== Returns ==

; (Object) : Comment fields with the following properties (or an empty array if there are no comments):

; <tt>comment_ID</tt> : (''integer'') The comment ID
; <tt>comment_post_ID</tt> : (''integer'') The ID of the post/page that this  comment responds to
; <tt>comment_author</tt> : (''string'') The comment author's name
; <tt>comment_author_email</tt> : (''string'') The comment author's email
; <tt>comment_author_url</tt> : (''string'') The comment author's webpage
; <tt>comment_author_IP</tt> : (''string'') The comment author's IP
; <tt>comment_date</tt> : (''string'') The datetime of the comment (<tt>YYYY-MM-DD HH:MM:SS</tt>)
; <tt>comment_date_gmt</tt> : (''string'') The GMT datetime of the comment (<tt>YYYY-MM-DD HH:MM:SS</tt>)
; <tt>comment_content</tt> : (''string'') The comment's content
; <tt>comment_karma</tt> : (''integer'') The comment's karma
; <tt>comment_approved</tt> : (''string'') The comment approval level (0, 1 or "spam")
; <tt>comment_agent</tt> : (''string'') The commenter's user agent (browser, operating system, etc.)
; <tt>comment_type</tt> : (''string'') The comment's type if meaningfull (<tt>pingback|trackback</tt>), empty for normal comments
; <tt>comment_parent</tt> : (''string'') The parent comment's ID for nested comments (0 for top level)
; <tt>user_id</tt> : (''integer'') The comment author's ID if s/he is registered (0 otherwise)

== Examples ==

<pre><?php 
$comments = get_comments('post_id=15');
foreach($comments as $comment) :
	echo($comment->comment_author);
endforeach;
?></pre>

Show last 5 unapproved comments:
<pre><?php
$args = array(
	'status' => 'hold',
	'number' => '5',
	'post_id' => 1, // use post_id, not post_ID
);
$comments = get_comments($args);
foreach($comments as $comment) :
	echo($comment->comment_author . '<br />' . $comment->comment_content);
endforeach;
?></pre>

Show comment counts of a post:
<pre><?php
$args = array(
	'post_id' => 1, // use post_id, not post_ID
        'count' => true //return only the count
);
$comments = get_comments($args);
echo $comments

?></pre>


Show comment counts of a user:
<pre><?php
$args = array(
	'user_id' => 1, // use user_id
        'count' => true //return only the count
);
$comments = get_comments($args);
echo $comments

?></pre>

Show comments of a user:
<pre><?php
$args = array(
	'user_id' => 1, // use user_id

);
$comments = get_comments($args);
foreach($comments as $comment) :
	echo($comment->comment_author . '<br />' . $comment->comment_content);
endforeach;

?></pre>

Get comments from last 4 weeks:
<pre>
         $args = array(
                        'date_query' => array(
                                                        'after' => '4 week ago',
                                                        'before' => 'tomorrow',
                                                        'inclusive' => true,
                                        ),    
                        );
        $posts = get_comments($args);

        foreach ($posts as $post) {
                // Output comments etc here
        }
</pre>

Delete duplicate comments (same author and content):
<pre><?php

// get all approved comments with empty number arg
$all_comments=get_comments( array('status' => 'approve', 'number'=>'') );

// array to hold comment ids that are dupes
$comment_ids_to_delete=array();

foreach($all_comments as $k=>$c)
{
	$kk=($k-1); // the previous comments index in all_comments array
	$pc=$all_comments[$kk]; // the previous comment object

	// if comment authors the same, and comment_content the same add to deletions array
	if($pc->comment_author == $c->comment_author && $pc->comment_content == $c->comment_content) {
		$comment_ids_to_delete[]=$pc->comment_ID; // previous comment id
	}
}

// delete the comment by id
foreach($comment_ids_to_delete as $k=>$v):
	wp_delete_comment($v);
endforeach;

?></pre>

== Source File ==

<tt>get_comments()</tt> is located in {{Trac|wp-includes/comment.php}}.

== Related ==
* [[Function Reference/comments_template | comments_template()]]
* [[Function_Reference/get_comment | get_comment()]]

{{Tag Footer}}

[[Category:Functions]]