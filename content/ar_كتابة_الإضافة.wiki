{{Languages|
{{ar|كتابة الإضافة}}
{{en|Writing a Plugin}}
{{bn|প্লাগইন লেখা}}
{{es|Escribiendo un Plugin}}
{{ja|Writing a Plugin}}
{{ko|Writing a Plugin}}
{{pt-br|Escrevendo um Plugin}}
{{ru|Написание плагина}}
{{th|Writing a Plugin}}
{{zh-hans|开发一个插件}}
<!-- {{zh-tw|開發一個外掛}} -->
}}
<span style="color:red;">
قبل البدء بقراءة المقال ننصح بتحويل اتجاه المقال الى العربي لعدم توافق الفقرات مع هذا القالب او قم بنسخه الى اي برنامج للقراءة . 
</span>
= مقدمة  =

[[Plugins|إضافات الووردبريس]]  تسمح بسهولة تعديل، وتخصيص، وتعزيز مدونة الووردبريس. بدلا من تغيير البرمجة الأساسية للووردبريس، يمكنك إضافة وظائف مع إضافات الووردبريس. هنا هو التعريف الأساسي:

'''إضافات الووردبريس:''' إضافات الووردبريس هو برنامج, او مجموعة واحدة او اكثر من الوظائف, مكتوبة بواسطة لغة البرمجة PHP، التي تضيف مجموعة خاصة من الميزات أو الخدمات لمدونة الووردبريس، والتي يمكن دمجها بسلاسة مع مدونة تستخدم خاصية نقاط الدخول والطرق المقدمة من [[Plugin API|Plugin Application Program Interface (API)]].

هل ترغب باضافة  بعض الوظائف الجديدة أو المعدلة للووردبريس؟ أول شيء يجب القيام به هو البحث المتنوع في مستودعات الووردبريس والمصادر لمعرفة ما إذا كان شخص ما قد برمج بالفعل اضافة تناسب احتياجاتك. والا، فان هذا المقال سوف يرشدك  خلال عملية إنشاء اضافتك الخاصة.

'' بقراءتك لهذا المقال فهذا يعني انك على استعداد لطتابة الوظائف الاساسية للووردبرس، وبرمجة PHP.

''' مصادر مفيدة لك '''

* ولكي نفهم كيف تعمل إضافات الووردبريس وكيفية تثبيتها على مدونة الووردبريس الخاصة بك، انظر [[Plugins]].
* هناك قائمة شاملة من المقالات والمصادر لإضافات المطورين، بما في ذلك المقالات الخارجية على كتابة إضافات الووردبريس، والمقالات حول مواضيع خاصة، في [[Plugin Resources]].
* لمعرفة الأساسيات حول كيفية كتابة إضافات الووردبريس، وعرض مصدر التعليمات البرمجية إضافات الووردبريس مكتوبة بشكل جيد، مثل [[Plugins#Default Plugins|Hello Dolly]] التي وزعت مع الووردبريس.
* اذا كنت قد كتبت إضافاتك الووردبريس، وقراءة [[Plugin Submission and Promotion]] لمعرفة كيفية توزيعها وتقاسمها مع الآخرين.

= صناعة اضافة =

في هذا المقطع من المقال سوف نتعلم من خلالها الخطوات التي تحتاجها للمتابعة، والامور التي يجب مراعاتها عند إنشاء وورد لإضافات جيدة التنظيم.

== الاسم, الملفات, والمواقع ==


=== اسم الاضافة ===

*المهمة الاولى لك لبرمجة اضافة ووردبريس هو ان تختار اسما مناسبا اسما يكون فريدا من نوعه وغير مستخدم في اضافات الووردبريس [[Plugins|الاضافات]]
:::====نامل ونتمنى منك انت تقوم بما يلي لاختيار اسم مناسب ====
# بعد اختيارك للاسم رجاءا ابحث عن  الاسم ضمن [[Plugins|اضافات الووردبريس]]
# كذلك ابحث ضمن محرك بحث جوجل عن اسم الاضافة 
# معظم مطوري الاضافات اختاروا اسماءا تصف ما تقوم بها الاضافة مثل لو اردنا برمجة اضافة عن حالة الطقس فنقوم بتسميتها باسم "الطقس" وهكذا 
# تستطيع استخدام اسما من كلمات عديدة

<pre>
'*ملاحظة'
الاسم يجب ان يكون بالحروف اللاتينية 
</pre>


=== ملفات الاضافة ===
الخطوة التالية هي إنشاء ملف <code>php</code> مع اسم مشتق من اسم الاضافة الخاصة بك الذي اخترته . على سبيل المثال ، إذا سميت الاضافة الخاصة بك "test Plugin" ، قد استدعاء ملف PHP الخاصة بك '' test-Plugin.php ''  . مرة أخرى ، حاول اختيار اسم فريد. الناس الذين سيثبتون اضافتك سيضعون هذا الملف ملف PHP في مجلد اضافات الووردبريس في تركيبها ( عادة <code>''' ''wp-content/plugins/'' '''</code>)، لذلك لا يمكن ان يحمل الاضافتين نفس الاسم .

وثمة خيار آخر هو تقسيم الاضافة الخاصة بك إلى ملفات متعددة. يجب أن يكون اضافات الووردبريس الذي تقوم بانشائه ملف PHP واحد على الأقل؛ يمكن أن يحتوي أيضا على ملفات جافا سكريبت ملفات CSS، وملفات الصور، وملفات اللغة،
إذا كانت هناك عدة ملفات، قم باختيار اسم فريد لدليل(المجلد) وللملف الرئيسي PHP (عادة نفس الاسم ) ، مثل سنسمي المجلد'' test-Plugin '' فيكون الملف الرئيسي '' test-Plugin.php '' ، ووضع جميع ملفات الاضافة الخاصة بك في هذا الدليل، وإخبار المستخدمين البرنامج المساعد الخاص بك لتثبيت الدليل بأكمله تحت ''wp-content/plugins/''. لاحظ أن تركيب الووردبريس يكون في الدليل  ''wp-content/plugins/'', وقد يتم نقله الى دليل اخر، لذلك يجب استخدام
 [[Function_Reference/plugin_dir_path| plugin_dir_path()]]
 و
 [[Function_Reference/plugins_url| plugins_url()]]

لمسارات مطلقة وعناوين المواقع. لمزيد من التفاصيل انظر[[Determining Plugin and Content Directories|تحديد الاضافة والدلائل المحتوى]].

في النهاية ان ملف php الاضافة يشير الى الملف الرئيسي للاضاقة في المجلد الرئيسي داخل دليل ''wp-content/plugins/'' او المجلد الفرعي. 


'' 'ملاحظةوتحذير امني' '': ضع في الاعتبار ان حجب إمكانية الوصول المباشر إلى ملفات PHP لاضافتك الخاصة عن طريق إضافة السطر التالي في الجزء العلوي من كل ملف، أو مما لا شك فيه بانه امتناع عن تنفيذ اكواد php الحساسة بذاتها قبل استدعاء أي من وظائف الووردبريس.
<pre>
defined( 'ABSPATH' ) or die( 'No script kiddies please!' );
</pre>

=== ملف اقراني ===
إذا كنت ترغب في استضافة الاضافة الخاصة بك على https://wordpress.org/plugins/، تحتاج أيضا إلى إنشاء ملف ''readme.txt'' بالتنسيق القياسي، وتضمينه مع الاضافة الخاصة بك. انظر https://wordpress.org/plugins/about/readme.txt لوصف التنسيق أو استخدام التلقائي 
[http://generatewp.com/plugin-readme/ plugin 'readme.txt' generator].

لاحظ أن [//wordpress.org/plugins مستودع اضافات الووردبريس]  يأخذ "المتطلبات" و "اختبار  تحديث" الإصدارات من '' README.TXT '' في الوسم المستقرة.

=== الصفحة الرئيسية ===

ايضا من المفيد جدا إنشاء صفحة ويب ليكون بمثابة الصفحة الرئيسية لاضافة الووردبريس الخاصة بك. هذه الصفحة ينبغي أن تصف كيفية تثبيت الاضافة، وما تقوم بها، وما إصدارات  الووردبرس المتوافقة معه, ما تم تغييره من إصدار الى اخر من الاضافة الخاصة بك، وكيفية استخدام الاضافة.

== راس الملف ==

الآن حان الوقت لوضع بعض المعلومات في ملف الرئيسي لاضافتك الخاصة.


=== المعلومات القياسية للاضافة ===
[https://developer.wordpress.org/plugins/the-basics/header-requirements/ اقرأ عن هذا الموضوع في كتيب مطوري اضافات الووردبريس.]

=== الترخيص ===
[http://developer.wordpress.org/plugins/the-basics/including-a-software-license/ اقرأ عن هذا الموضوع في كتيب مطوري اضافات الووردبريس.]

== برمجة اضافتك  ==

لنقوم ببناء الاضافة وبرمجته بحول الله وقوته حان الوقت لتخرج اضافتك الى الحقيقة

=== خطاطيف (جلسات)اضافات الووردبريس (hooks) ===

طريقة عمل خطاطيف(جلسات)الاضافة هي أنه في أوقات مختلفة أثناء تشغيل الووردبريس، فان الووردبريس يقوم بالتحقق مما إذا كانت أية الإضافة سجلت مهام او وظائف للتشغيل في ذلك الوقت، فإذا كان الأمر كذلك، فانه يتم تشغيل المهام او الوظائف. هذه المهام او الوظائف تعدل السلوك الافتراضي للووردبريس.

على سبيل المثال، قبل احداث او تكوين الووردبريس عنوانا لمقال معين لاظهاره على المتصفح، فإنه سيتحقق اولا من ما إذا سجلت أية مهام من قبل اضافات الووردبريس (الملحقات البرمجية Plugin) لـ "تصفية وفلترة" الجلسات (الخطاطيف hooks) التي تدعى "the_title". إذا كان الأمر كذلك، يتم تمرير نص العنوان بدوره من خلال كل مهمة مسجلة، والنتيجة النهائية هي ما يتم عرضها. لذلك، إذا اضافتك الخاصة (Plugin) تحتاج إلى إضافة او احداث بعض المعلومات إلى عنوان المطبوع او المعروض، فإنه يمكن تسجيل "the_title" كمهمة تصفية.

مثال آخر هو "احداث" جلسة (hooks) باسم "wp_footer". فقط قبل نهاية الصفحة HTML الووردبريس المولدة، فإنه سوف يتم التحقق  من ماإذا كانت هناك وظائف مسجلة لاية اضافة (Plugin) باسم "wp_footer" لعمل  الجلسة  لشتغيلها.

يمكنك معرفة المزيد حول كيفية تسجيل الوظائف لكل تصفية وعمل الجلسات (hooks)، وما هي جلسات (hooks)  الاضافات (Plugins) المتاحة في الووردبريس، في [[Plugin API]]. إذا وجدت بقعة في اكواد الووردبرس واردت احداث جلسة عمل أو فلترة جلسة، ولا توجد في الووردبريس، فيمكنك أقترح جلسات جديدة (وهي تؤخذ بالاعتبار)؛ انظر [[Reporting Bugs]] لمعرفة كيف ذلك.

=== علامات واوسمة القالب Tags ===

طريقة اخرى للملحقات الاضافية للووردبريس Plugin لاضافة الدوال (الوظائف او المهام functionality)  الى الووردبريس عن طريق علامات مخصصة للقالب [[Template Tags]].
شخص ما قد يرغب باستخدام المحلق الاضافي الخاص بك (Plugin) فانه يستطيع من خلال علامة القالب اضافة  العلامة الى القالب, في الشريط الجانبي , مقطع من محتوى المقال, او حيثما يراه مناسبا.
على سبيل المثال:  الملحق الاضافي الذي يقوم باضافة العلامات الجغرافية (geographical tags)  الى المقال ربما تحدد وظيفة علامة (وسام) القالب باسم <tt>geotag_list_states()</tt> في الشريط الجانبي, الذي يضم قائمة بكل حالات المقالات المعلمة بنفس العلامة, مع الروابط على اساس صفحات الارشيف المفعلة في الملحق الاضافي Plugin.

لتحديد علامة مخصصة للقالب، ببساطة نقوم بكتابة دالة PHP  وتوثيق ذلك في الصفحة الرئيسية للمحلق الاضافي Plugin لمساعدة مستخدمي الملحق الاضافي Plugin الذي قمت ببرمجته  و/أو في ملف PHP  الرئيسي للملحق الإضافي Plugin .

انها فكرة جيدة عند توثيق الدلة  لتعطي مثالا بالضبط على ما يجب على المستخدم فعله في ملف القالب لاستخدام الدالة، التي يجب تضميته ضمن كود <tt><?php</tt> هنا محتوى الدالة <tt>?></tt>.

=== حفظ معلومات الاضاقة في قاعدة البيانات===

معظم الملحقات الاضافية للوردبريس (WordPress Plugins) تحتاج الحصول على بعض المدخلات من اصحاب المواقع أو مستخدمي المدونة وحفظها بين الجلسات لاستخدامها في مهام التصفية، ومهام العمل، ومهام القالب. هذه المعلومات يجب حفظها في قاعدة البيانات الووردبريس، من أجل استمرارها بين الجلسات. هناك أربعة (4) طرق لحفظ بيانات الملحق الإضافي في قاعدة البيانات:

#  استخدام " الخيارات  "option  الميكانيكية  للووردبريس (الموصوفة ادناه). هذه الطريقة مناسبة لتخزين الكميات الصغيرة الثابتة نسبيا, والقطع المسماة من البيانات, وانواع البيانات, التي تتوقع ادخالها من قبل مالك الموقع عند الاعدادات الاولية  للملحقات الاضافية (Plugin), والتي نادرا ما تتغير.
# ميتا الموضوع (المعروف بالحقول المخصصة). مناسبة للبيانات المرتبطة مع المقالات الفردية، الصفحات، أو المرفقات. انظر [[Function_Reference/post_meta Function Examples|post_meta Function Examples]], [[Function Reference/add_post_meta|add_post_meta()]],  والوظائف ذات الصلة.
# تصنيفات مخصصة (Custom Taxonomy), لتصنيف المقالات او اشياء اخرى, مثل المستخدمين و التعليقات و/او لتحرير المستخدم اسم /قيمة قائمة البيانات المشروطة استخدم لذلك التصنيفات مخصصة  (Custom Taxonomy),   لا سيما عندما تريد الوصول الى كل المقالات او الكائنات المرتبطة باعطاء المصطلحات المصنفة. انظر [[Taxonomies#Custom_Taxonomies|Custom Taxonomies تصنيفات مخصصة]].
# إنشاء جدول  قاعدة بيانات مخصص وجديد. هذا الأسلوب هو المناسب للبيانات غير المرتبطة بالمشاركات الفردية, الصفحات، الملحقات، أو التعليقات –  ونوع البيانات, اتي سوف تنمو مع مرور الوقت، والتي ليست لديها أسماء فردية. انظر[[Creating Tables with Plugins|انشاء الجداول مع الملحقات الاضافية]]  للحصول على معلومات حول كيفية القيام بذلك.

=== مكيانيكية خيارات الووردبريس ===

انظر  [[Creating Options Pages| Creating Options Pages  انشاء خيارات الصفحات ]]  لمزيد من المعلومات حول كيفية إنشاء صفحة  خيارات خاصة بك يتم حفظها تلقائيا .

الوورد بريس له ألية لفظ وتحديث واسترجاع البيانات الشخصية وتحديد قطع من البيانات ( الخيارات )  في قاعدة بيانات الووردبريس. وقِيم(قيمة) الخيار ممكن ان يكون على شكل سلسلة او مصفوفة  او على هيئة php والتي يتم سلسلتها او يتم تحويلها الى متسلسلة قبل التخزين وعدم سلسلتها عند الاسترجاع. مسميات الخيار هي عبارة عن متسلسلات والتي يجب ان تكون فريدة لكي لا تتصادم سواء مع الووردبريس او مع تطبيقات اخرى.



انها فكرة جيدة للتقليل من عدد الخيارات التي يمكنك استخدامها للملحق الاضافي الخاص بك. على سبيل المثال، بدلاً من تخزين 10 خيارات باسماء مختلفة فبالامكان تخزينها كمصفوفة مسلسلة لـ 10 عناصر باسم واحد للخيار.

وفيما يلي الوظائف الرئيسية للملحق الاضافي الخاص بك الذي يمكن أن تستخدم للوصول إلى خيارات الووردبريس.

<pre>
add_option($name, $value, $deprecated, $autoload);
</pre>

add_option
تعني إنشاء خيار جديد: لن يفعل شيئا إذا كان الخيار موجود بالفعل.

$name:

قيمة مطلوبة (سلسلة). اسم الخيار المراد إضافته.

$value:

اختياري (مختلطة)، من الافتراضي إلى سلسلة فارغة. قيمة الخيار ليتم تخزينها.

$deprecated:

اختياري (سلسلة)، لم تعد تستخدم من قبل الووردبريس ، يمكنك تمرير سلسلة فارغة أو خالية لهذا الامر إذا كنت ترغب في استخدام المعلمة $ autoload التالية.

$autoload:

اختياري، من الافتراضي إلى "نعم" (التعداد: "نعم" أو "لا"). إذا تم تعيينه إلى "نعم" فان الإعداد يتم استرداده تلقائيا من قبل الدالة <TT> wp_load_alloptions </ TT> .

<pre>
get_option($option);
</pre>

get_option
تعني استرداد قيمة الخيار من قاعدة البيانات.

$option:
قيمة مطلوبة (سلسلة). اسم الخيار الذي تريد إرجاع قيمته. 
بامكانك العثور على قائمة من الخيارات الافتراضية التي يتم تثبيتها مع الووردبريس  في  [[Option Reference | Option Reference الخيار المرجعي ]].

<pre>
update_option($option_name, $newvalue);
</pre>

update_option

تعني تحديثات أو إنشاء قيمة الخيار في قاعدة البيانات 
(لاحظ أن <TT> add_option </ TT>  يجب أن لا يسمى إذا كنت لا تريد استخدام المعلمات <tt>$deprecated</tt>أو <tt>$autoload</tt> ).

$option_name: 
قيمة مطلوبة.(سلسلة). اسم الخيار للتحديث.

$newvalue:
قيمة مطلوبة. (سلسلة | مصفوفة| كائن) القيمة الجديدة للخيار.

=== لوحات الإدارة  ===
وإذا افترضنا أن الملحق الإضافي لديه بعض الخيارات المخزنة في قاعدة بيانات الووردبريس (انظر الفقرة أعلاه)، وربما كنت تريد أن يكون لها لوحة إدارة التي ستمكن مستخدمي البرنامج الخاص بك من عرض وتحرير الخيارات. لعمل ذلك اقرا عن [[Adding Administration Menus | إضافة القوائم الإدارية]].
.

== تدويل ونشر الاضافة ==
حينما تنتهي من اتمام الملحق الاضافي وكانت لديك رغبة في توزيعه وتدويله وترجمته  فعليك القيام بما يلي

يرجى ملاحظة انه ''' لا يتم ''' تحميل ملفات اللغة تلقائيا.
بل يتم ذلك عن طريق الكود ادناه:
 


 	load_plugin_textdomain('your-unique-name', false, basename( dirname( __FILE__ ) ) . '/languages' );

لجلب السلسلة ببساطة استخدم  '''__('String name','your-unique-name');''' لارجاع الترجمة او لاظهارها '''_e('String name','your-unique-name');''' . بعد ذلك انتقل الى مجلد الترجمة في الملحق الاضافي الخاص بك.

ينصح بشدة أن تقوم بتدويل الملحق الاضافي الخاص بك، بحيث يمكن للمستخدمين من مختلف البلدان تعريب ذلك. هناك مرجعية شاملة عن التدويل، بما في ذلك قسم كامل تصف كيفية تدويل الملحق الاضافي الخاص بك، في [[I18n for WordPress Developers]] .

= Updating Your Plugin  تحديث المحلق الاضافي الخاص بك =
هذا المقطع يصف الخطوات الضرورية لتحديث المحلق الاضافي الخاص بك المستضاف على https://wordpress.org/plugins/, بما في ذلك تفاصيل حول استخدام  [https://wordpress.org/plugins/about/svn/ Subversion |الاصدارات السابقة ] (SVN) with wordpress.org.
على افتراض انك قدمت ملحقك الاضافي لـ[[Plugin_Submission_and_Promotion|مستودع الملحق الاضافي للووردبريس]], ربما بعد فترة تحتاج لاضافة تغييرات او معالجة اخطاء او اضافة ميزات اخرى الى برمجتك, عند ذلك الوقت نتمنى منك ان تقوم بذلك, والعمل على التغييرات وتنفيد تغييرات في جذر البرنامج كما تريد, هذه التغييرات ستكون مرئية للجمهور, ومع ذلك فلن يستطيع الا الناس الذي لديهم عقلية تقنية من معرفة التغييرات التي اجريت على البرنامج عن طريق SVN اما البقية وكذلك لوحة تحكم الووردبريس فلن يحدث عندهم اي تغيير ولن تظهر لهم رسالة بذلك.

عندما تريد اطلاق نسخة حديثة فكن مستعدا لما يلي:
 
* تاكد من عملية التنفيذ وان البرنامج يعمل, وقم بعملية فحص للبرنامج لجميع الوظائف ولا تولي الاهتمام فقط للميزات الجديد وتاكد من انك لم تقم عن طريق الخطا بازلة او كسر وظيفة من الوظائف القديمة.
* قم بتغيير رقم الاصدار الى الاصدار الجدير الموجود في راس ملف php الرئيسي داخل التعليقات في البرنامج (المجلد الجذر للمحلق الاضافي).
* تغيير رقم الإصدار في حقل 'العلامة مستقرة Stable tag ' في ملف readme.txt (في المجلد الجذر).
* إضافة قسم فرعي جديد في قسم "التغيير" 'changelog' من ملف readme.txt، واصفا بإيجاز ما الذي تغير مقارنة بالاصدارات السابقة. وسيتم إدراج هذه التغييرات في علامة التبويب "التغيير" من صفحة برنامج الملحق الاضافي الخاص بك.
* نفذ التغييرات اعلاه.
* ثم قم بإنشاء علامة SVN جديدة ونسخة من الجذر، بعد هذا الدليل [https://wordpress.org/plugins/about/svn/#task-3 this guide].


امنح النظام بضع دقائق للعمل، ومن ثم قم بالتحقق من صفحة الملحقات الاضافية للووردبريس wordpress.org وتثبيت الملحق الاضافي الخاص بك لمعرفة قيما إذا كان كل شيء حدث بشكل طبيعي وصحيح اثناء التحديث وان صفحة تثبيت الووردبريس تظهر تحديثا لبرنامج الملحق الاضافي الخاص بك (التحقق من التحديثات ربما تكون مؤقتة، لذلك فإن هذه العملية  قد تستغرق بعض الوقت - حاول زيارة صفحة "التحديثات المتوفرة" في صفحة تثبيت الووردبريس الخاص بك).

استكشاف الأخطاء وإصلاحها:
* صفحة البرنامج على wordpress.org لا يزال يعرض النسخة القديمة. هل قمت بتحديث حقل 'العلامة مستقر' 'stable tag' في المجلد الجذر؟ مجرد انشاء وسام وتحديث README.TXT في المجلد الوسام لا يكفي!
* صفحة البرنامج تعرض ملف مضغوط مع الإصدار الجديد، ولكن لا يزال زر رقم الإصدار القديم ظاهرا وأي إعلام تحديث لم يحدث في صفحة تحديثات الوورد الخاص بك. هل قمت بتحديث تعليق 'الاصدار الجديد' في ملف PHP الرئيسي؟
* وبالنسبة للمشاكل الأخرى  مراجعة ومتابعة جيدة لكتابةالبرنامج وصفحة المشاكل الشائعة: [https://make.wordpress.org/plugins/2012/06/09/the-plugins-directory-and-readme-txt-files/ الدليل الإضافات والملفات README.TXT]

= Plugin Development Suggestions اقتراحات لتطوير المحلق الاضافي =

اخيرا جملة من الاقتراحات المختلفة بشان تطوير الملحق الاضافي الخاص بك 


* متابعة''' اكواد برنامج الملحق لاضافي على''' '''[https://make.wordpress.org/core/handbook/coding-standards/ WordPress Coding Standards]'''. وكذلك [https://make.wordpress.org/core/handbook/inline-documentation-standards/ Inline Documentation].
* تحتاج جميع الوظائف في الملحق الإضافي الخاص بك أسماء فريدة تختلف عن الوظائف الأساسية للووردبريس، والإضافات الأخرى، والقوالب. لهذا السبب، قم '''باستخدام اسماء فريدة من نوعها للبادئة الدالة  على جميع دوال الملحق الإضافي الخاص بك'''. او تحديد جميعها داخل فئة class (الذي يحتاج أيضا لاسم فريد).
* '''لا تستخدم بادئة جدول قاعدة البيانات الاعتيادية ''' ("wp_") في البرمجة.  لكن استخدم بدلا منها المتغير <tt>$wpdb->prefix</tt> وكن متاكد انك تستخدم هذا . 
* قراءة قاعدة البيانات هي رخيصة، ولكن الكتابة مكلفة. قواعد بيانات جيدة بشكل استثنائي في جلب البيانات ويعطيها لك، وهذه العمليات هي (عادة) بسرعة البرق.
إجراء تغييرات على قاعدة البيانات، رغم ذلك، هي العملية الأكثر تعقيدا، وحسابيا أكثر كلفة. لذلك، حاول '''تقليل عمليات <em> الكتابة </em> في قاعدة البيانات'''. حاول الحصول على كل الاكواد الجاهزة التي تحتاج إليها، أولا، حتى تتمكن من إجراء العمليات الكتابة فقط.

* '''استخدم اكواد WordPress' APIs بدلا من الاستخدام المباشر لاكواد SQL''' كلما كان ممكنا. علي سبيل المثل, استخدم<tt>get_posts()</tt> أو<tt>new WP_Query()</tt> بدلا من <tt>SELECT * FROM {$wpdb->prefix}_posts</tt>. 


* '' 'استخدام جداول قاعدة البيانات الموجودة بدلاً من إنشاء جداول مخصصة جديدة ''' إذا كان ذلك ممكناً. يمكن إنجاز معظم اللحالات المستخدمة مع أنواع المقالات المخصصة والبيانات التعريفية والتصنيف المخصص و/أو أحد الجداول القياسية الأخرى واستخدام الجداول القياسية توفر الكثير من () واجهة المستخدم وغيرها من وظائف ''"مجاناً."'' قكر بعناية فائقة قبل إضافة جدول لأنه يضيف تعقيدات إلى البرنامج الخاص بك الذي يفضل العديد من المستخدمين وبناة الموقع تجنبه.
 
* ''' حدد ما تحتاج إليه فقط'''. على الرغم من أن قواعد البيانات تجلب البيانات لحد مذهل وبسرعة، فيجب أن تستمر محاولة تقليل الحمل على قاعدة البيانات عن طريق اختيار البيانات التي تحتاج إلى استخدامها فقط. إذا كنت بحاجة إلى الاعتماد على عدد من الصفوف في الجدول لا تستخدم <tt>SELECT * FROM</tt>، لأنه سيتم سحب جميع البيانات في جميع الصفوف، وإضاعة الذاكرة. وبالمثل، إذا كنت في حاجة إلى post_id وpost_author في البرنامج، فقط بعد ذلك تستتطيع <tt> تحديد </tt> هذه المجالات الخاصة، وذلك للتقليل من حجم قاعدة البيانات. تذكر: ان مئات العمليات الأخرى قد تصل الى قاعدة البيانات في نفس الوقت. فقاعدة البيانات والخادم لكل منها الكثير من الموارد لتنتشر في جميع الأنحاء بين جميع تلك العمليات. تعلم كيفية تقليل وصول الملحق الإضافي الخاص بك الى قاعدة البيانات والتأكد من أن الملحق الإضافي الخاص بك حتى لا يقع اللوم عليه في إساءة استخدام الموارد.

* ''' لإزالة أخطاء PHP في الملحق الاضافي الخاص بك'''. إضف <tt> تعريف ('WP_DEBUG', true);</tt> لديك في ملف ''wp-config.php''، وتحقق مما إذا كان هناك أي أخطاء أو تحذيرات. قم بإصلاحه ان حدث ذلك، والاستمرار في وضع التصحيح حتى اكمال البرنامج.

* '''حاول ان لا تقوم بارجاع علامات <script> و<style> مباشرة''' - بل استخدم بدلا من ذلك الوظائف التالية[[Function_Reference/wp_enqueue_style|wp_enqueue_style()]] و [[Function_Reference/wp_enqueue_script|wp_enqueue_script()]]. التي تساعد في ازالة المكرر منها. للمزيد تابع المشاركات التالية: [http://planetozh.com/blog/2008/04/how-to-load-javascript-with-your-wordpress-plugin/ Ozh Richard], [http://beerpla.net/2010/01/13/wordpress-plugin-development-how-to-include-css-and-javascript-conditionally-and-only-when-needed-by-the-posts/ Artem Russakovskii], و [http://www.prelovac.com/vladimir/best-practice-for-adding-javascript-code-to-wordpress-plugin Vladimir Prelovac].

= External Resources موارد خارجية =
* [http://www.packtpub.com/article/anatomy-wordpress-plugin Anatomy of a WordPress Plugin Featuring Hello Dolly ] (09March11) 
* [http://planetozh.com/blog/2009/09/top-10-most-common-coding-mistakes-in-wordpress-plugins/ Top 10 Most Common Coding Mistakes in WordPress Plugins] (11SEP09)
* [http://markjaquith.wordpress.com/2006/06/02/wordpress-203-nonces/ WordPress 2.0.3: Nonces (Secure your forms with nonces)] (02JUN06)
* [http://amiworks.co.in/talk/simplified-ajax-for-wordpress-plugin-developers-using-jquery/ Simplified AJAX For WordPress Plugin Developers using Jquery](10APR08)
* [http://dev.feijaocosta.com.br/criando-plugins-para-wordpress/ "Criando Plugins para WordPress" by Feijão Costa  (in Brazilian Portuguese)] (10JUN15)
* [http://www.devlounge.net/extras/how-to-write-a-wordpress-plugin 12 part "How to Write a Wordpress Plugin" at DevLounge.net] by [http://ronalfy.com Ronald Huereca]
* [http://ditio.net/2007/08/09/how-to-create-wordpress-plugin-from-a-scratch/ How to create WordPress Plugin from a scratch] (9AUG07)
* [http://mitcho.com/code/hookpress/ HookPress], a plugin that enables extending WordPress in languages other than PHP via webhooks. (26SEP09)
* [http://beerpla.net/2010/01/13/wordpress-plugin-development-how-to-include-css-and-javascript-conditionally-and-only-when-needed-by-the-posts/ How To Include CSS and JavaScript Conditionally And Only When Needed By The Posts] (13JAN10)
* [http://aaron.jorb.in/blog/2010/03/wordpress-external-cron-plugin/ Demonstrating how to use the Settings API, WP_Http, and Pseudo-cron] (01MAR10)
* [http://make.wordpress.org/plugins/ Make WordPress Plugins] - official blog with information for plugin authors (25Jun12)
* [http://generatewp.com/ WordPress Generator] - GenerateWP provides user-friendly tools for developers to create advanced systems built on WordPress. (15JAN13)
* [http://wpsettingsapi.jeroensormani.com/ WP Settings API Generator] - WP Settings API is a tool for developers to easily create options pages for your plugins. (10JUL14)
* [http://www.yaconiello.com/blog/how-to-write-wordpress-plugin/ How to write a WordPress Plugin] - A simple how-to guide to writing a class based WordPress plugin with a settings page, custom post type and metaboxes that separates business and template logic in an easy to understand way. (31Jan13)

[[Category:Plugins]]
[[Category:WordPress Development]]
[[Category:UI Link]]
[[Category:الاضافات]]
{{ar:Browsebar}}