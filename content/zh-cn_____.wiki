{{Languages|
{{en|Conditional Tags}}
{{fr|Marqueurs_conditionnels}}
{{ja|Conditional Tags}}
{{tr|Kosul Etiketleri}}
{{pt-br|Tags condicionais}}
{{zh-cn|条件标签}}
}}
== 介绍 ==

条件标签能通过使用与页面匹配的 ''条件''，让你改变模板中某一页面的显示内容和控制如何显示这些内容。例如，你也许指向在你的主页上显示某些文章，你可以使用 <tt>[[#主页|is_home()]]</tt>这样的条件标签来完成这项工作。

Note the close relation these tags have to WordPress [[Template Hierarchy]].

'''Warning: You can only use conditional query tags after the ''init'' action hook in WordPress. For themes, this means the conditional tag will never work properly if you are using it in the body of functions.php, i.e. outside of a function.'''

== The Conditions For ... ==

All of the Conditional Tags test to see whether a certain condition is met, and then returns either TRUE or FALSE.  '''The conditions under which various tags output TRUE is listed below'''.  Those tags which can accept parameters are so noted.

=== The Main Page ===

; <tt>[http://codex.wordpress.org/Function_Reference/is_home is_home()]</tt> : When the main blog page is being displayed. This is the page which shows the time based blog content of your site, so if you've set a static Page for the Front Page (see below), then this will only be true on the Page which you set as the "Posts page" in [[Administration_Panels|Administration]] > [[Administration_Panels#Reading|Settings]] > [[Settings_Reading_SubPanel|Reading]].

=== The Front Page ===

; <tt>[http://codex.wordpress.org/Function_Reference/is_front_page is_front_page()]</tt> : When the front of the site is displayed, whether it is posts or a [[Pages|Page]].  Returns true when the main blog page is being displayed and the '[[Administration_Panels#Reading|Settings]] > [[Settings_Reading_SubPanel|Reading]] ->Front page displays' is set to "Your latest posts", '''or''' when '[[Administration_Panels#Reading|Settings]] > [[Settings_Reading_SubPanel|Reading]] ->Front page displays' is set to "A static page" and the "Front Page" value is the current [[Pages|Page]] being displayed. 

=== The Administration Panels ===

; <tt>[http://codex.wordpress.org/Function_Reference/is_admin is_admin()]</tt>: When the Dashboard or the administration panels are being displayed.

=== A Single Post Page ===

; <tt>[http://codex.wordpress.org/Function_Reference/is_single is_single()]</tt> : When any single Post (or attachment, or custom Post Type) page is being displayed. (False for Pages)
; <tt>is_single( '17' )</tt> : When Post 17 is being displayed as a single Post.
; <tt>is_single( 'Irish Stew' )</tt> : When the Post with Title "Irish Stew" is being displayed as a single Post.
; <tt>is_single( 'beef-stew' )</tt> : When the Post with Post Slug "beef-stew" is being displayed as a single Post.
; <tt>is_single( array( 17, 'beef-stew', 'Irish Stew' ) )</tt> : Returns true when the single post being displayed is either post ID 17, or the ''post_name'' is "beef-stew", or the ''post_title'' is "Irish Stew".
; <tt>is_single( array( 17, 19, 1, 11 ) )</tt> : Returns true when the single post being displayed is either ''post ID = '' 17, ''post ID = '' 19, ''post ID = '' 1 or  ''post ID = '' 11.
; <tt>is_single( array( 'beef-stew', 'pea-soup', 'chili' ) )</tt> : Returns true when the single post being displayed is either the ''post_name'' "beef-stew", ''post_name'' "pea-soup" or ''post_name'' "chili".
; <tt>is_single( array( 'Beef Stew', 'Pea Soup', 'Chili' ) )</tt> : Returns true when the single post being displayed is either the ''post_title'' is "Beef Stew", ''post_title'' is "Pea Soup" or ''post_title'' is "Chili".

Note: This function does not distinguish between the post ID, post title, or post name. A post named "17" would be displayed if a post ID of 17 was requested. Presumably the same holds for a post with the slug "17".

=== A Sticky Post ===
; <tt>[http://codex.wordpress.org/Function_Reference/is_sticky is_sticky()]</tt> : Returns true if "Stick this post to the front page" check box has been checked for the current post. In this example, no post ID argument is given, so the post ID for the [[The Loop|Loop]] post is used. 
; <tt>is_sticky( '17' )</tt> : Returns true when Post 17 is considered a sticky post.

=== A Post Type ===
; <tt>[http://codex.wordpress.org/Function_Reference/get_post_type get_post_type()]</tt> : Not really a conditional tag, but returns the [[Function_Reference/register_post_type|registered post type]] of the current post. 
; <tt>if ( 'book' == get_post_type() ) ...</tt> : Tests to see if the current post is of type 'book'. 
; <tt>[http://codex.wordpress.org/Function_Reference/post_type_exists post_type_exists()]</tt> : Returns true if a given post type is a [[Function_Reference/register_post_type|registered post type]].  This does not test if a post is a certain post_type.   Note: This function replaces a function called ''is_post_type'' which existed briefly in 3.0 development.

=== A Post Type is Hierarchical ===
; <tt>[http://codex.wordpress.org/Function_Reference/is_post_type_hierarchical is_post_type_hierarchical( $post_type )]</tt> : Returns true if this $post_type has been set with [[Function_Reference/register_post_type|hierarchical support when registered]]. 
; <tt>is_post_type_hierarchical( 'book' )</tt> : Returns true if the book post type was registered as having support for hierarchical.

=== A Post Type Archive ===
:<tt>[http://codex.wordpress.org/Function_Reference/is_post_type_archive is_post_type_archive()]</tt> : Returns true on any post type archive. 
:<tt>is_post_type_archive( $post_type )</tt> : Returns true if on a post type archive page that matches $post_type (can be a single post type or an array of post types).

To turn on post type archives, use 'has_archive' => true, when [http://codex.wordpress.org/Function_Reference/register_post_type registering the post type].

=== A Comments Popup ===
; <tt>[http://codex.wordpress.org/Function_Reference/is_comments_popup is_comments_popup()]</tt> : When in Comments Popup window.

=== Any Page Containing Posts ===

; <tt>[http://codex.wordpress.org/Function_Reference/comments_open comments_open()]</tt>: When comments are allowed for the current Post being processed in the [[The Loop|WordPress Loop]].
; <tt>[http://codex.wordpress.org/Function_Reference/pings_open pings_open()]</tt>: When pings are allowed for the current Post being processed in the [[The Loop|WordPress Loop]].

=== A PAGE Page ===

This section refers to WordPress [[Pages]], not any generic webpage from your blog, or in other words to the built in ''post_type'' 'page'.

; <tt>[http://codex.wordpress.org/Function_Reference/is_page is_page()]</tt> : When any [[Pages|Page]] is being displayed.
; <tt>is_page( 42 )</tt> : When [[Pages|Page]] 42 (ID) is being displayed.
; <tt>is_page( 'About Me And Joe' )</tt> : When the [[Pages|Page]] with a ''post_title'' of "About Me And Joe" is being displayed.
; <tt>is_page( 'about-me' )</tt> : When the [[Pages|Page]] with a ''post_name'' (slug) of "about-me" is being displayed.
; <tt>is_page( array( 42, 'about-me', 'About Me And Joe' ) )</tt> : Returns true when the [[Pages|Pages]] displayed is either ''post ID'' = 42, or ''post_name'' is "about-me", or ''post_title'' is "About Me And Joe".
; <tt>is_page( array( 42, 54, 6 ) )</tt> : Returns true when the [[Pages|Pages]] displayed is either ''post ID'' = 42, or ''post ID'' = 54, or ''post ID'' = 6.

==== Testing for paginated Pages ====

You can use this code to check whether you're on the nth page in a Post or PAGE Page that has been divided into pages using the <tt><!<nowiki></nowiki>--nextpage--></tt> QuickTag. This can be useful, for example, if you wish to display meta-data only on the first page of a post divided into several pages.

'''Example 1'''
<pre><?php         
$paged = $wp_query->get( 'paged' );

if ( ! $paged || $paged < 2 ) 
{
    // This is not a paginated page (or it's simply the first page of a paginated page/post)

} 
else 
{
   // This is a paginated page.

}
?>
</pre>

'''Example 2'''
<!-- Could someone please take a look at the difference between 'paged' & 'page'? I ran into some support requests, where people said it's 'page', not 'paged' -->

<pre><?php
$paged = get_query_var( 'page' ) ? get_query_var( 'page' ) : false;
if ( $paged === false ) 
{
    // This is not a paginated page (or it's simply the first page of a paginated page/post)

} 
else 
{
   // This is a paginated page.

}
?></pre>

==== Testing for sub-Pages ====

There is no <tt>is_subpage()</tt> function yet, but you can test this with a little code:

'''Snippet 1'''
<pre><?php

global $post;     // if outside the loop

if ( is_page() && $post->post_parent ) {
    // This is a subpage

} else {
    // This is not a subpage
}
?></pre>

You can create your own is_subpage() function using the code in Snippet 2. Add it to your [http://codex.wordpress.org/Theme_Development#Theme_Functions_File functions.php] file. It tests for a parent page in the same way as Snippet 1, but will return the ID of the page parent if there is one, or <tt>false</tt> if there isn't.

'''Snippet 2'''
<pre>
function is_subpage() {
    global $post;                              // load details about this page

    if ( is_page() && $post->post_parent ) {   // test to see if the page has a parent
        return $post->post_parent;             // return the ID of the parent post

    } else {                                   // there is no parent so ...
        return false;                          // ... the answer to the question is false
    }
}
</pre>

It is advisable to use a function like that in Snippet 2, rather than using the simple test like Snippet 1, if you plan to test for sub pages frequently.

To test if the parent of a page is a specific page, for instance "About" (page id ''pid'' 2 by default), we can use the tests in Snippet 3. These tests check to see if we are looking at the page in question, as well as if we are looking at any child pages. This is useful for setting variables specific to different sections of a web site, so a different banner image, or a different heading.

'''Snippet 3'''
<pre>
<?php

if ( is_page( 'about' ) || '2' == $post->post_parent ) {    
    // the page is "About", or the parent of the page is "About"
    $bannerimg = 'about.jpg';

} elseif ( is_page( 'learning' ) || '56' == $post->post_parent ) {	
    $bannerimg = 'teaching.jpg';

} elseif ( is_page( 'admissions' ) || '15' == $post->post_parent ) { 
    $bannerimg = 'admissions.jpg';

} else { 
    $bannerimg = 'home.jpg'; // just in case we are at an unclassified page, perhaps the home page
}	

?>
</pre>

Snippet 4 is a function that allows you to carry out the tests above more easily. This function will return true if we are looking at the page in question (so "About") or one of its sub pages (so a page with a parent with ID "2").

'''Snippet 4'''
<pre>
function is_tree( $pid ) {      // $pid = The ID of the page we're looking for pages underneath
    global $post;               // load details about this page

    if ( is_page($pid) )
        return true;            // we're at the page or at a sub page

    $anc = get_post_ancestors( $post->ID );
    foreach ( $anc as $ancestor ) {
        if( is_page() && $ancestor == $pid ) {
            return true;
        }
    }

    return false;  // we arn't at the page, and the page is not an ancestor
}
</pre>

Add Snippet 4 to your [http://codex.wordpress.org/Theme_Development#Theme_Functions_File functions.php] file, and call <tt>is_tree( 'id' )</tt> to see if the current page is the page, or is a sub page of the page. In Snippet 3, <tt>is_tree( '2' )</tt> would replace "<tt>is_page( 'about' ) || '2' == $post->post_parent</tt>" inside the first <tt>if</tt> tag. 

Note that if you have more than one level of pages the parent page is the one directly above and not the one at the very top of the hierarchy.

====Is a Page Template====
Allows you to determine whether or not you are in a page template or if a specific page template is being used.

; <tt>[http://codex.wordpress.org/Function_Reference/is_page_template is_page_template()]</tt> : Is a [[Pages#Page_Templates|Page Template]] being used?
; <tt>is_page_template( 'about.php' )</tt> : Is [[Pages#Page_Templates|Page Template]] 'about' being used? Note that unlike with other conditionals, if you want to specify a particular Page Template, you need to use the filename, such as about.php or my_page_template.php.

=== A Category Page ===

; <tt>[http://codex.wordpress.org/Function_Reference/is_category is_category()]</tt> : When any Category archive page is being displayed.
; <tt>is_category( '9' )</tt> : When the archive page for Category 9 is being displayed.
; <tt>is_category( 'Stinky Cheeses' )</tt> : When the archive page for the Category with Name "Stinky Cheeses" is being displayed.
; <tt>is_category( 'blue-cheese' )</tt> : When the archive page for the Category with Category Slug "blue-cheese" is being displayed.
; <tt>is_category( array( 9, 'blue-cheese', 'Stinky Cheeses' ) )</tt> : Returns true when the category of posts being displayed is either term_ID 9, or ''slug'' "blue-cheese", or ''name'' "Stinky Cheeses".  
; <tt>in_category( '5' )</tt> : Returns true if the current post is '''in''' the specified category id. [http://codex.wordpress.org/Template_Tags/in_category read more]
; <tt>in_category( array( 1,2,3 ) )</tt> : Returns true if the current post is '''in''' either category 1, 2, or 3.
; <tt>! in_category( array( 4,5,6 ) )</tt> : Returns true if the current post is '''NOT in''' either category 4, 5, or 6.  Note the '''!''' at the beginning.
'''Note:''' Be sure to check your spelling when testing, "is" and "in" are a big difference.

See also <tt>[[#Any Archive Page|is_archive()]]</tt> and [[Category Templates]].

=== A Tag Page ===

; <tt>[http://codex.wordpress.org/Function_Reference/is_tag is_tag()]</tt> : When any Tag archive page is being displayed.
; <tt>is_tag( 'mild' )</tt> : When the archive page for tag with the slug of 'mild' is being displayed.
; <tt>is_tag( array( 'sharp', 'mild', 'extreme' ) )</tt> : Returns true when the tag archive being displayed has a slug of either "sharp", "mild", or "extreme".  
; <tt>has_tag()</tt> : When the current post has a tag. Must be used inside The Loop. 
; <tt>has_tag( 'mild' )</tt> : When the current post has the tag 'mild'.
; <tt>has_tag( array( 'sharp', 'mild', 'extreme' ) )</tt> : When the current post has any of the tags in the array.

See also <tt>[[#Any Archive Page|is_archive()]]</tt> and [[Tag Templates]].

=== A Taxonomy Page ===

; <tt>[http://codex.wordpress.org/Function_Reference/is_tax is_tax()]</tt> : When any Taxonomy archive page is being displayed.
; <tt>is_tax( 'flavor' )</tt> : When a Taxonomy archive page for the flavor taxonomy is being displayed.
; <tt>is_tax( 'flavor', 'mild')</tt> : When the archive page for the flavor taxonomy with the slug of 'mild' is being displayed.
; <tt>is_tax( 'flavor', array( 'sharp', 'mild', 'extreme' ) )</tt> : Returns true when the flavor taxonomy archive being displayed has a slug of either "sharp", "mild", or "extreme".
; <tt>has_term()</tt> : Check if the current post has any of given terms. The first parameter should be an empty string. It expects a taxonomy slug/name as a second parameter. 
; <tt>has_term( 'green', 'color' )</tt> : When the current post has the term 'green' from taxonomy 'color'.
; <tt>has_term( array( 'green', 'orange', 'blue' ), 'color' )</tt> : When the current post has any of the terms in the array.

See also <tt>[[#Any Archive Page|is_archive()]]</tt>.

=== A Registered Taxonomy ===
; <tt>[http://codex.wordpress.org/Function_Reference/taxonomy_exists taxonomy_exists()]</tt> : When a particular taxonomy is registered via [[Function_Reference/register_taxonomy|register_taxonomy()]]. Formerly is_taxonomy(), which was deprecated in [[Version 3.0]]

=== An Author Page ===
; <tt>[http://codex.wordpress.org/Function_Reference/is_author is_author()]</tt> : When any Author page is being displayed.
; <tt>is_author( '4' )</tt> : When the archive page for Author number (ID) 4 is being displayed.
; <tt>is_author( 'Vivian' )</tt> : When the archive page for the Author with Nickname "Vivian" is being displayed.
; <tt>is_author( 'john-jones' )</tt> : When the archive page for the Author with Nicename "john-jones" is being displayed.
; <tt>is_author( array( 4, 'john-jones', 'Vivian' ) )</tt> : When the archive page for the author is either user ID 4, or ''user_nicename'' "john-jones", or ''nickname'' "Vivian". 

See also <tt>[[#Any Archive Page|is_archive()]]</tt> and [[Author Templates]].

=== A Multi-author Site ===
; <tt>is_multi_author( )</tt> : When more than one author has published posts for a site.  Available with [[Version 3.2]].

=== A Date Page ===
; <tt>[http://codex.wordpress.org/Function_Reference/is_date is_date()]</tt> : When ''any'' date-based archive page is being displayed (i.e. a monthly, yearly, daily or time-based archive). 
; <tt>[http://codex.wordpress.org/Function_Reference/is_year is_year()]</tt> : When a yearly archive is being displayed. 
; <tt>[http://codex.wordpress.org/Function_Reference/is_month is_month()]</tt> : When a monthly archive is being displayed. 
; <tt>[http://codex.wordpress.org/Function_Reference/is_day is_day()]</tt> : When a daily archive is being displayed. 
; <tt>[http://codex.wordpress.org/Function_Reference/is_time is_time()]</tt> : When an hourly, "minutely", or "secondly" archive is being displayed. 
; <tt>[http://codex.wordpress.org/Function_Reference/is_new_day is_new_day()]</tt> : If today is a new day according to post date. Should be used inside the loop. 

See also <tt>[[#Any Archive Page|is_archive()]]</tt>.

=== Any Archive Page ===

; <tt>[http://codex.wordpress.org/Function_Reference/is_archive is_archive()]</tt> : When ''any'' type of Archive page is being displayed.  Category, Tag, Author and Date based pages are all types of Archives.


=== A Search Result Page ===

; <tt>[http://codex.wordpress.org/Function_Reference/is_search is_search()]</tt> : When a search result page archive is being displayed.

=== A 404 Not Found Page ===

; <tt>[http://codex.wordpress.org/Function_Reference/is_404 is_404()]</tt> : When a page displays after an "HTTP 404: Not Found" error occurs.

=== A Paged Page ===

; <tt>[http://codex.wordpress.org/Function_Reference/is_paged is_paged()]</tt> : When the page being displayed is "paged".  This refers to an archive or the main page being split up over several pages and will return true on 2nd and subsequent pages of posts.  This does ''not'' refer to a Post or [[Pages|Page]] whose content has been divided into pages using the <tt><!<nowiki></nowiki>--nextpage--></tt> [[Writing Posts#Here is a run-down of the quicktag functions:|QuickTag]]. To check if a Post or Page has been divided into pages using the <tt><!<nowiki></nowiki>--nextpage--></tt> QuickTag, see  [[#Testing_for_paginated_Pages]].

=== An Attachment ===
 
; <tt>[http://codex.wordpress.org/Function_Reference/is_attachment is_attachment()]</tt> : When an attachment document to a post or [[Pages|Page]] is being displayed. An attachment is an image or other file uploaded through the post editor's upload utility. Attachments can be displayed on their own 'page' or template. For more information, see [[Using Image and File Attachments]].

=== A Single Page, Single Post or Attachment ===
; <tt>[http://codex.wordpress.org/Function_Reference/is_singular is_singular()]</tt> : When any of the following return true: <tt>is_single()</tt>, <tt>is_page()</tt> or <tt>is_attachment()</tt>.
; <tt>is_singular( 'book' )</tt> : True when viewing a post of the [[Custom Post Types]] book.  
; <tt>is_singular( array( 'newspaper', 'book' ) )</tt> : True when viewing a post of the [[Custom Post Types]] newspaper or book.  

=== A Syndication ===

; <tt>[http://codex.wordpress.org/Function_Reference/is_feed is_feed()]</tt> : When the site requested is a [[Introduction_to_Blogging#Syndication|Syndication]]. This tag is not typically used by users; it is used internally by WordPress and is available for Plugin Developers.

=== A Trackback ===

; <tt>[http://codex.wordpress.org/Function_Reference/is_trackback is_trackback()]</tt> : When the site requested is WordPress' hook into its Trackback engine.  This tag is not typically used by users; it is used internally by WordPress and is available for Plugin Developers.

=== A Preview ===

; <tt>[http://codex.wordpress.org/Function_Reference/is_preview is_preview()]</tt> : When a single post being displayed is viewed in Draft mode.

=== Has An Excerpt ===
; <tt>[http://codex.wordpress.org/Function_Reference/has_excerpt has_excerpt()]</tt> : When the current post has an excerpt
; <tt>has_excerpt( 42 )</tt> : When the post 42 (ID) has an excerpt.

<pre><?php
// Get $post if you're inside a function
global $post;

if ( empty( $post->post_excerpt ) ) {
    // This post has no excerpt
} else {
    // This post has excerpt
}
?></pre>


<b>Other Use</b>

When you need to hide the auto displayed excerpt and only display your post's excerpts.

<pre>
<?php if ( ! has_excerpt() ) {
      echo '';
} else { 
      the_excerpt();
}
</pre>

Replace auto excerpt for a text or code.
<pre>
<?php if ( ! has_excerpt() ) {?>
    <!-- you text or code -->
<?php } ?>
</pre>

=== Has A Nav Menu Assigned ===
; <tt>[http://codex.wordpress.org/Function_Reference/has_nav_menu has_nav_menu()]</tt> : Whether a registered nav menu location has a menu assigned
Returns: assigned(true) or not(false)

=== Inside The Loop ===
; <tt>[http://codex.wordpress.org/Function_Reference/in_the_loop in_the_loop()]</tt> : Check to see if you are "inside the loop".  Useful for plugin authors, this conditional returns as true when you are inside the loop.

=== Is Sidebar Active ===
; <tt>[http://codex.wordpress.org/Function_Reference/is_active_sidebar is_active_sidebar()]</tt> : Check to see if a given sidebar is active (in use).  Returns true if the sidebar (identified by name, id, or number) is in use, otherwise the function returns false.  

=== Part of a Network (Multisite) ===
; <tt>[http://codex.wordpress.org/Function_Reference/is_multisite is_multisite()]</tt> : Check to see whether the current site is in a WordPress MultiSite install. 

=== Admin of a Network (Multisite) ===
; <tt>[[Function_Reference/is_super_admin|is_super_admin()]]</tt> : Determine if user is a network (super) admin.

=== An Active Plugin ===
; <tt>[[Function_Reference/is_plugin_active|is_plugin_active()]]</tt> : Checks if a plugin is activated.

=== Theme supports a feature ===
; <tt>[[Function Reference/current_theme_supports|current_theme_supports()]]</tt> : Check if various theme features exist.

==Working Examples==

Here are working samples to demonstrate how to use these conditional tags.

===Single Post===

This example shows how to use <tt>is_single()</tt> to display something specific only when viewing a single post page:
<pre>
if ( is_single() ) {
   echo 'This is just one of many fabulous entries in the ' . single_cat_title() . ' category!';
}
</pre>


Other example how to use Conditional Tags into loop. choose display content or excerpt in the index.php, when this is unique archive for display single post, categories, home and page.

<pre>
if ( is_home() || is_single() ) {
   the_content();
}
else {
   the_excerpt();
}
</pre>

When you need display a code or element, in a place that is not the home page.

<pre>
<?php if ( ! is_home() ) {?>

 Insert your markup ...

<?php }?>
</pre>

===Date-Based Differences===

If someone browses our site by date, let's distinguish posts in different years by using different colors:

<pre>
&lt;?php
// this starts The Loop
if ( have_posts() ) : while ( have_posts() ) : the_post(); ?&gt;
&lt;h2 id="post-&lt;?php the_ID(); ?&gt;"&gt;
&lt;a href="&lt;?php the_permalink() ?&gt;" rel="bookmark" title="Permanent Link to &lt;?php the_title(); ?&gt;"&gt;
&lt;?php the_title(); ?&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;small&gt;&lt;?php the_time('F jS, Y') ?&gt; &lt;!-- by &lt;?php the_author() ?&gt; --&gt;&lt;/small&gt;

&lt;?php
// are we showing a date-based archive?
if ( is_date() ) {
     if ( date( 'Y' ) != get_the_date( 'Y' ) ) {
          // this post was written in a previous year
          // so let's style the content using the "oldentry" class
          echo '&lt;div class="oldentry"&gt;';
     } else {
          echo '&lt;div class="entry"&gt;';
     }
} else {
     echo '&lt;div class="entry"&gt;';
}

the_content( 'Read the rest of this entry &raquo;' ); 

?&gt;
&lt;/div&gt;
</pre>

===Variable Sidebar Content===

This example will display different content in your sidebar based on what page the reader is currently viewing.

<pre>
<!-- begin sidebar -->
<div id="sidebar">
<?php
// let's generate info appropriate to the page being displayed
if ( is_home() ) {
    // we're on the home page, so let's show a list of all top-level categories
    echo "<ul>";
    wp_list_categories( 'optionall=0&sort_column=name&list=1&children=0' );
    echo "</ul>";
} elseif ( is_category() ) {
    // we're looking at a single category view, so let's show _all_ the categories
     echo "<ul>";
    wp_list_categories( 'optionall=1&sort_column=name&list=1&children=1&hierarchical=1' );
    echo "</ul>";
} elseif ( is_single() ) {
    // we're looking at a single page, so let's not show anything in the sidebar
} elseif ( is_page() ) {
    // we're looking at a static page.  Which one?
    if ( is_page( 'About' ) ) {
        // our about page.
        echo "<p>This is my about page!</p>";
    } elseif ( is_page( 'Colophon' ) ) {
        echo "<p>This is my colophon page, running on WordPress " . bloginfo( 'version' ) . "</p>";
    } else {
        // catch-all for other pages
        echo "<p>Vote for Pedro!</p>";
    }
} else {
    // catch-all for everything else (archives, searches, 404s, etc)
    echo "<p>Pedro offers you his protection.</p>";
} // That's all, folks!
?>
<form id="searchform" method="get" action="<?php echo $_SERVER['PHP_SELF']; ?>">
<div>
<input type="text" name="s" id="s" size="15" />
<input type="submit" value="<?php _e( 'Search' ); ?>" />
</div>
</form>

</div>
<!-- end sidebar -->
</pre>

===Helpful 404 Page===
The [[Creating an Error 404 Page]] article has an example of using the PHP conditional function %%%isset()%%% in the [[Creating an Error 404 Page#Writing Friendly Messages|Writing Friendly Messages]] section.

===Dynamic Menu Highlighting===

The [[Dynamic Menu Highlighting]] article discusses how to use the conditional tags to enable highlighting of the current page in a menu.

===In a theme's footer.php file===
At times queries performed in other templates such as sidebar.php may corrupt certain conditional tags.  For instance, in header.php a conditional tag works properly but doesn't work in a theme's footer.php.  The trick is to put ''wp_reset_query'' before the conditional test in the footer.  For example:

<pre>
<?php
wp_reset_query();
if ( is_page( '2' ) ) {
    echo 'This is page 2!';
} 
?>
</pre>

== Conditional Tags Index ==

{| cellspacing="10" width="100%"
|- style="vertical-align:top;"
| style="width:100%" |

{| class="widefat"
|- style="background:#464646; color:#d7d7d7;"
! '''Aphabetical List'''
|- 
|
* [[#Any_Page_Containing_Posts|comments_open]]
* [[#A_Tag_Page|has_tag]]
* [[#A_Category_Page|in_category]]
* [[#A_404_Not_Found_Page|is_404]]
* [[#The_Administration_Panels|is_admin]]
* [[#Any_Archive_Page|is_archive]]
* [[#An_Attachment|is_attachment]]
* [[#An_Author_Page|is_author]]
* [[#A_Category_Page|is_category]]
* [[#A_Comments_Popup|is_comments_popup]]
* [[#A_Date_Page|is_date]]
* [[#A_Date_Page|is_day]]
* [[#A_Syndication|is_feed]]
* [[#The_Front_Page|is_front_page]]
* [[#The_Main_Page|is_home]]
* [[#A_Date_Page|is_month]]
* [[#A Multi-author Site|is_multi_author]]
* [[#Part_of_a_network|is_multisite]]
* [[#A_PAGE_Page|is_page]]
* [[#Is_a_Page_Template|is_page_template]]
* [[#A_Paged_Page|is_paged]]
* [[#A_Preview|is_preview]]
* [[#A_Search_Result_Page|is_search]]
* [[#A_Single_Post_Page|is_single]]
* [[#A_Single_Page,_Single_Post_or_Attachment|is_singular]]
* [[#A_Sticky_Post|is_sticky]]
* [[#Admin_of_a_network|is_super_admin]]
* [[#A_Tag_Page|is_tag]]
* [[#A_Taxonomy_Page|is_tax]]
* [[#A_Date_Page|is_time]]
* [[#A_Trackback|is_trackback]]
* [[#A_Date_Page|is_year]]
* [[#Any_Page_Containing_Posts|pings_open]]
|}

==Function Reference==
{{Conditional Tags}}

{{Tag Footer}}

[[Category:Conditional Tags|*]]
[[Category:Functions]]
[[Category:Advanced Topics]]
[[Category:Design and Layout]]