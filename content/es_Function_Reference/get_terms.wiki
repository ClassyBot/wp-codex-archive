{{Languages|
{{en|Function Reference/get terms}}
{{es|Function Reference/get terms}}
{{ja|関数リファレンス/get terms}}
}}

==Descripción==

Recupera los términos de una taxonomía o lista de taxonomías.

Devuelve un array object con los términos o un WP_error si una de las taxonomías no existe.

==Uso==

%%%<?php get_terms( $taxonomia, $args ); ?>%%%

=== Uso por defecto ===

<pre><?php 
// Listar las taxonomías 'post_tag' y 'my_tax'
$taxonomia = array( 
    'post_tag',
    'my_tax',
);

$args = array(
    'orderby'           => 'name', 
    'order'             => 'ASC',
    'hide_empty'        => true, 
    'exclude'           => array(), 
    'exclude_tree'      => array(), 
    'include'           => array(),
    'number'            => '', 
    'fields'            => 'all', 
    'slug'              => '',
    'parent'            => '',
    'hierarchical'      => true, 
    'child_of'          => 0,
    'childless'         => false,
    'get'               => '', 
    'name__like'        => '',
    'description__like' => '',
    'pad_counts'        => false, 
    'offset'            => '', 
    'search'            => '', 
    'cache_domain'      => 'core'
); 

$terms = get_terms($taxonomia, $args);
?></pre>

== Parámetros ==

{{Parameter|$taxonomia|string&#124;array|Las taxonomías que se van a recuperar. ([[Taxonomies#Default_Taxonomies|Default Taxonomies]])}}
{{Parameter|$args|string&#124;array|Cambia lo que se devuelve.|optional|array}}

===Posibles argumentos===

; orderby : (''string'')
:* <tt>id</tt>
:* <tt>count</tt>
:* <tt>name</tt> - Defecto
:* <tt>slug</tt>
:* <tt>term_group</tt> - No completamente implementado (avoid using)
:* <tt>none</tt>

; order : (''string'')
:* <tt>ASC</tt> - Defecto
:* <tt>DESC</tt>

; hide_empty : (''boolean'') Whether to <b>not</b> return empty $terms.
:* <tt>1 (true)</tt> - Defecto (i.e. Do not show empty terms)
:* <tt>0 (false)</tt>

; exclude : (''integer|string|array'') Un array (arreglo) de ids de term a excluir. También acepta una cadena de ids separada por comas.

; exclude_tree : (''integer|string|array'') Un array (arreglo) de ids de term padres a excluir.

; include : (''integer|string|array'') An array of term ids to include. Empty returns all.

; number : (''integer'') El máximo número de terms a retornar. Por defecto nos retorna todos ellos.

; fields : (''string'')
:* all - returns an array of term objects - Default
:* ids - returns an array of integers
:* names - returns an array of strings
:* count - (3.2+) returns the number of terms found
:* id=>parent - returns an associative array where the key is the term id and the value is the parent term id if present or 0
:* id=>slug - returns an associative array where the key is the term id and the value is the slug
:* id=>name - returns an associative array where the key is the term id and the value is the name

; slug : (''string|array'') Returns terms whose "slug" matches this value. Default is empty string.

; parent : (''integer'') Get direct children of this term (only terms whose explicit parent is this value). If 0 is passed, only top-level terms are returned. Default is an empty string.

; hierarchical : (''boolean'') Whether to include terms that have non-empty descendants (even if 'hide_empty' is set to true).
:* <tt>1 (true)</tt> - Default
:* <tt>0 (false)</tt>

; child_of : (''integer'') Get all descendents of this term. Default is 0. '''Note:''' the difference between <tt>child_of</tt> and <tt>parent</tt> is that where <tt>parent</tt> only gets direct children of the parent term (ie: 1 level down), <tt>child_of</tt> gets ''all'' descendants (as many levels as are available)

; childless : (''boolean'') Returns terms that have no children if taxonomy is hierarchical, all terms if taxonomy is not hierarchical

; get : (''string'') Default is nothing . Allow for overwriting 'hide_empty' and 'child_of', which can be done by setting the value to 'all'.

; name__like : (''string'') The term name you wish to match. It does a LIKE '%string%' query against the term name only. This matches terms that '''contain''' the 'name__like' string. '''Note:''' This was changed in WordPress 3.7, when previously name__like matched terms that '''begin with''' the string. See [http://core.trac.wordpress.org/ticket/8214 ticket #8214].

; description__like : (''string'') Returned terms' descriptions will contain the value of 'description__like', case-insensitive. Default is empty string. It does a LIKE '%string%' query against the term description only. This matches terms that '''contain''' the 'description__like' string.

; pad_counts : (''boolean'') If true, count all of the children along with the $terms.
:* <tt>1 (true)</tt>
:* <tt>0 (false)</tt> - Default

; offset : (''integer'') The number by which to offset the terms query. Must be used in conjunction with 'number' otherwise 'offset' is ignored and the entire result set is returned.

; search : (''string'') The term name you wish to match. It does a LIKE '%search_string%' query against the term name and slug. This matches terms that '''contain''' the 'search_string' string.

; cache_domain : (''string'') Version 3.2 and above. The 'cache_domain' argument enables a unique cache key to be produced when the query produced by get_terms() is stored in object cache. For instance, if you are using one of this function's filters to modify the query (such as 'terms_clauses'), setting 'cache_domain' to a unique value will not overwrite the cache for similar queries. Default value is 'core'.

'''NOTE''': Arguments are passed in the format used by [[Function_Reference/wp_parse_args|wp_parse_args()]]. e.g.

== Valores devueltos ==

; <tt>(array&#124;string&#124;WP_Error)</tt> : Array of term objects or an empty array if no terms were found. <tt>[[Class_Reference/WP_Error | WP_Error]]</tt> if any of <tt>$taxonomies</tt> does not exist. If the <tt>'fields'</tt> argument was <tt>'count'</tt>, the number of terms found will be returned as a string.

The fields returned are:
* <tt>term_id</tt>
* <tt>name</tt>
* <tt>slug</tt>
* <tt>term_group</tt>
* <tt>term_taxonomy_id</tt>
* <tt>taxonomy</tt>
* <tt>description</tt>
* <tt>parent</tt>
* <tt>count</tt>
'''Warning: string vs integer confusion!''' Field values, including <tt>term_id</tt> are returned in string format. Before further use, typecast numeric values to actual integers, otherwise WordPress will mix up term_ids and slugs which happen to have only numeric characters

== Ejemplos ==

Get all post categories ordered by count.

String syntax:
 $categories = get_terms( 'category', 'orderby=count&hide_empty=0' );

Array syntax:
<pre>
 $categories = get_terms( 'category', array(
 	'orderby'    => 'count',
 	'hide_empty' => 0,
 ) );
</pre>

Get all the links categories:
 $mylinks_categories = get_terms( 'link_category', 'orderby=count&hide_empty=0' );

List all the terms in a custom taxonomy, without a link:
<pre> $terms = get_terms( 'my_taxonomy' );
 if ( ! empty( $terms ) && ! is_wp_error( $terms ) ){
     echo '<ul>';
     foreach ( $terms as $term ) {
       echo '<li>' . $term->name . '</li>';
        
     }
     echo '</ul>';
 }
</pre>

List all the terms, with link to term archive, separated by an interpunct ('''&middot;'''):
<pre lang="php">$args = array( 'hide_empty' => 0 );

$terms = get_terms( 'my_term', $args );
if ( ! empty( $terms ) && ! is_wp_error( $terms ) ) {
    $count = count( $terms );
    $i = 0;
    $term_list = '<p class="my_term-archive">';
    foreach ( $terms as $term ) {
        $i++;
    	$term_list .= '<a href="' . get_term_link( $term ) . '" title="' . sprintf( __( 'View all post filed under %s', 'my_localization_domain' ), $term->name ) . '">' . $term->name . '</a>';
    	if ( $count != $i ) {
            $term_list .= ' &amp;middot; ';
        }
        else {
            $term_list .= '</p>';
        }
    }
    echo $term_list;
}</pre>

==Detalles==

You can inject any customizations to the query before it is sent or control the output with filters.

The 'get_terms' filter will be called when the cache has the term and will pass the found term along with the array of $taxonomies and array of $args.
 
This filter is also called before the array of terms is passed and will pass the array of terms, along with the $taxonomies and $args.

The 'list_terms_exclusions' filter passes the compiled exclusions along with the $args.

== Log de cambios ==

* Since: [[Version 2.3|2.3.0]]

== Archivo fuente ==
<!-- Need links to current source code files -->
<tt>get_terms()</tt> is located in {{Trac|wp-includes/taxonomy.php}}.

==Relacionados==
{{Term Tags}}

== Recursos ==

[[Category:Functions]]
[[Category:Taxonomies]]

* [https://wordpress.org/plugins/taxonomy-terms-order/ Crear clasificación personalizada para los términos]

{{es:Etiqueta de pié}}