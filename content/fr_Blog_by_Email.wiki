{{French Header}}
{{Stub}}
__TOC__
WordPress can be configured to use e-mail to post to a blog. To enable this functionality, you need to:
# Create a dedicated e-mail account to be used solely for posting to your blog,
# Configure WordPress to access that account, and 
# Configure WordPress to publish messages from the e-mail account

You can blog by e-mail using most standard e-mail software programs or a [[Weblog Client]] -- a program specifically designed to send posts via email.


<!-- HIDE THIS FIRST SECTION, which is redundant, until editing complete -- User:KatyCat, editor, 3/11/08
==Overview==

# Create a new e-mail account.
# Set up [[Writing_Options_SubPanel#Post_via_e-mail|Post via e-mail]] in Options > Writing in the WordPress Administration Panel, so WordPress can access that account.
# To configure WordPress to post the e-mails you send to the account you created, do one of the following:
#* Open your web browser to <nowiki>http://yourwebdomain/wordpressinstalldir/wp-mail.php</nowiki> immediately after you send an e-mail to your posting address; this will load the post. You may have to refresh the page.
#* Using the iframe command as described below, insert some short HTML code into the footer of your WordPress blog, essentially automating the wp-mail.php check you did above; again, you may have to refresh the page to see the new post. 
#* Use the [http://www.skippy.net/blog/2005/05/26/plugin-wp-cron/ WP-Cron] WP-Mail plugin. ''(Note: This appears to be obsolete in WP 2.2.)''
#* Set up a cron job to periodically view <tt><nowiki>http://yourwebdomain/wordpressinstalldir/wp-mail.php</nowiki></tt> using a command-line <tt>HTTP</tt> agent such as <tt>wget</tt>, <tt>curl</tt>, or <tt>GET</tt>.
#* If your ISP uses .qmail, use a .qmail file to call wp-mail.php directly when an email message is delivered.
FINISH HIDING OVERVIEW --> 



==Configuration d'un Article par Mail==
===Etape 1 - Créer une Adresse Mail===
# Log in to WordPress with the administration login you use to administer your WordPress blog.
# Go to Options > Writing.
# Read the instructions under '''Post via e-mail''' at the bottom of the page. At the end of these instructions, WordPress will suggest three random strings of numbers you may want to use for the login name of the new e-mail account you'll create<!-- (a.k.a. <strong>postaccount</strong>) -->. 
# Create a new e-mail account on your web host's mail server or a separate e-mail server, using one of the suggested numeric strings (or your own secret word) for the username (also called a "login name"). A mail server receives e-mails on your behalf and stores them for retrieval. Do '''not''' use public, free e-mail servers like Yahoo, Hotmail, etc., for this account. <div style="margin:20px; padding:10px; border:blue 1px solid">'''Note:''' It is strongly recommended that you use a "secret" address - that is, an e-mail account name that is very difficult to guess and known only to you, such as those suggested by WordPress.  Any e-mail sent to this address will automatically be posted to your blog. Be aware, however, that some e-mail servers do not allow numbers-only e-mail accounts or accounts starting with a number. Please check with your web host. </div>

===Etape 2 - Configurer WordPress pour qu'il Puisse Accéder à Ce Compte===
# When you are done creating the new e-mail account <!--(a.k.a. <strong>postaccount</strong>) --> , return to the Writing Options panel and fill in the name of the '''mail server''' and '''port number''' your web hosting provider uses. (If you don't know these, refer to your web hosting provider's FAQ or manual pages. The port number is usually 110.)
# Next, enter the <i>login name</i> and <i>password</i> for your new e-mail account <!-- (<strong>postaccount</strong>) -->.<br /><div style="margin:10px; padding:5px">'''NOTE:''' In the Login Name field, use the full e-mail address (e.g., <tt><nowiki>user@example.com</nowiki></tt>).</div>
# Choose the default category that will be assigned to posts submitted via e-mail. 
# Click '''Update Options''' .

<div style="margin:10px; padding:5px">'''NOTE:''' 
If you are using the [[Administration_Panels|Administration]] > [[Administration_Panels#Writing|Settings]] > [[Settings_Writing_SubPanel|Writing]] > [[Settings_Writing_SubPanel#Post_via_e-mail|Post via e-mail section]] to specify the e-mail address ''before'' you've actually created the e-mail account, remember to use the same login and password when you create the account as you specified in the section.</div>

===Etape 3 - Publiez Vos Articles par Mail ===

You've created the new e-mail account and configured your WordPress blog to accept e-mails from that account, but you still need to set up WordPress to publish those e-mail messages on your blog.  Do one of the following:

===='''Activation Manuelle du Navigateur'''====

Go to the following link <tt><nowiki>http://example.com/installdir/wp-mail.php</nowiki></tt> immediately after you send an e-mail to your new e-mail account. ('''Note:''' You must do this every time you send a new post.)

===='''Activation Automatique du Navigateur'''====

An alternative to manual browser activation is to add the following iframe code to the footer of your blog:

<code><iframe src="http://yourblogdomain/wordpressinstalldir/wp-mail.php" name="mailiframe" width="0" height="0" frameborder="0" scrolling="no" title=""></iframe></code>

Edit the above line of code so that it refers to the location of your wp-mail.php file. Add this line of code to the footer.php file in the directory for whatever theme you are using (don't include it within an HTML paragraph). 

You may have to refresh your blog to see the new post. New users may find this method the most helpful.

If you're using or would like to use the [http://www.economysizegeek.com/wp-mail/ Postie Plugin] for WordPress, use the following iframe code, which will call Postie's check mail commands:

<iframe src="http://yourblogdomain/wordpressinstalldir/wp-content/plugins/postie/get_mail.php?Submit=Run+Postie" name="mailiframe" width="0" height="0" frameborder="0" scrolling="no" title="">
</iframe>

Add this code to your footer, and the next time anyone goes to your blog, your new emails will be automatically posted, so you need to do nothing but send them.  You may have to refresh the blog to see the changes.


==== '''Activation du Cron Job''' ====

Set up a UNIX cron job to have your blog periodically view <tt><nowiki>http://example.com/installdir/wp-mail.php</nowiki></tt> using a command-line HTTP agent like wget, curl or GET. The command to execute will look like:

<nowiki>wget -N http://example.com/installdir/wp-mail.php</nowiki>

If you use a different program than <tt>wget</tt>, substitute that program and its arguments for <tt>wget</tt> in this line.

'''Note:''' Another possibility is to run "php /full/path/to/wp-mail.php" in a cronjob. This will run the php-script using php, without the need for an extra program to run. (You are more likely authorized to run php than wget.)

For more information about setting up a cron job, see:
* [http://www.unixgeeks.org/security/newbie/unix/cron-1.html Intro To Cron Jobs]
* Your hosting provider's FAQ or manual pages

'''Note to Windows Users:''' There are similar programs to cron available if your host runs Windows. For example, [http://www.visualcron.com VisualCron], [http://cronw.sourceforge.net/ Cron for Windows] and [http://www.google.com/url?sa=U&start=2&q=http://sourceforge.net/projects/pycron/&e=1102&mr=8,2!619021,!a:sr4 pycron]. Consult these projects' documentation for further information.

==== '''Activation de Procmail''' ====

If your server uses [http://www.procmail.org/ procmail], a simple <tt>.procmailrc</tt> in the blogmailaccounts home directory will be sufficient:

 <nowiki>
Shell=/bin/sh<br>
MAILDIR=$HOME/.maildir/
DEFAULT=$MAILDIR
:0
{
:0Wc
./

:0
| wget -N http://example.com/installdir/wp-mail.php

}


</nowiki>

This could be more specific, such as capturing certain subject expressions.  Check [http://www.procmail.org/ procmail] for more information.

==== '''Activation de .qmail''' ====

If your server uses qmail to process e-mail, you may be able to use it to call wp-mail.php whenever an e-mail message is delivered.  To do this, first create a small shell script to call wp-mail.php.  You could call the file <tt>wp-mail</tt>:

 #!/bin/sh
 /bin/sh -c "sleep 5; /path/to/php /path/to/your/blog/wp-mail.php > /dev/null" &

The <tt>sleep</tt> command causes a 5-second delay to allow qmail to finish processing the message before wp-mail.php is called.  Note that the ampersand on the end of the line is required.  The above script should go in your root directory, and the execute bit should be set (chmod 700).  For debugging purposes, you could change <tt>/dev/null</tt> to a filename to save the output generated by wp-mail.php.

Then all you need to do create/modify the appropriate .qmail file to call your shell script.  Add the following line to the .qmail file for your mailbox name:

 |/path/to/your/root/directory/wp-mail

See your ISP's documentation for use of .qmail files.  Naming conventions may vary for different ISPs.

== Format du Mail==

WordPress will use the Subject line of your email for the title of the post, and all body of the email will be used as the content of the post, with ''common HTML tags stripped''. WordPress will file the post under whichever category is selected for "Usual Category" in Step 1, and will use Site Admin as the poster.

Any images and attachments in your email will be posted inline. Note that image attachments are broken in Wordpress 2.5. A fix is expected in 2.6.

== Testons ==

To test your configuration, simply send an e-mail to <tt>yournewaccount@yourmaildomain</tt> (or to <tt>user@yourmaildomain</tt> if you used the <tt>.qmail</tt> forwarding setup). Then do the following:

* If you have no automated system set up, simply view <tt><nowiki>http://example.com/installdir/wp-mail.php</nowiki></tt> in your browser. The script should tell you that it found an e-mail, and print details of the post it made. Then view your blog again to see your email posted.
* If you are using an iframe code in your footer, refresh your browser to see the new post.
* If you are using WP-Cron, simply wait fifteen or twenty minutes.
* If you have a cron job running, wait until the next time it's scheduled to run (or temporarily edit the cron job to make it run sooner). If you run tail <tt>-f /var/log/cron</tt> in a terminal, you'll be able to see the job create its log entry when it's finished running. When that happens, just view the site in your web browser to see your email posted.

==Dépannage==
If you receive the following error messages, follow the procedures below.

'''Error Message:''' <pre>Ooops POP3: premature NOOP OK, NOT an RFC 1939 Compliant server</pre>

For this error, open <tt>wp-includes/class-pop3.php</tt> and change this line:

 if($this->RFC1939) {

to this:

 if(!$this->RFC1939) {

Note the exclamation point.

'''Error Message:''' <tt>There does not seem to be any new mail</tt>

This error is a bit of a misnomer - the test just checks to see if anything was retrieved.  

If you're feeling adventuresome, open <pre>wp-mail.php</pre> and search for:

  <pre>$count = $pop3->login(get_settings('mailserver_login'), get_settings('mailserver_pass'));</pre>

Change the lines following it to something like:

<pre>
  if (0 == $count) :
    echo "There does not seem to be any new mail. <br/>\n";
    echo "count = $count<br/> \n"; 
    echo "$pop3->ERROR \n";
    exit;
  endif;
</pre>

You'll then be presented with a more informative message.

The e-mail server may be refusing connections that attempt to provide an unencrypted password - like POP3.  If your webserver and e-mail server are on the same physical computer, you can specify <tt>localhost</tt> or <tt>127.0.0.1</tt> as the mail server.  That traffic is assumed to be OK without encryption because it never traveled across the network.

==Extensions et Add-ons==

There are several add-ons and hacks that will extend the capabilities of posting by e-mail with WordPress. Some of these may involve changing the core files, so do it carefully and '''make backups'''.


===Amélioration du Format Mail===

The following enhancements may be made to your <tt>wp-mail.php</tt> so your e-mail will be translated into metadata for your post:

;Sender's e-mail address :The enhanced <tt>wp-mail.php</tt> looks up the email address you send from in its user database. If there is a match with any user there, it files the post under that user. If there is no match, it drops the e-mail and does not create a post in the blog. (Great for security and spam prevention.) It is set by the '''From''' field.
;Subject line :If <tt>[n]</tt> is present anywhere in the subject line of your email, the e-mail will be filed under the category numbered n. Otherwise, it will be posted under whichever category is selected for "Usual Category" in Step 1. Example: [1] This is a Test! would be posted as "This is a Test!", filed under General.


[[Category:Getting Started]]
[[Category:Translating WordPress]]