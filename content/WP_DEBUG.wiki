{{Languages|
{{en|WP_DEBUG}}
{{fr|WP_DEBUG}}
{{it|WP_DEBUG}}
{{bn|WP_DEBUG}}
}}

WP_DEBUG is a PHP constant (a permanent global variable) that can be used to trigger the "debug" mode throughout WordPress. It is assumed to be false by default and is usually set to true in the [[Editing_wp-config.php|wp-config.php]] file on development copies of WordPress.

For information on other debugging tools built into WordPress see [[Debugging in WordPress]]

==Usage==
Enable debugging.
 define( 'WP_DEBUG', true );

Disable debugging
 define( 'WP_DEBUG', false );

{{Note|The <var>true</var> and <var>false</var> values in the example are not set in apostrophes (') because they are boolean values. If you set WP_DEBUG to 'false' that will be interpreted as true because it is a string rather than a boolean.}}

==WP_DEBUG_LOG and WP_DEBUG_DISPLAY==
<tt>WP_DEBUG_LOG</tt> and <tt>WP_DEBUG_DISPLAY</tt> are additional PHP constants that extend <tt>WP_DEBUG</tt>, and may also be used to debug WordPress.
<br/>
=== WP_DEBUG_LOG===

<tt>WP_DEBUG_LOG</tt> is a companion to <tt>WP_DEBUG</tt> that causes all errors to also be saved to a <tt>debug.log</tt> log file inside the <tt>/wp-content/</tt> directory. This is useful if you want to review all notices later or need to view notices generated off-screen (e.g. during an [[AJAX_in_Plugins|AJAX]] request or [[Function_Reference/wp_schedule_event|wp-cron]] run). 

 define( 'WP_DEBUG_LOG', true );

===WP_DEBUG_DISPLAY===

<tt>WP_DEBUG_DISPLAY</tt> is another companion to WP_DEBUG that controls whether debug messages are shown inside the HTML of pages or not. The default is 'true' which shows errors and warnings as they are generated. Setting this to false will hide all errors. This should be used in conjunction with <tt>WP_DEBUG_LOG</tt> so that errors can be reviewed later. 

 define( 'WP_DEBUG_DISPLAY', false );

==History==
The <tt>WP_DEBUG</tt> option was added in WordPress [[Version 2.3.1|Version 2.3.1]].

[http://trac.wordpress.org/ticket/5473 Starting with WordPress version 2.3.2, database errors are printed only if WP_DEBUG is set to <var>true</var>]. In earlier versions, database errors were always printed. (Database errors are handled by the [[Class_Reference/wpdb|wpdb class]] and are not affected by [http://www.php.net/errorfunc PHP's error settings].)

Starting with WordPress version 2.5, setting WP_DEBUG to <var>true</var> also raises the [http://www.php.net/error-reporting error reporting level] to E_ALL and activates warnings when deprecated functions or files are used; otherwise, WordPress sets the error reporting level to <tt>E_ALL ^ E_NOTICE ^ E_USER_NOTICE</tt>.