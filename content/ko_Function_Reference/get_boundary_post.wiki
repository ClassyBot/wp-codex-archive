{{Languages|
{{en|Function Reference/get_boundary_post}}
{{it|Riferimento funzioni/get_boundary_post}}
{{ko|Function Reference/get_boundary_post}}
{{ja|関数リファレンス/get_boundary_post}}
{{pt-br|Referência de Função/get_boundary_post}}
}}
== 함수 설명 ==
게시한 날짜 순으로 첫 포스트와 마지막 포스트를 반환합니다.

== 사용 방법 ==
%%%<?php get_boundary_post( $in_same_cat, $excluded_categories, $start, $taxonomy ); ?>%%%

== 파라미터 ==
{{Parameter|$in_same_cat|boolean|포스트가 같은 카테고리 값인지 정합니다. 기본 값은 'false' 입니다.|선택|false}}
{{Parameter|$excluded_categories|string|카테고리 ID값들의 포스트들을 제외합니다.|선택|&#39;&#39;}}
{{Parameter|$start|boolean|'true' 값은 처음 포스트를 반환하고 'false' 값은 마지막 포스트를 반환합니다.|선택|true}}
{{Parameter|$taxonomy|string|$in_same_term($in_same_cat) 값이 'true'이면 사용할 수 있습니다. 기본 값은 'category' 입니다.|선택|&#39;category&#39;}}

== 반환 값 ==
* 만약 반환할 포스트가 있다면, 그 포스트를 반환합니다. 
* 글로발(global) <tt>$post</tt> 값이 지정되어 있지않다면 null 값을 반환합니다.
* 해당하는 포스트가 없다면 비어있는 String 값을 반환합니다.
<!-- 해석은 했지만 정확히 이 값들을 반환하는지 분명하지 않습니다. 정확성을 위해 한번 확인해주세요. //Chanil Park -->

== 예시 ==

같은 카테고리의 첫번째 게시글을 호출합니다.

   <?php $first= get_boundary_post(true, '', false, 'category');
   if (!empty($first)) { foreach ($first as $post) { ?>
   <a href="<?php echo the_permalink($post->ID); ?>"><?php echo $post->post_title; ?></a>
   <?php }} ?>

같은 카테고리의 마지막 게시글을 호출합니다.

   <?php $latest= get_boundary_post(true, '', true, 'category');
   if (!empty($latest)) { foreach ($latest as $post) { ?>
   <a href="<?php echo the_permalink($post->ID); ?>"><?php echo $post->post_title; ?></a>
   <?php }} ?>



<!-- 코딩 동작 확인했고 제가 직접 짰습니다. //Chanil Park -->

== 메모 ==
get_boundary_post()를 사용할 때에는 이 글로발(global) 값을 사용합니다: (object) $post
<!-- Please double-check this for accuracy -->

== 변경 기록 ==
Since: 2.8.0

== 소스 파일 ==
<!-- Need links to current source code files -->
<tt>get_boundary_post()</tt> is located in {{Trac|wp-includes/link-template.php}}.

== 관련 문서 ==
<!--
    To Do:
    Need to find related functions.
    Need to create groups of functions and create templates to add them to a page quickly.
    Some functions may be related to many groups of functions.
-->

{{Tag Footer}}

[[Category:Functions]]