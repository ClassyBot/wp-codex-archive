{{Languages|
{{en|Pages}}
{{es|Pages}}
{{fr|Pages}}
{{it|Pagine}}
{{ja|Pages}}
{{ko|Pages}}
{{lo|Pages}}
{{mya|Pages}}
{{nl|Pagina's}}
{{pt-br|Sub-Painel Páginas-Adicionar Nova}}
{{ru|Страницы}}
{{sk|Stránky}}
{{th|Pages}}
{{zh-cn|页面}}
{{zh-tw|網誌分頁}}
}}

{{French Header}}
{{Stub}} __NOTOC__

==Introduction== 

Les '''Pages''', ou les '''Pages WordPress''' sont comme les Articles (''Posts''), sauf qu'elles peuvent faire beaucoup plus de choses que les Articles, et qu'elles existent en dehors de la chronologie normale du blog. Vous pouvez utiliser les Pages pour organiser et gérer n'importe quelle quantité de contenu. Les Pages n'existaient pas avant la version 1.5 de WordPress.

Mais, en réalité, comment les '''Pages''' fonctionnent-elles dans WordPress ? L'objectif de ce document est d'essayer d'expliquer ce qu'est une Page et ce qu'elle n'est pas, de décrire ce qu'une Page peut faire, et de donner quelques exemples.

{| cellspacing="3"
|- valign="top"
|class="MainPageKnowledgeBaseBox" style="border: 1px solid #ffc9c9; padding: .5em 1em 1em; color: #000000; background-color: #fff3f3"|
===Les Termes Utilisés dans cet Article===
<span id="Notation_Used_in_this_Article"></span>
Pour préserver la clarté du propos, dans ce document:
* "page", avec un "p" minuscule, décrira ''n'importe quel'' document [[Glossary#HTML|HTML]](en anglais) sur le web.
* "Page", avec un "P" majuscule, fera référence à une ''"Page WordPress"'', la fonctionnalité de WordPress que détaille cette page du wiki. Utilisez "'''Page'''", en '''gras''', quand l'usage du terme est ambigüe.

Pour d'autres cas relatifs à la nomenclature du mot '''Page''', voyez [[#A Note on Nomenclature|A Note on Nomenclature]] (en anglais).
|}

==Qu'est-ce qu'une Page?==

Les Articles (''Posts'') sont des objets chronologiquement orientés. Vous les rédigez à un moment en particulier, et ce moment défini leur contexte.  

De l'autre côté, les '''Pages''' sont le plus souvent utilisées pour présenter des informations à votre sujet ou au sujet du site, informations qui sont hors du temps en quelque sorte - de l'information qui reste toujours valable. Par exemple, vous pourriez écrire un Article décrivant ce que vous avez fait ou pensé un matin en particulier ("Le petit-déjeuner était bon"), mais sur une Page vous pourriez écrire quelque chose dont le contexte tient moins compte du moment. ("Ce site parle de petit-déjeuners").

Bien sûr, ceci est ''votre'' WordPress; lui et ses fonctions, utilisez-les comme bon vous semble. Les Pages peuvent servir à présenter n'importe quelle information que vous voulez voir vivre "en dehors" de votre blog. Expérimentez et soyez créatifs. Et, comme toujours, amusez-vous ! 

Quelques exemples de Pages à créer sur votre site peuvent inclure une Page de Copyright, d'Information Légale, de Permissions de Réimpression, d'Information de Contact, A Propos de Moi, A Propos du Site, de Politique d' Accessibilité, entre autres.

En général, les Pages ressemblent beaucoup aux Articles (''Posts'') en ce qu'ils ont tous les deux des Titres et un Contenu et qu'ils peuvent utiliser le Thème que vous avez choisi afin de garder  une apparence commune tout au long de votre site. Cependant, les Pages se distinguent sur des points-clés qui les font différer des Articles. 

==Les pages en deux mots==

===Ce que sont les Pages===

* Les '''Pages''' conviennent à des contenus qui sont moins chronologiquement dépendants que les Articles.
* Les '''Pages''' peuvent être organisées en Pages et [[#Organizing_your_Pages|'''SousPages''']](en anglais).
* Les '''Pages''' peuvent utiliser différents '''[[#Page Templates|Thèmes]]'''(en anglais) qui peuvent inclure [[Stepping Into Templates|Template Files]], [[Template Tags]] et d'autre code PHP.

===Ce que les Pages ne sont pas===

* Les '''Pages''' ne sont ni des Articles (''Posts'') ni des extraits d'oeuvres plus grandes. Elles ne circulent pas sur la page principale de votre blog (''they don't cycle through''), et elles ne sont '''pas associées aux Catégories'''.
* Les '''Pages''' de votre blog ne sont pas des fichiers.  Elles sont stockées dans votre base de données, de la même façon que les Articles de votre blog.
* Bien que vous puissiez mettre des ([[Template Tags]]) et du code PHP dans le modèle d'une Page (''Page Template''), vous ne pouvez pas les mettre dans le '''contenu''' d'une Page et vous attendre à ce qu'ils fonctionnent. ('''Remarque''': vous pouvez obtenir cet effet en utilisant une extension Php telle que  [http://dev.wp-plugins.org/wiki/RunPHP RunPHP].  Voyez aussi la liste [[Plugins/Posts Formatting|Posts Formatting Plugins]].)

==Créer des Pages==

Pour créer une nouvelle Page, identifiez-vous dans votre installation Wordpress avec un niveau  d'administration suffisamment élevé pour pouvoir créer de nouveaux articles, puis cliquez sur l'onglet ''Ecrire'' de l'interface d'administration, où vous trouverez un onglet '''Ecrire une Page''' (à côté de ''Ecrire un Article'') : cliquer sur l'onglet ''Ecrire une Page'' vous ouvrira une  page où vous pourrez créer votre nouvelle Page.

'''Remarque''': votre fichier .htaccess ''doit'' être accessible ([[Changing_File_Permissions|writeable]]) afin que les liens permanents (''Permalinks'') fonctionnent, sinon vous devez mettre à jour votre fichier .htaccess à chaque fois que vous créez une Page.

<!-- is the .htaccess information here valid for wp 2.x.x pages ? isn't it only related to 1.- versions ?? I didn't want to make a change here until i'm sure. 
7-26-06 -- chradil
-->

==Publier la Liste de Vos Pages sur Votre Site==

Wordpress est capable de générer ''automatiquement'' une liste de Pages sur votre site, par exemple dans le panneau latéral (''sidebar''), en utilisant un marqueur de modèle ([[Template Tags|Template Tag]]) nommé <tt>[[Template Tags/wp_list_pages|wp_list_pages()]]</tt>.

Référez-vous s'il vous plaît à la ([[Template Tags/wp_list_pages|documentation décrivant l'utilisation de ce marqueur]]) pour trouver des informations sur comment :

*publier la liste des Pages (pour personnaliser complètement l'ordre dans lequel les Pages sont listées, vous devriez trouver utile le champ "Ordre des Pages" dans le panneau d'administration Ecrire-->Ecrire une Page. <!-- [[USER:MDAWaffe/Write Page SubPanel]] -->),
*([[Template Tags/wp_list_pages#Exclude Pages from List|exclure]]) ou 'cacher' une Page de cette  liste,
*contrôler quelles Pages sont publiées (par exemple toutes les Pages ou seulement certaines Sous-Pages), et
*contrôler la profondeur hiérarchique des Pages que la liste dévoile (exemple : ne montrer que les Pages, ou les Pages + Sous-Pages, ou les Pages + Sous-Pages + Sous-Pages des Sous-Pages, etc)

Naturellement, vous pouvez aussi mettre manuellement des liens vers vos Pages à l'aide de liens HTML. Par exemple, si vous voulez que votre Page de Copyright apparaisse dans votre pied-de-page, ce lien pourrait ressembler à 

 <a title="Copyright information" href="wordpress/?page_id=14">Copyright 1996-2006</a>
si vous n'avez pas choisi de liens permanents ([[Using Permalinks|Permalinks]]), ou 

 <a title="Copyright information" href="wordpress/copyright/">Copyright 1996-2006</a>
si vous les avez activés.

'''Remarque''': Votre fichier .htaccess ''doit'' être accessible (''writeable'') pour que les liens permanents des Pages fonctionnent, sinon vous devez mettre à jour ce fichier à chaque fois que vous créez une Page.

==Organiser Vos Pages==

De la même façon que vous pouvez avoir des Sous-Catégories à l'intérieur de vos Catégories, vous pouvez aussi avoir des '''Sous-Pages''' liées à vos Pages, créant ainsi une hiérarchie de pages.

Par exemple, supposons que vous êtes entrain de créer un site WordPress pour une agence de voyages et que vous vouliez créer une Page unique pour chaque continent et chaque pays vers lesquels votre agence travaille. Vous commenceriez par créer une Page nommée "Afrique" sur laquelle vous pourriez écrire des informations générales sur les voyages en Afrique. Ensuite créez une série de Pages qui seraient des Sous-Pages de "Afrique" et qui pourraient inclure "Afrique du Sud", "Cameroun", "Sénégal", "Guinée". Une autre Page unique serait créée pour l' "Amérique du Sud" et exposerait des Sous-Pages du "Brésil", "Argentine", "Pérou", "Guyane". Votre site listerait ainsi :
*Afrique
**Afrique du Sud
**Cameroun
**Sénégal
**Guinée
*Amérique du Sud
**Argentine
**Brésil
**Guyane
**Pérou

Pour commencer le processus, dans le panneau d'administration (
[[fr:Panneaux_Administration|Administration]] > [[fr:Panneaux_Administration#.C3.89crire_.E2.80.93_G.C3.A9n.C3.A9rer_votre_Contenu|Ecrire]] > [[Write_Page_SubPanel|Ecrire Une  Page]]),  sur le côté droit du panneau, vous avez un champ appelé "Page Mère" (ou "Page Parent"). Il contient une liste déroulante de toutes les Pages déjà créées sur votre site. Pour que la Page que vous êtes entrain de rédiger devienne une Sous-Page, sélectionnez la Page que vous voulez faire devenir sa Page-Mère dans le menu déroulant. Si vous désignez un Parent autre que "Aucune" (ou que "Main Page (no parent)", en anglais) dans la liste, alors la Page que vous êtes entrain d'écrire ou d'éditer deviendra l'enfant, la Sous-Page, de la Page que vous venez de désigner. 

Ainsi, quand vos Pages sont [[#Listing Your Pages on Your Site|listées]] sur votre site, les Sous-Pages seront présentées comme les enfants de leur Page-Mère. Les liens permanents ( [[Using Permalinks|Permalinks]] ) de vos Pages reflèteront aussi cette hiérarchie des Pages.

Dans l'exemple précédent sur une agence de voyages, le lien permanent pour la Page Sénégal serait :

<nowiki>http://exemple.com/afrique/senegal/</nowiki>

== Modèles de Pages ==

Les pages individuelles peuvent être configurées pour utiliser un modèle de Page personnalisé que vous aurez créé dans votre thème. Ce nouveau modèle de Page va remplacer le modèle de Page par défaut, <tt>page.php</tt> inclu dans votre thème. Consultez [[#modele_page_particuliere|Quel modèle est utilisé pour afficher une Page particulière ?]], plus bas, pour savoir exactement quel modèle sera utilisé. Mais avant cela, lisez ce qui suit pour comprendre la réponse <tt>:)</tt>

Wordpress peut être configuré pour utiliser '''différents modèles de Pages selon les Pages'''. Vers le bas et la droite de la section 'Pages' dans l'interface d'administration ('''Pages -> Ajouter''') se trouve un menu déroulant nommé 'Modèle'. Vous pouvez au travers de ce menu choisir le modèle de Page qui sera utilisé lors de l'affichage de la page en cours d'édition. '''NOTE: ''' Afin de pouvoir accéder au menu déroulant, au moins un modèle de Page doit être disponible dans le thème actif. (Ce menu peut aussi être atteint en passant par le Menu '''Gérer''' de l'interface d'administration puis en sélectionnant la page à éditer).

===Modèles de Page du thème Default===

Le thème Default contient trois modèles pour votre utilisation:

* <tt>page.php</tt> - Modèle Default: Affiche le contenu de la Page
* <tt>archives.php</tt> - Ignore le contenu de la Page et affiche à la place une liste des archives par mois et des archives par sujet (catégorie)
* <tt>links.php</tt> - Ignore le contenu de la Page et affiche à la place les liens utilisant [[Les_Marqueurs_de_Modeles/get_links_list | get_links_list]]

===Quel modèle est utilisé pour afficher une Page particulière?<span id="modele_page_particuliere"></span>===

Wordpress cherche plusieurs fichiers de modèle dans votre thème actif. Le premier trouvé sera utilisé pour afficher la page demandée. Plus bas vous trouverez l'ordre dans lequel WordPress effectue sa recherche:

#La Page sélectionnée "Modèle de Page"
#<tt>page.php</tt>
#<tt>index.php</tt>

=== Créer vos propres modèles ===

Les fichiers définissant chacun des modèles se situent dans le dossier de votre [[Using Themes|thème]]. Pour créer un nouveau modèle pour une Page vous devez créer un fichier. Appelons votre premier modèle <tt>snarfer.php</tt>. Au début de votre fichier <tt>snarfer.php</tt>, insérez les lignes suivantes :

 <?php
 /*
 Template Name: Snarfer
 */
 ?>

Le code précédent défini le fichier <tt>snarfer.php</tt> en tant que modèle "Snarfer". Naturellement, "Snarfer" peut être remplacé par un texte quelconque afin de changer le nom du modèle. Le nom de ce modèle apparaîtra dans l'Editeur de Thème comme le lien servant à éditer ce fichier.

Le fichier peut être nommé à peu près de toutes les manières, pourvu qu'il dispose de l'extension <tt>.php</tt> (consultez [[Theme Development#Theme Template Files List|Noms de fichiers réservés]] pour connaître les noms de fichier que vous ne devriez ''pas'' utiliser; ce sont des noms de fichiers que WordPress réserve à des fins spécifiques).

Ce qui suit les cinq lignes de codes précédentes est libre. Le reste du code que vous écrirez contrôlera la façon dont les Pages qui utilisent le Modèle Snarfer s'afficheront. Consultez [[Template Tags]] pour une description des diverses fonctions des modèles WordPress que vous pouvez utiliser pour cela. Vous pouvez trouver plus pratique de dupliquer des modèles (comme <tt>page.php</tt> ou <tt>index.php</tt>) en <tt>snarfer.php</tt> et d'ajouter les cinq lignes plus haut en début du fichier. En procédant ainsi, vous n'aurez plus qu'à ''modifier'' le code HTML et PHP plutôt que de le créer à partir de zéro. Des exemples sont visibles dans la section suivante. Une fois que vous aurez créé un modèle de Page, il faut le placer dans le dossier de votre thème actif. Si vous utilisez un thème que vous n'avez pas créé vous-même, il faudra créer un thème enfant (voir [[Child_Themes|Child Themes]]) pour éviter l'écrasement des fichiers lors de mises à jour. Une fois le modèle ajouté, il sera sélectionnable lorsque vous créerez ou éditerez une Page.

== Exemples de Pages et de modèles ==

Ce qui suit sont des exemples de suite d'instructions. Libre à vous de l'enrichir.

=== Archives avec un Contenu ===
Ceci est un modèle de Page qui montre un contenu de Page en haut, et qui affiche une liste des archives du mois et les catégories en dessous.
Ce dernier est conçu pour fonctionner avec le thème Default de WordPress (de Aka Kubrick), mais il fonctionnera probablement avec beaucoup d'autres thèmes en lui apportant quelques petites modifications.

Enregistrez le sous <tt>arc-cont.php</tt>:

<nowiki>
<?php
/*
Template Name: Archives avec contenu
*/
?>

<?php get_header(); ?>

<div id="content" class="widecolumn">

 <?php if (have_posts()) : while (have_posts()) : the_post();?>
 <div class="post">
  <h2 id="post-<?php the_ID(); ?>"><?php the_title();?></h2>
  <div class="entrytext">
   <?php the_content('<p class="serif">Lire cette page &amp;raquo;</p>'); ?>
  </div>
 </div>
 <?php endwhile; endif; ?>
 <?php edit_post_link('Modifiez cette entrée.', '<p>', '</p>'); ?>

</div>
<div id="main">

<?php include (TEMPLATEPATH . '/searchform.php'); ?>

<h2>Archives par mois:</h2>
  <ul>
    <?php wp_get_archives('type=monthly'); ?>
  </ul>

<h2>Archives par sujet:</h2>
  <ul>
     <?php wp_list_cats(); ?>
  </ul>

</div>
<?php get_footer(); ?>
</nowiki>

=== WordPress comme un CMS ===
Grâce à la nouvelle fonction Pages depuis 1.5 +, il est facile d'utiliser WordPress comme base de gestion de contenu.  

=== Utilisation d'une page comme Front Page (version 2.1 + seulement) ===
Wordpress 2.1 a introduit l'option permettant de  fixer simplement  n'importe quelle Page comme Page de couverture.  Allez dans '''Options -> Lire''' dans l'interface d'administration de Wordpress. Dans le cadre "Front Page", vous pouvez choisir de régler toute Page (publié)  Post Page comme Front Page. Le paramètre par défaut de votre blog montre les derniers messages. 

Noter que depuis la version 2.1, le tag conditionnel [http://codex.wordpress.org/Conditional_Tags#The_Main_Page is_home()] ne renvoi plus vrai pour la page de couverture fixé dans Admin. Afin de suivre l'exemple de la fonction pré-2.1 retournant vrai pour le «front» home page, utiliser le plugin is_frontpage ou is_page (domicile), où l'identité de la première page de votre choix est "Home". 
Les paragraphes suivants expliquent comment appliquer cette fonctionnalité pour les versions antérieures à la v2.1. 

=== Utiliser une page comme page de couverture avec les versions Wordpress antérieures à la version 2.1 ===

En utilisant le [http://www.semiologic.com/projects/static-front/ Static Front Page Plugin], il est possible de choisir n'importe quelle page comme  "page de couverture" de votre site. Le plugin modifie la requête page d'accueil  et affiche  la page "home" comme page de garde. 

Quand la page est affichée comme page d'accueil, si un modèle de page avec le nom de fichier <tt>home.php</tt> existe pour votre thème actif, le plugin va l'emporter sur l'ensemble du modèle de page et utiliser plutôt <tt>home.php</tt>. Le choix de cette Page comme modèle de page continuera de s'appliquer si la page est visitée comme une page standard (par exemple <tt><nowiki>http://example.com/home</nowiki></tt>/)

Comme une alternative au plug-in, WordPress reconnaitra un document 'home.php' dans le répertoire de votre modèle et l'utilisera plutôt que index.php du thème de votre page d'accueil. En Utilisant la balise de modèle [[Template Tags/query posts | query_posts()]], vous pouvez appeler n'importe quelle page avant d'engager [[The Loop]]. Par exemple: 

<pre>
<?php 
     query_posts('pagename=home'); 
?>
</pre>
Cette fonction appellera seulement le billet avec le nom de page « Home ». Voir [[Template Tags/query posts | query_posts()]] pour plus d'exemples sur le modèle de balise en action. 
Le fichier <tt>home.php</tt> n'est pas nécessaire dans les versions 2.1 +. Utilisez le paramètre dans le panneau de contrôle pour configurer votre page d'accueil statique. 


=== Inclure une page ===
Vous pouvez également inclure des pages en divers endroits sur votre site. De cette façon, vous aurez un moyen facile de modifier les éléments de votre site Web. Il existe un plugin appelé Include Pag  qui rend l'opération facile. [http://www.vtardia.com/blog/improved-include-page/ Improved Include Page] est une version mise à jour du plug-in. 

=== Faire apparaître votre blog dans un dossier non-root ===
Supposez que vous avez Wordpress fonctionnant à l'adresse http://example.com/. Supposons en outre que vous souhaitez que votre blog soit reconnu à http://example.com/blog/ et que vous souhaitez que les autres pages soient disponibles à http://example.com/page1/. 
La première chose que vous devrez faire est de créer une page d'accueil. Vous pouvez faire cela en créant home.php dans votre thème répertoire. Ensuite, créez un modèle de blog. Le moyen le plus simple d'y parvenir est de créer un fichier nommé blog.php avec le contenu suivant dans le répertoire de votre thème: 

<pre>
<?php
/*
Template Name: Blog
*/
// Which page of the blog are we on?
$paged = get_query_var('paged');
query_posts('cat=-0&paged='.$paged);
load_template(TEMPLATEPATH . '/index.php'); //loads index
?>
</pre>

Connectez-vous à Wordpress et créer une page nommée "Blog" avec le modèle "blog".  Vous avez terminé. La dernière chose que vous voulez faire est de mettre à jour votre structure permalinks à commencer par "/blog/",ie,"/blog/%year% /%monthnum%/% postname%/". Maintenant vous avez un CMS Wordpress géré avec une unique page de couverture et un contenu logiquement structuré comme un blog. 

Si vous utilisez le quicktag <! more>  pour placer la suite du message en page suivante, vous inclurez la variable globale $more paramétré à zéro (comme indiqué dans le code ci-dessus).  Autrement, la totalité des messages du blog s'afficheront sur votre page principale. 

Comme il est noté ci-dessus, le fichier home.php n'est pas nécessaire dans les versions 2.1 +. Si les deux fichiers blog.php et home.php sont déployés en 2.1 + ils vont provoquer des conflits et le modèle de page blog.php apparaitra vierge.

=== Note sur la nomenclature ===
Une page peut être statique ou dynamique. Les Pages statiques sont celles qui ont été créées une fois et n'ont pas besoin d'être régénérée à chaque fois qu'une personne lui rend visite. En revanche, les pages dynamiques doivent être régénérés à chaque fois qu'elles sont consultées; pour générer ce qui a été spécifié par l'auteur, mais pas la page en elle-même. C'est l'utilisation extensive du code PHP qui évalue à chaque fois la page visitée, et le contenu est ainsi généré à la volée, à chaque nouvelle visite. 

Presque tout dans WordPress est généré dynamiquement, notamment les Pages. Tout ce que vous et les autres personnes écrivez dans WordPress (Postes, Pages, Commentaires, Blogrolls, Catégories,…) sont stockés dans votre base de données [[Glossary#MySQL|MySQL]]. Lorsque votre site est consulté, la base de données d'informations est ensuite utilisé par votre [[Theme Development#Theme Templates|Templates]] WordPress à partir de votre [[Using Themes|Theme]]et la page Web demandée est générée. Ainsi, l'information WordPress est dynamique, notamment sur les informations contenues dans vos "Pages". 

Un exemple d'une page statique peut être un document [[Glossary#HTML|HTML]](sans aucun code  [[Glossary#PHP|PHP]]), vous avez écrit comme un complément à vos pages générées dynamiquement dans WordPress, peut-être une page « About me ». Le problème avec les pages purement statique, c'est qu'elles sont difficiles à maintenir. Les modifications que vous apportez à vos paramètres de WordPress, [[Using Themes|Themes]] and [[Theme Development#Theme Templates|Templates]] ne seront pas propagées vers les pages codées en HTML uniquement. La fonction "Page" de WordPress a été mis au point, en partie, pour remédier à ce problème. En utilisant les Pages, les utilisateurs n'ont plus besoin de mettre à jour leurs pages statiques chaque fois qu'ils changer le style de leur site. En revanche, si l'écriture est correcte, leurs pages dynamiques vont se mettre à jour avec le reste de votre blog. 

En dépit de la nature dynamique des ''Page'', beaucoup de gens s'y réfèrent comme étant statique. Dans le contexte de la publication sur le Web, statiques et dynamiques, impliquent ce qui a été décrit ci-dessus. Plus généralement, cependant, statique peut signifier "caractérisé par l'absence de changement". Il est facile de voir comment cette définition du mot influence l'utilisation en décrivant les types de pages Web. Il est aussi facile de comprendre pourquoi les gens pensent des pages comme étant statique; messages vont et viennent, mais les pages sont là pour rester car les pages sont généralement utilisées pour afficher des informations constantes sur votre site (par exemple des informations sur vous, la description de votre Site, etc.) .

En d'autres termes, une Page contient des informations statiques, mais est généré dynamiquement. Ainsi, que ce soit "statique" ou "dynamique" peut être valablement utilisée pour décrire la nature de la fonction Page de WordPress. Toutefois, afin d'éviter toute confusion, et parce que les pages elles-mêmes sont dynamiques alors que ce n'est que leur contenu qui est en quelque sorte statiques, ce document ne fait pas référence aux Pages comme étant statique. 

[[Category:Getting Started]]
[[Category:Design and Layout]]
[[Category:Templates]]