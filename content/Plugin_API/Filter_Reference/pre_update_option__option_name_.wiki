==Description==
This filter is applied the option value before being saved to the database to allow overriding the value to be stored. To use this filter, you will need to add filters for specific options names, such as "pre_update_option_foo" to filter the option "foo".

== Parameters ==
{{Parameter|$new_value|mixed|The new value.|required}}
{{Parameter|$old_value|mixed|The old value.|required}}

==Examples==
<pre>
function myplugin_update_field_foo( $new_value, $old_value ) {
	$new_value = intval( $new_value );
	$new_value ++;
	return $new_value;
}

function myplugin_init() {
	add_filter( 'pre_update_option_foo', 'myplugin_update_field_foo', 10, 2 );
}

add_action( 'init', 'myplugin_init' );
</pre>

== Source File ==
The <tt>pre_update_option_(option_name)</tt> hook is located in {{Trac|wp-includes/option.php|tags/3.7.1|228}}, line 228

==Related==
===Action Hooks===
* [[Plugin_API/Action_Reference/update_option|update_option]]
* [[Plugin_API/Action_Reference/updated_option|updated_option]]
* [[Plugin_API/Action_Reference/update_option_(option_name)|update_option_(option_name)]]
===Filter Hooks===
* [[Plugin_API/Filter_Reference/option_(option name)|option_(option name)]]
* [[Plugin_API/Filter_Reference/pre_option_(option name)|pre_option_(option name)]]

== See Also ==
[[Plugin_API/Filter_Reference]]

[[Category:Filters]]