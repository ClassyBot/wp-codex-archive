{{Stub}}
==Description ==
This [[Plugin API/Action Reference|action hook]] runs immediately after the global [[Class Reference/WP|WP class object]] is set up. The $wp object is passed to the hooked function as a reference (no return is necessary).

This hook is one effective place to perform any high-level filtering or validation, following queries, but before WordPress does any routing, processing, or handling. It is run in the [https://core.trac.wordpress.org/browser/tags/4.2.2/src/wp-includes/class-wp.php#L622 main()] WP method in which the $query_args are passed to [https://developer.wordpress.org/reference/classes/wp/parse_request/ parse_request()], as well as when [https://developer.wordpress.org/reference/classes/wp/send_headers/ send_headers()] , [https://developer.wordpress.org/reference/classes/wp/query_posts/ query_posts()], [https://developer.wordpress.org/reference/classes/wp/handle_404/ handle_404()], and [https://developer.wordpress.org/reference/classes/wp/register_globals/ register_globals()] are setup. 

==Examples==
This action will allow us to set a cookie in the headers but still have access to the WP class object. This example will show you how to set a cookie if you are on a specific page ID. 
<pre>
function set_cookie() {
// using is_page conditional for specific page ID
  if(is_page(126)){
    setcookie ("my-custom-cookie", "true", time()+60*60*24*365*5, COOKIEPATH, COOKIE_DOMAIN, false); 
  }
}

add_action( 'wp', 'set_cookie' );
</pre>

==Source File==
The 'wp' hook is found in {{Trac|/wp-includes/class-wp.php}}, within the main() method of the [[Class Reference/WP|WP()]] class.

[[Category:Actions]]