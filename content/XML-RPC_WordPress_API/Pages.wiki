== wp.getPage ==

Retrieve a page.

Added in WordPress 2.2.

=== Parameters ===

* int <tt>blog_id</tt>
* int <tt>page_id</tt>
* string <tt>username</tt>
* string <tt>password</tt>

=== Return Values ===

* struct
** int <tt>page_id</tt>
** string <tt>title</tt>
** datetime <tt>dateCreated</tt>
** datetime <tt>date_created_gmt</tt>
** string <tt>page_status</tt>
** string <tt>wp_slug</tt>
** int <tt>userid</tt>
** string <tt>wp_author_id</tt>
** string <tt>wp_author</tt>
** string <tt>wp_author_display_name</tt>
** string <tt>wp_password</tt>
** string <tt>excerpt</tt>
** string <tt>description</tt>
** string <tt>text_more</tt>
** string <tt>permaLink</tt>
** int <tt>mt_allow_comments</tt>
** int <tt>mt_allow_pings</tt>
** int <tt>wp_page_parent_id</tt>
** string <tt>wp_page_parent</tt>
** int <tt>wp_page_order</tt>
** string <tt>wp_page_template</tt>
** array <tt>categories</tt>: Names of categories assigned to the page.
** array <tt>custom_fields</tt>
*** struct
**** string <tt>id</tt>
**** string <tt>key</tt>
**** string <tt>value</tt>

=== Errors ===

* 401
** If the user does not have the <tt>[[Roles_and_Capabilities#edit_pages|edit_pages]]</tt> cap.
* 404
** If no page with that <tt>page_id</tt> exists.

== wp.getPages ==

Retrieve list of pages with full details.

Added in WordPress 2.2.

=== Parameters ===

* int <tt>blog_id</tt>
* string <tt>username</tt>
* string <tt>password</tt>
* int <tt>max_pages</tt>: Optional, default=10.

=== Return Values ===

* array
** struct: See [[#wp.getPage]].

=== Errors ===

* 401
** If the user does not have the <tt>[[Roles_and_Capabilities#edit_pages|edit_pages]]</tt> cap.

== wp.getPageList ==

Retrieve full list of pages with minimum details.

Added in WordPress 2.2.

=== Parameters ===

* int <tt>blog_id</tt>
* string <tt>username</tt>
* string <tt>password</tt>

=== Return Values ===

* array
** struct
*** int <tt>page_id</tt>
*** string <tt>page_title</tt>
*** int <tt>page_parent_id</tt>
*** datetime <tt>dateCreated</tt>
*** datetime <tt>date_created_gmt</tt>

=== Errors ===

* 401
** If the user does not have the <tt>[[Roles_and_Capabilities#edit_pages|edit_pages]]</tt> cap.

== wp.newPage ==

Create a new page.

Added in WordPress 2.2.

=== Parameters ===

* int <tt>blog_id</tt>
* string <tt>username</tt>
* string <tt>password</tt>
** string <tt>title</tt>
** string <tt>description</tt>: Page content.
** datetime <tt>dateCreated</tt>
** datetime <tt>date_created_gmt</tt>: If specified, takes precedence over <tt>dateCreated</tt>.
** array <tt>categories</tt>: Names of categories assigned to the page.
** array <tt>mt_keywords</tt>: Names of tags assigned to the page.
** string <tt>mt_excerpt</tt>
** string <tt>mt_text_more</tt>: Post "Read more" text.
** string <tt>mt_allow_comments</tt>: "open" or "closed"
** string <tt>mt_allow_pings</tt>: "open" or "closed"
** string <tt>wp_slug</tt>
** string <tt>wp_password</tt>
** string <tt>wp_author_id</tt>
** string <tt>wp_author_display_name</tt>
** string <tt>[[Post_Status_Transitions|page_status]]</tt>
** int <tt>wp_page_parent_id</tt>
** string <tt>wp_page_parent</tt>
** int <tt>wp_page_order</tt>
** string <tt>wp_page_template</tt>
** array <tt>custom_fields</tt> (Added in WordPress 2.3.2)
*** struct
**** string <tt>id</tt>: Optional.
**** string <tt>key</tt>
**** string <tt>value</tt>
** struct <tt>enclosure</tt>: Only set if page has an enclosure. (Added in WordPress 2.6.3)
*** string <tt>url</tt>
*** int <tt>length</tt>
*** string <tt>type</tt>
* bool <tt>publish</tt>: Whether to publish the page upon creation or leave it as a draft.

=== Return Values ===

* int <tt>page_id</tt>

=== Errors ===

* 401
** If the user does not have the <tt>[[Roles_and_Capabilities#edit_pages|edit_pages]]</tt> cap.

== wp.editPage==

Edit an existing page.

Added in WordPress 2.2.

=== Parameters ===

* int <tt>blog_id</tt>
* int <tt>page_id</tt>
* string <tt>username</tt>
* string <tt>password</tt>
* struct <tt>content</tt>: See [[#wp.newPage]].
* bool <tt>publish</tt>

=== Return Values ===

* bool <tt>true</tt>

=== Errors ===

* 401
** If the user does not have permission to edit the page.
* 404
** If no page with that <tt>page_id</tt> exists.

== wp.deletePage==

Delete an existing page.

Added in WordPress 2.2.

=== Parameters ===

* int <tt>blog_id</tt>
* string <tt>username</tt>
* string <tt>password</tt>
* int <tt>page_id</tt>

=== Return Values ===

* bool <tt>true</tt>

=== Errors ===

* 401
** If the user does not have permission to delete the page.
* 404
** If no page with that <tt>page_id</tt> exists.

== wp.getPageStatusList ==

Retrieve list of supported values for <tt>post_status</tt> field on posts.

Added in WordPress 2.5.

=== Parameters ===

* int <tt>blog_id</tt>
* string <tt>username</tt>
* string <tt>password</tt>

=== Return Values ===

* struct: keys are the statuses, values are the display name for the status.

Example response data:
<pre>
array(
  'draft'   => 'Draft',
  'private' => 'Private',
  'publish' => 'Published'
);
</pre>

=== Errors ===

* 403
** If the user does not have the <tt>[[Roles_and_Capabilities#edit_pages|edit_pages]]</tt> cap.

== wp.getPageTemplates ==

Retrieve page templates for the active theme.

Added in WordPress 2.6.

=== Parameters ===

* int <tt>blog_id</tt>
* string <tt>username</tt>
* string <tt>password</tt>

=== Return Values ===

* struct: keys are the display name, values are the template filename. See [[Function_Reference/get_page_templates|get_page_templates]].

=== Errors ===

* 403
** If the user does not have the <tt>[[Roles_and_Capabilities#edit_pages|edit_pages]]</tt> cap.

[[Category:Advanced Topics]]
[[Category:WordPress Development]]
[[Category:Feeds]]