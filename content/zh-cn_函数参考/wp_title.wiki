== 简介 ==

显示或返回页面的标题。自[[Version 2.5]]开始支持，默认返回一个字符串，that separator can be designated to print before or after the title of the page.

This tag can be used anywhere within a template as long as it's outside [[The Loop]] on the main page, though is typically used in the <tt>&lt;title&gt;</tt> element for the head of a page.

The title text depends on the query:

; Single post or a [[Pages|Page]]: the title of the post (or Page)
; Date-based archive : the date (e.g., "2006", "2006 - January")
; Category : the name of the category
; Author page : the public name of the user

== Usage ==

%%% <?php wp_title( $sep, $echo, $seplocation ); ?> %%%

== Parameters ==

{{Parameter|$sep|string|Text to display before or after of the post title (i.e. the separator).  By default (if sep is blank) then the &amp;raquo; (&raquo;) symbol will be placed before or after (specified by the '''seplocation''') the post title.|optional|&amp;raquo; (&raquo;)}}

{{Parameter|$echo|boolean|Echo the title (True) or return the title for use as a PHP string (False).|optional|True}}
:*<tt>1</tt> (True) - default 
:*<tt>0</tt> (False)

{{Parameter|$seplocation|string|Introduced with Version 2.5, this parameter defines the location of where the '''sep''' string prints in relation to the title of the post.  For all values except 'right', the '''sep''' value is placed in front of (to the left of) the post title.  If the value of seplocation is 'right' then the '''sep''' string will be appended after the post title.|optional}}

== Examples ==

=== Default Usage ===

Displays the blog name (using [[Template Tags/bloginfo|<tt>bloginfo()</tt>]]) and the post title using defaults when accessing a single post page.  If the blog name is "My WordPress Blog", and the title of the post is "Hello world!", then the example below will show the title as '''My WordPress Blog  &raquo; Hello world!
<pre> <title><?php bloginfo('name'); ?> <?php wp_title(); ?></title></pre>

=== Turning Off &raquo; ===

If you don't want it to automatically display the &raquo; before the page title, just call the function as below:

<pre> <title><?php bloginfo('name'); ?> <?php wp_title("",true); ?></title></pre>

=== Covering Homepage ===

If you are using a custom homepage with custom loops and stuff, you will have an empty wp_title. Here goes a neat hack to add the description/tegline at the wp_title place on homepage:

<pre><title><?php bloginfo('name'); ?> | <?php is_home() ? bloginfo('description') : wp_title(''); ?></title></pre>

=== Using Separator ===

Displays blog name (using [[Template Tags/bloginfo|<tt>bloginfo()</tt>]]) along with post title in the document's title tag, using (pipe) "|" as the separator. This results in (when on a single post page) '''My WordPress Site | Hello world!'''.

<pre> <title><?php bloginfo('name'); ?><?php wp_title('|'); ?></title></pre>

This example would do the same thing:
<pre> <title><?php bloginfo('name'); ?><?php wp_title('|',true,''); ?></title></pre>

=== Additional Separators ===
Most common are so called pipes ('|') however there are few other that could be used.

'''Hyphens'''
<pre> <title><?php bloginfo('name'); ?><?php wp_title('-'); ?></title></pre>

'''Commas'''
<pre> <title><?php bloginfo('name'); ?><?php wp_title(','); ?></title></pre>

'''Spaces''' 
<pre> <title><?php bloginfo('name'); ?><?php wp_title(' '); ?></title></pre>

=== Not Recommended Separators ===
When using meta titles site owners need to send a clear message to their users as well as Search Engines. Here are two examples of what websites should avoid.

'''Double Hyphens'''
<pre> <title><?php bloginfo('name'); ?><?php wp_title('--'); ?></title></pre>

'''Underscores''' 
<pre> <title><?php bloginfo('name'); ?><?php wp_title('_'); ?></title></pre>

Underscores will confuse both users and search engines because the title becomes one word instead of several separated words.

Example when using underscores:

'''My_WordPress_Site''' instead of '''My WordPress Site'''.

=== Separator with Blog Name and Title Reversed ===

'''For Wordpress 2.5 and newer'''
<pre><title>
 <?php wp_title('|',true,'right'); ?>
 <?php bloginfo('name'); ?>
 </title></pre>

'''For previous versions'''

This lets you reverse page title and blog name in the title tag from example above ('''Hello world!--My WordPress Blog''') by removing the separator (using <tt>wp_title(' ')</tt>, then tests if there is a post title (using <tt>if(wp_title(' ', false))</tt>), and displays the separator between it and <tt>bloginfo()</tt> if it does.

<pre><title>
 <?php wp_title(' '); ?>
 <?php if(wp_title(' ', false)) { echo '|'; } ?> 
 <?php bloginfo('name'); ?>
 </title></pre>

== Related ==

{{Tag Footer}}

[[Category:Template Tags]]