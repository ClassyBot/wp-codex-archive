{{Languages|
{{en|Integrating WordPress with Your Website}}
{{ru|Интеграция WordPress с Вашим сайтом }}
}}



== Введение == 

По своей природе, WordPress является очень мощным. Он может быть столь как сложным так и простым, по вашему желанию. Поэтому, сколько вы хотите использовать WordPress в существующем веб-сайте, полностью зависит от вас. Там может быть только несколько особенностей WordPress, которые вы захотите использовать при интеграции его с вашим сайтом, или вы можете изменить весь сайт под WordPress. Это руководство поможет вам сделать ваш новый WordPress-сайт так, чтобы он выглядел как дизайн вашего существующего сайта. Мы начнем с того, как сделать блог WordPress в стиле остальной части вашего сайта. Далее мы можем перейти к созданию всего сайта, который работает на WordPress. 

Эти направления не будут работать на [[Создание сети | режим MultiSite]].
[[Category:Russian Codex]]

= Начнём преобразование =

Во-первых, предположим, у вас уже есть сайт на  http://myexample.com  Затем создадим новый подкаталог (папку) на вашем сайте и назовём его 'blog' (вы можете использовать другое имя, нежели blog, но вы должны создать этот подкаталог). Так, теперь у вас есть пустой подкаталог в  http://myexample.com/blog/. Теперь скачаем WordPress и загрузим все файлы в эту новую папку, и затем -  [[Установка_WordPress]].
== Изменим заголовок ==
Для того чтобы трансформировать обычные страницы PHP в те, которые используют WordPress, вам нужно добавить один из следующих фрагментов кода в начало каждой страницы.
<pre>
<?php 
/* Short and sweet */
define('WP_USE_THEMES', false);
require('./wp-blog-header.php');
?>
</pre>

<pre>
<?php
require('/the/path/to/your/wp-blog-header.php');
?>
</pre>

== Цикл WordPress ==
Необходимо включить [[Цикл WordPress]] чтобы эффективно использовать множество доступных[[Тэгов Шаблонов]][[http://codex.wordpress.org/Template_Tags]] или [[Плагинов | плагины]][[http://codex.wordpress.org/Plugins]] . Ознакомьтесь с тем,что такое [[Цикл WordPress]] и основам [[Цикл  в действии]][[http://codex.wordpress.org/The_Loop_in_Action]], чтобы начать с интеграции силы WordPress со своим сайтом.

== Примеры ==
=== Создание списка ===

В случае, если вы хотите  показать десять сообщений в алфавитном порядке, в порядке возрастания на веб-странице, для захвата  даты, названия и выдержки из поста вы можете сделать следующее:
<pre>
<?php
require('/the/path/to/your/wp-blog-header.php');
?>

<?php
$posts = get_posts('numberposts=10&order=ASC&orderby=post_title');
foreach ($posts as $post) : setup_postdata( $post ); ?>
<?php the_date(); echo "<br />"; ?>
<?php the_title(); ?>    
<?php the_excerpt(); ?> 
<?php
endforeach;
?>
</pre>
[править]

=== Последние три поста===

Выводим последние три поста на веб-странице.
<pre>
// Get the last 3 posts.

<?php
global $post;
$args = array( 'posts_per_page' => 3 );
$myposts = get_posts( $args );
foreach( $myposts as $post ) :	setup_postdata($post); ?>
<a href="<?php the_permalink() ?>" rel="bookmark" title="Permanent Link to <?php the_title_attribute(); ?>"><?php the_title(); ?></a><br />
<?php endforeach; ?>
</pre>

== Создание темы ==
В первой части этого учебника описано, как взять компоненты WordPress и интегрировать их в существующий сайт. Вы можете остановиться прямо сейчас, но, возможно, вы хотели бы создать тему WordPress, которая в конечном итоге заменит веб-страницы на вашем сайте.

Вам нужно будет создать собственную тему. Тема для WordPress - это набор файлов, которые вместе позволяют создать оформление графического интерфейса и содержимого сайта. [[Использование тем]]. Перейдите в папку шаблонов вашего WordPress  (расположенной по адресу  / wp-content/themes ) и создайте новую папку, назовите её "mytheme". Сюда вы будете добавлять файлы по контролю оформления вашего сайта. О том, как создавать темы, вы можете ознакомиться в статье [[Создание тем]] . Основные  файлы темы -  это index.php ,  style.css ,  single.php , и  comments.php .

Малоизвестный, но очень полезный HTML элемент <base></nowiki></tt> может вам очень помочь. Он инструктирует браузер, как использовать указанный URL для относительных путей:

<pre>
 <base href="http://myexample.com" />
</pre>

Как правило, тэг  <base>  содержит ваш текущий URL. Например, по умолчанию  <base>  в вашем блоге будет  http://myexample.com/blog/ . Изменяя его с тэгом <base>, вы указываете браузеру как основную паку http://myexample.com/ (поиск файлов начнётся с неё)  . Почему это полезно? При копировании и вставке HTML с вашего текущего сайта, вы будете иметь ссылки что-то вроде:

<pre>
 <base href="http://myexample.com" />
</pre>

При копировании этого тэга HTML в вашу тему, браузер будет искать  http://myexample.com/blogs/me.jpg , когда файл на самом деле существует в  http://myexample.com/me.jpg . Используя  <base href="http://myexample.com" /> , вы указываете браузеру  правильное место, чтобы найти файлы, и  не должны редактировать каждую ссылку на каждый файл, который был скопирован с вашего основного сайта.
[edit]

== Производительность ==

Хотя WordPress быстр, он содержит значительное количество кода, который должен быть загружен каждый раз при отображении страницы. Это может или не может повлиять на производительность в зависимости от среды размещения, но на общей среде hoasting использованием SuPhp (и, следовательно, без кэширования "op-code") он может добавить несколько секунд каждой загрузке страницы.
[edit]
== Ссылки ==
*[http://www.transycan.net/blogtest/2005/07/05/integrate/ Integrating WP in an existing site]
*[http://lists.automattic.com/pipermail/wp-hackers/2009-November/028297.html wp-hackers email list discussion on "deprecating" direct calls to wp-config.php]
*[http://cooltrainer.org/2010/06/20/fixing-false-404-headers-on-external-pages-including-wp-blog-header-php/ Fixing false 404 headers on external pages including wp-blog-header.php]

[[Category:Russian Codex]]