{{es:Stub}}
{{es:Nota| no eliminar los enlaces originales en inglés hasta que existan en castellano [[User:Diego WP|Diego AG]] 11:28, 26 December 2013 (UTC)}}
{{Languages|
{{en|Template_Tags/get_posts}}
{{es|Etiquetas_de_plantilla/get_posts}}
{{ja|テンプレートタグ/get_posts}}
{{zh-cn|模版标签/get_posts}} 
}}
== Descripción ==

El uso más apropiado para <tt>get_posts</tt> es crear un array de envíos basados en un conjunto de parámetros. Los recupera en una lista de los envíos más recientes o aquellos que cumplan estos criterios. <tt>get_posts</tt> puede usarse también para crear múltiples bucles, aunque se prefiere usar una referencia más directa a <tt>new WP_Query</tt> de <tt>[[Class_Reference/WP_Query|WP_Query]] [[es:Referencia_de_clases/WP_Query|WP_Query]]</tt> en este caso.

Los parámetros de <tt>get_posts</tt> son similares a aquellos de <tt>[[Function_Reference/get_pages|get_pages]] [[es:Referencia_de_funciones/get_pages|get_pages]]</tt> pero implementados bastante diferentemente, y deberían ser usados en los escenarios adecuados. <tt>get_posts</tt> usa <tt>[[Class_Reference/WP_Query|WP_Query]] [[es:Referencia de clases/WP_Query|WP_Query]]</tt>, mientras que <tt>get_pages</tt> consulta la base de datos mas directamente. Cada cual tiene parámetros que reflejan esta diferencia de su implementación.

<tt>[[Function_Reference/query_posts|query_posts]] [[Referencia_de_funciones/query_posts|query_posts]]</tt> también usa <tt>[[Class_Reference/WP_Query|WP_Query]] [[es:Referencia_de_clases/WP_Query|WP_Query]]</tt>, pero no se recomienda porque altera directamente el bucle principal al cambiar las variables de la variable global <tt>$wp_query</tt>. <tt>get_posts</tt>, por otro lado, simplemente referencia a un nuevo objeto <tt>WP_Query</tt>, y por lo tanto no afecta ni altera el bucle principal. 

Si quisieras cambiar la consulta principal antes de que se ejecute, puedes invocarla usando <tt>[[Plugin_API/Action_Reference/pre_get_posts|pre_get_posts]] [[es:Plugin_API/Action_Reference/pre_get_posts|pre_get_posts]]</tt>. Si sólamente quisieras llamar un array de envíos basados en un pequeño y simple conjunto de parámetros dentro de una página, entonces <tt>get_posts</tt> es tu mejor opción.

== Uso ==

%%% <?php $array_envíos = get_posts( $args ); ?> %%%

===Uso por defecto===

<pre>
<?php $args = array(
	'posts_per_page'   => 5,
	'offset'           => 0,
	'category'         => '',
	'orderby'          => 'post_date',
	'order'            => 'DESC',
	'include'          => '',
	'exclude'          => '',
	'meta_key'         => '',
	'meta_value'       => '',
	'post_type'        => 'post',
	'post_mime_type'   => '',
	'post_parent'      => '',
	'post_status'      => 'publish',
	'suppress_filters' => true ); ?>
</pre>
{{es:Nota| <tt>'numberposts'</tt> (número de envios) y <tt>'posts_per_page'</tt> (envíos por página) se pueden usar indistintamente.}}

== Parámetros ==
Para una lista completa de parámetros mira [[Class_Reference/WP_Query|<tt>WP_Query</tt>]] [[es:Referencia_de_clases/WP_Query|<tt>WP_Query</tt>]].

Mira también [[Function_Reference/get_pages|<tt>get_pages()</tt>]] [[es:Referencia_de_funciones/get_pages|<tt>get_pages()</tt>]] para ejemplos del uso de parámetros.

<tt>get_posts()</tt> hace uso de la clase [[Class_Reference/WP_Query|<tt>WP_Query</tt>]] [[es:Referencia_de_clases/WP_Query|<tt>WP_Query</tt>]] para recuperar los envíos. Mira [[Class_Reference/WP_Query#Parameters|the parameters section]] [[es:Referencia_de_clases/WP_Query#Parameters| la sección de parámetros]] de la documentación de <tt>WP_Query</tt> para la lista de parámetros que acepta esta función.

{{es:Nota| get_posts usa suprimir filtros <tt>'suppress_filters' &rArr; true</tt> por defecto, mientras que <tt>[[Function Reference/query_posts|query_posts()]]  [[es:Referencia_de_funciones/query_posts|query_posts()]]</tt> aplica filtros por defecto, esto puede ser confuso cuando se usan plugins que modifican las consultas (queries), como WPML. Nota también que incluso si <tt>'suppress_filters'</tt> es ''cierto'', aún se aplican cualesquier filtros adjuntados a <tt>pre_get_posts</tt> - sólo se suprimen los filtros ajuntados a  <tt>'posts_*'</tt> o <tt>'comment_feed_*'</tt>. }}

{{es:Nota| El parámetro 'category' (categoría) necesita ser el ID de la categoría, y no su nombre.}}

{{es:Nota| El parámetro 'category' (categoría) puede ser una lista separada por comas de categorías, pues  la función <tt>[http://core.trac.wordpress.org/browser/tags/3.3.1/wp-includes/post.php#L1369 get_posts()]</tt> pasa el parámetro 'category' (categoría) directamente a <tt>WP_Query</tt> como <tt>'cat'</tt>.}}

{{Parameter|'orderby'|string|Ordena los envíos recuperados por el parámetro.|optional|'date'}}

:* <tt>'none'</tt> - No ordena (disponible desde la Versión 2.8).
:* <tt>'ID'</tt> - Ordena por id de envío. Nota las mayúsculas.
:* <tt>'author'</tt> - Ordena por autor.
:* <tt>'title'</tt> - Ordena por titulo.
:* <tt>'date'</tt> - Ordena por fecha.
:* <tt>'modified'</tt> - Ordena por fecha de última modificación.
:* <tt>'parent'</tt> - Ordena por id de envío/página padre.
;* <tt>'rand'</tt> - Orden aleatorio.
:* <tt>'comment_count'</tt> - Ordena por número de comentarios (disponible desde la Versión 2.9).
:* <tt>'menu_order'</tt> - Ordena por Orden de Página. Usado más frecuentemente por Páginas (Campo de ordenación en la caja de Atributos de editar página) y por Adjuntos (los campos de enteros del diálogo de insertar/ cargar galería de medios), pero podrían ser usados para cualquier envío con distintos valores de <tt>'menu_order' (orden de menú)</tt> (Todos son 0 por defecto).
:* <tt>'meta_value'</tt> - Nota que <tt>'meta_key=keyname'</tt> debe estar presente en la consulta. Nota también que la ordenación sera alfabética lo cual está bien para cadenas de texto, pero que puede ser inesperado para números (p.ej: 1, 3, 34, 4, 56, 6, etc, en vez de  1, 3, 4, 6, 34, 56 como hubieras naturalmente esperado ).
:* <tt>'meta_value_num'</tt> - Ordena por meta valor numérico (disponible desde la Versión 2.8). También nota que <tt>'meta_key=keyname'</tt> debe estar presente en la consulta. Este valor permite ordenación numérica como se menciona arriba en <tt>'meta_value'</tt>.
:{{es:Nota| [[Function_Reference/get_pages|<tt>get_pages()</tt>]] [[es:Referencia_de_funciones/get_pages|<tt>get_pages()</tt>]] usa el parámetro <tt>'sort_column' (ordenar columna)</tt> en vez de <tt>'orderby' (ordenar por)</tt>.  También, [[Function_Reference/get_pages|<tt>get_pages()</tt>]] [[es:Referencia_de_funciones/get_pages|<tt>get_pages()</tt>]] requiere que <tt>'post_'</tt> sea antepuesto a estos valores: <tt>'author (autor), date (fecha), modified (modificado), parent (padre), title (título), excerpt (extracto), content (contenido)'</tt>.}}

{{Parameter|'post_mime_type'|string o array|Lista de tipos mime o cadena de texto separada por comas de tipos mime.|Optional}}

== Valor de retorno ==

; (array) : Lista de objetos de envío. Mira los valores de retorno de <tt>[[Function_Reference/get_post#Return|get_post()]][[es:Referencia_de_funciones/get_post#Return|get_post()]]</tt>.

a diferencia de <tt>[[Function_Reference/get_pages|get_pages()]][[es:Referencia_de_funciones/get_pages|get_pages()]]</tt>, <tt>get_posts()</tt> retornará páginas ''privadas'' en el contexto adecuado (p. ej.,  para un administrador). (Mira: Andreas Kirsch, [http://blog.blackhc.net/2009/01/wordpress-hacking-ii/ WordPress Hacking II], 24 de Enero 2009-- accedido el 09-11-2012.)

== Ejemplos ==

=== Lista de envíos con desplazamiento ===

Si tienes tu sitio configurado para mostrar justo un envío en la página principal, pero también quieres listar enlaces a los 5 envíos previos en la categoría ID 1, puedes usar esto:

<pre>
<ul>
<?php


$args = array( 'posts_per_page' => 5, 'offset'=> 1, 'category' => 1 );

$mis_envios = get_posts( $args );
foreach ( $mis_envios as $envio ) : setup_postdata( $envio ); ?>
	<li>
		<a href="<?php the_permalink(); ?>"><?php the_title(); ?></a>
	</li>
<?php endforeach; 
wp_reset_postdata();?>

</ul>
</pre>

{{es:Nota | ''Con el uso del desplazamiento, la consulta superior debería ser solamente usada en una categoría que tenga más de un envío, de otro modo no habrá salida.''}}

=== Envíos con navegación al previo y siguiente ===

Puedes usar también las consultas personalizadas para hacer la navegación a envíos previo y posterior.
Aquí tienes el siguiente método para que funcione.

<pre><?php
$mis_envios = get_posts('sort_column=menu_order&amp;sort_order=asc');
$envios = array();
foreach ($mis_envios as $envío) {
   $envios[] += $envio->ID;
}

$actual = array_search(get_the_ID(), $envios);
$prevID = $envios[$actual-1];
$sigID = $envíos[$actual+1];
?>

<div class="navegacion">
<?php if (!empty($prevID)) { ?>
<div class="alineadoaIzq">
<a href="<?php echo get_permalink($prevID); ?>"
  title="<?php echo get_the_title($prevID); ?>">Previo</a>
</div>
<?php }
if (!empty($sigID)) { ?>
<div class="alineadoaDch">
<a href="<?php echo get_permalink($sigID); ?>" 
 title="<?php echo get_the_title($sigID); ?>">Siguiente</a>
</div>
<?php } ?>
</div><!-- .navegacion --></pre>

==== Resetear tras listas de envíos con desplazamiento ====

Si necesitas tras el bucle, el envío que tuviste antes de comenzar el ciclado foreach, puedes usar esto:

<pre>
<ul>
<?php
global $envio;
$args = array( 'posts_per_page' => 5, 'offset'=> 1, 'category' => 1 );
$mis_envios = get_posts( $args );
foreach ( $mis_envios as $envio ) : 
  setup_postdata( $envio ); ?>
	<li><a href="<?php the_permalink(); ?>"><?php the_title(); ?></a></li>
<?php endforeach;
wp_reset_postdata(); ?>
</ul>
</pre>

=== Acceder a todos los datos del envío ===

Algunos datos relacionados con el envío no están disponibles por defecto para get_posts, tales como el contenido del envío mediante <tt>[[Function Reference/the_content|the_content()]][[es:Referencia_de_funciones/the_content|the_content()]]</tt>,  o el ID numérico. Esto se resuelve llamando a una función interna llamada <tt>setup_postdata()</tt>, con el array de  $envío como su argumento:

<pre>
<?php
$args = array( 'posts_per_page' => 3 );
$mis_envíos = get_posts( $args );
foreach ( $mis_envíos as $envio ) :
  setup_postdata( $envio ); ?>
	<h2><a href="<?php the_permalink(); ?>"><?php the_title(); ?></a></h2>
	<?php the_content(); ?>
<?php endforeach; 
wp_reset_postdata(); ?>
</pre>

Para acceder al ID del envío o el contenido sin llamar a <tt>setup_postdata()</tt>, o  de echo a cualesquier datos específicos del envío (datos retenidos en [[Database_Description#Table:_wp_posts|the posts table]] [[es:Descripcion_de_base_de_datos#Tabla:_wp_posts|la tabla de envíos o posts]]), puedes usar <tt>$envio->''COLUMN''</tt>, donde <tt>''COLUMN''</tt> es la columna de la tabla para los datos. Así que <tt>$envio->ID</tt> contiene el ID, <tt>$envio->post_content</tt> el contenido, y demás. Para mostrar o imprmir estos datos en tu página usa  el comando echo de [[Glossary#PHP|PHP]], de este modo:

<pre>
<?php echo $envio->ID; ?>
</pre>

=== Últimos envíos ordenados por titulo ===

Para mostrar los últimos diez envíos ordenados alfabéticamente en orden ascendente, los siguiente mostrará sus fechas de publicación, título y extracto:

<pre>
<?php
$args = array( 'posts_per_page' => 10, 'order'=> 'ASC', 'orderby' => 'title' );
$mis_envios = get_posts( $args );
foreach ( $mis_envios as $envio ) :
  setup_postdata( $envio ); ?> 
	<div>
		<?php the_date(); ?>
		<br />
		<?php the_title(); ?>   
		<?php the_excerpt(); ?>
	</div>
<?php
endforeach; 
wp_reset_postdata();
?>
</pre>

=== Envíos aleatorios ===

Muestra una lista de 5 envíos seleccionados aleatoriamente usando la función <tt>RAND()</tt>  de [[Glossary#MySQL|MySQL]] para  le valor  del parámetro orderby (ordenar por):

<pre>
<ul>
<?php
$args = array( 'posts_per_page' => 5, 'orderby' => 'rand' );
$mis_envios = get_posts( $args );
foreach ( $mis_envios as $envio ) : 
  setup_postdata( $envio ); ?>
	<li><a href="<?php the_permalink(); ?>"><?php the_title(); ?></a></li>
<?php endforeach; 
wp_reset_postdata(); ?>
</ul>
</pre>

=== Mostrar todos los adjuntos ===

Realiza esto fuera de cualesquier [[The Loop|Loops]] [[es:El bucle|bucles]] de tu plantilla.

<pre>
<?php
$args = array( 'post_type' => 'attachment', 'posts_per_page' => -1, 'post_status' => 'any', 'post_parent' => null ); 
$mis_envios = get_posts( $args ); //envíos con adjunto
if ( $mis_envios ) {
	foreach ( $mis_envios as $envio ) {
		setup_postdata( $envio );
		the_title();
		the_attachment_link( $envio->ID, false );
		the_excerpt();
	}
	wp_reset_postdata();
}
?>
</pre>

=== Mostrar adjuntos para el envío actual ===

Haz esto dentro del [[The Loop]] [[es:El bucle]] (donde <var>$envio->ID</var> está disponible).

<pre>
<?php
$args = array( 'post_type' => 'attachment', 'posts_per_page' => -1, 'post_status' =>'any', 'post_parent' => $post->ID ); 
$mis_envíos = get_posts( $args ); //envíos con adjunto
if ( $mis_envíos ) {
	foreach ( $mis_envios as $adjunto ) {
		echo apply_filters( 'the_title' , $adjunto->post_title );
		the_attachment_link( $adjunto->ID , false );
	}
}
?>
</pre>

=== Obtener un envío por su slug ===

Te permite conseguir el ID de un envío por su Slug de envío. 

<pre>
<?php
$el_slug = 'my-slug';
$args=array(
	'name' => $el_slug,
	'post_type' => 'post',
	'post_status' => 'publish',
	'posts_per_page' => 1
);
$mis_envios = get_posts( $args );
if( $mis_envios ) {
	echo 'ID del primer envío encontrado ' . $mis_envios[0]->ID;
}
?>
</pre>

=== Parámetros de Taxonomía ===

Muestra los envíos asociados a cierta taxonomía. Cuando se especifique una taxonomía registrada a un tipo de envío personalizado entonces en vez de usar 'categoría' usa <tt>'{nombre_de_taxonomía_personalizada}'</tt>. Por ejemplo, si tuvieras una taxonomía personalizada llamada "genero" y quisieras mostrar sólamente los envíos de genero "jazz" usarías e código siguiente.

<pre>
<?php
$args = array(
	 'posts_per_page' => 8,
	 'orderby' => 'rand',
	 'post_type' => 'albums',
	 'genre' => 'jazz',
	 'post_status' => 'publish'
);
$mis_envios = get_posts( $args ); //para mostrar álbumes
?>
</pre>

El siguiente ejemplo enseña envíos etiquetados con 'jazz', bajo la taxonomía personalizada de 'genre', usando <tt>'tax_query'</tt>:

<pre>
$args = array(
	'tax_query' => array(
		array(
			'taxonomy' => 'genre',
			'field' => 'slug',
			'terms' => 'jazz'
		)
	)
);
$mis_envios = get_posts( $args ); //para mostrar los de jazz
</pre>

Consulta [[Class_Reference/WP_Query#Taxonomy_Parameters|the taxonomy parameters section]] [[es:Referencia_de_clases/WP_Query#Parámetros_de_taxonomía| la sección de parámetros de taxonomía]] de la documentación de <tt>WP_Query</tt> para más ejemplos.

=== Parámetros de campos personalizados ===

Muestra los envíos asociados con cierto campo personalizado. El siguiente ejemplo enseña envíos de tipo de envío 'producto' que tiene la meta clave 'caracterizado' con el valor 'si', usando <tt>'meta_query'</tt>:

<pre>
$args = array(
	'post_type' => 'producto',
	'meta_query' => array(
		array(
			'key' => 'caracterizado',
			'value' => 'si',
		)
	)
 );
$mis_envios = get_posts( $args );
</pre>

Consulta [[Class_Reference/WP_Query#Custom_Field_Parameters|the custom fields parameters section]] [[es:Referencia de clases/WP_Query#Parámetros_de_campo_personalizados|la sección de parámetros de campos personalizados]] de la documentación de <tt>WP_Query</tt> para más ejemplos.

==Log de cambios==

* Desde: [[Version 1.2|1.2.0]]

==Fichero fuente==

<tt>get_posts()</tt> se ubica en {{Trac|wp-includes/post.php}}.

== Relacionado ==

{{Template:es:Etiqueta_de_pié}}

[[Category:es:Etiquetas de plantilla]]