{{Languages|
{{en|Function Reference/add_post_meta}}
{{zh-hans|函数参考/add_post_meta}}
{{ru|Справочник_по_функциям/add_post_meta}}
{{es|Referencia de Funciones/add_post_meta}}
{{ja|関数リファレンス/add_post_meta}}
{{pt-br|Funções e Referências/add_post_meta}}
{{ko|함수 레퍼런스/add_post_meta}}
}}
==설명==

어떤 [[Post Types|post type]] 을 가지는 특정한 포스트에 이른바 ''메타 데이터'' 로 불리는 [[Custom Fields|custom field]] 를 추가시킵니다. 하나의 custom field 는 효율적이게 키와 값의 쌍으로 이루어집니다.


특정한 포스트의 커스텀 필드 사이에서 주어진 키가 이미 존재한다면, unique 값이 <tt>true</tt> 가 아니라면, 같은 키와함께 또다른 커스텀 필드가 추가된다는 것을 알아두세요. 이 경우에 변경은 불가능합니다. 이미 존재하는 키의 값을 변화시키기 원한다면 <tt>[[Function Reference/update_post_meta|update_post_meta()]]</tt> 함수를 대신 사용하세요.

==사용법==

%%% <?php add_post_meta($post_id, $meta_key, $meta_value, $unique); ?> %%%

==파라메터==

{{Parameter|$post_id|integer|추가되어져야만 하는 커스텀필드가 속한 포스트의 ID 입니다.}}
{{Parameter|$meta_key|string|추가되어져야만 하는 커스텀 필드의 키 값입니다.}}
{{Parameter|$meta_value|mixed|추가되어져야만 하는 커스텀필드의 값입니다. 만약 배열이 주어진다면, 이것은 string 형태로 변화시킬 것 입니다.}}
{{Parameter|$unique|boolean|키가 고유한 속성을 가질지 아닐지를 결정합니다. <tt>true</tt> 로 주어졌을 때, 특정한 포스트들 사이에 값이 이미 존재한다면, 메타값은 추가되어지지 않습니다.|optional|false}}

==Return==

{{Return||boolean&#124;integer|성공한다면, <tt>true</tt> 값으로 승인되어진 데이터베이스 내부에 삽입된 행을 반환시킵니다. 만약 <tt>$unique</tt> 가 <tt>true</tt> 로 설정되어지고 주어진 키가 이미 존재한다면, <tt>false</tt> 가 리턴됩니다.}}

==예제==

===기본 사용법===

 <?php add_post_meta( 68, 'my_key', 47 ); ?>

===고유한 커스텀 필드를 추가시키거나 업데이트===

키가 존재하지 않는다면 추가시킬 것이며, 대신에 그 키와함께 커스텀 필드의 값을 업데이트 시킬 것입니다.

<pre>
<?php
if ( ! add_post_meta( 7, 'fruit', 'banana', true ) ) { 
   update_post_meta ( 7, 'fruit', 'banana' );
}
</pre>

===또다른 예제===

단지 주어진 키와 함께 커스텀필드가 존재하지 않는다면, 새로운 커스텀필드를 추가시킵니다.:
 <?php add_post_meta( 68, 'my_key', '47', true ); ?>

같은 키이지만, 다수의 값을 가진 키를 추가시킵니다. <tt>'my_key'</tt>:
<pre>
<?php add_post_meta( 68, 'my_key', '47' ); ?>
<?php add_post_meta( 68, 'my_key', '682' ); ?>
<?php add_post_meta( 68, 'my_key', 'The quick, brown fox jumped over the lazy dog.' ); ?>
...</pre>
좀더 상세한 예제에 대해서는, [[Function Reference/post_meta Function Examples|post_meta Functions Examples]] 페이지를 참조하세요.

=== 히든 커스텀 필드 ===


만약 플러그인 혹은 테마 개발자라면 그리고 플러그인 혹은 템플릿에 관련된 파라메터를 추가시키기 위해서 커스텀필드를 사용하는 계획을 짜고 있다면, 
키가 <tt>"_"</tt> (underscore) 와 함께 시작하는 키를 가진 커스텀 필드 혹은 <tt>[[Function Reference/the_meta | the_meta()]]</tt> 템플릿 함수를 사용할 때에 [[Writing Posts | post edit]] 화면상의 커스텀 필드 리스트안에서 보여지지 않을 것이라는 사실은 당신에게 아주 흥미로울 수 있습니다. 이것은 <tt>[[Function Reference/add_meta_box | add_meta_box()]]</tt>를 사용함에 의해, 비정상적인 방법 안에서 이러한 커스텀 필드들을 보여주기위해서 사용하는 예제가 될 수 있습니다.


예제를 따라해보세요:
 <?php add_post_meta( 68, '_color', 'red', true ); ?>

유니크한 커스텀 필드가 키 <tt>'_color'</tt> 그리고 값  <tt>'red'</tt>와 함께 추가될 것입니다. 그러나 post edit 화면에서는 보여지지 않을꺼에요.
==== 히든 배열 ====

추가적으로, <tt>$meta_value</tt> 가 배열이라면, 키 이름으로 _를 사용하지 않았음에도 불구하고, 페이지 수정화면에서 보여지지 않을 것입니다.

== 노트 ==
* <tt>[[Function_Reference/add_metadata | add_metadata()]]</tt> 를 사용하세요.

=== Character Escaping ===


메타 값은 <tt>[http://php.net/stripslashes stripslashes()]</tt> 함수를 통해서 전달되기 때문에, <tt>\</tt> 문자들을 함께 사용함에 있어서 주의해야만합니다. <tt>[[Function_Reference/update_post_meta#Character_Escaping | update_post_meta()]]</tt> 문서를 통해서 좀더 많은 내용과 예제를 볼 수 있습니다..

== 소스 코드 ==

<tt>add_post_meta()</tt> 는 {{Trac|wp-includes/post.php}} 에 위치하고 있습니다.

== 변경 ==

Since [[Version 1.5|1.5.0]]

==관련==

{{Post Meta Tags}}

{{Tag Footer}}

[[Category:Functions]]
(해당 번역은 한국인 워드프레스 유저 Remoted 에 의해서 쓰여졌으며, 또다른 요청사항이 있을 경우 35mwlee@naver.com 혹은 http://35mwlee.blog.me/ 에 댓글을 남겨주세요.)