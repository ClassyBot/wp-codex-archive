{{Languages|
{{en|Post to your blog using email}}
{{ja|Post to your blog using email}}
}}

__TOC__
WordPress can be configured to use e-mail to post to a blog through the use of plugins. 

==Using Plugins==

* [http://wordpress.org/plugins/post-by-email Post By Email Plugin]
* [http://jetpack.me/support/post-by-email/ Post by Mail in Jetpack]
* [http://wordpress.org/extend/plugins/postie Postie Plugin]

== Configure WordPress Install ==

The built-in WordPress functionality is <strong>deprecated</strong> and will be removed in an upcoming release.  Please use one of the plugins listed above, instead.  For installation and configuration instructions, refer to the documentation for these plugins.

=== Customizing How WordPress Checks for New Mail ===

Most plugins should manage this for you!

Calling <tt><nowiki>wp-mail.php</nowiki></tt> directly will be deprecated in an upcoming WordPress release, so the old methods of adding code to your footer or manually visiting <tt><nowiki>wp-mail.php</nowiki></tt> are no longer recommended.

Instead, use some method to trigger the action <code>wp-mail.php</code>.  If you're using a plugin that doesn't allow you to customize this, you can try the suggestions below.

==== '''Action-based <code>functions.php</code> Activation''' ====

You can add an action to your active theme's <code>functions.php</code> file. This will check for mail every 15 minutes and does not add any HTML to your theme.

<pre>
add_action( 'shutdown', 'retrieve_post_via_mail' );
function retrieve_post_via_mail() {
	flush(); // Display the page before the mail fetching begins
	if ( get_transient( 'retrieve_post_via_mail' ) ) { 
		return; // The mail has been checked recently; don't check again
	} else { // The mail has not been checked in more than 15 minutes
		do_action( 'wp-mail.php' );
		set_transient( 'retrieve_post_via_mail', 1, 15 * MINUTE_IN_SECONDS ); // check again in 15 minutes.
	}
}
</pre>

This method is good for users who would like to avoid using cron jobs, which are configured on the server. Unlike cron jobs, this process will only run when pages on the blog are loaded. <em>Cron jobs run independent of site traffic.</em>

==== '''Cron Job Activation''' ====

Set up a UNIX cron job to have your blog periodically view <tt><nowiki>http://example.com/installdir/wp-mail.php</nowiki></tt> using a command-line HTTP agent like wget, curl or GET. The command to execute will look like:

<nowiki>wget -N http://example.com/installdir/wp-mail.php</nowiki>

If you use a different program than <tt>wget</tt>, substitute that program and its arguments for <tt>wget</tt> in this line.

'''Note:''' Another possibility is to run "php /full/path/to/wp-mail.php" in a cronjob. This will run the php-script using php, without the need for an extra program to run. (You are more likely authorized to run php than wget.)

For more information about setting up a cron job, see:
* [http://www.unixgeeks.org/security/newbie/unix/cron-1.html Intro To Cron Jobs]
* Your hosting provider's FAQ or manual pages

'''Note to Windows Users:''' There are similar programs to cron available if your host runs Windows. For example, [http://www.visualcron.com VisualCron], [http://cronw.sourceforge.net/ Cron for Windows] and [http://www.google.com/url?sa=U&start=2&q=http://sourceforge.net/projects/pycron/&e=1102&mr=8,2!619021,!a:sr4 pycron]. Consult these projects' documentation for further information.

==== '''Procmail Activation''' ====

If your server uses [http://www.procmail.org/ procmail], a simple <tt>.procmailrc</tt> in the blogmailaccounts home directory will be sufficient:
 Shell=/bin/sh
 MAILDIR=$HOME/.maildir/
 DEFAULT=$MAILDIR
 :0
 {
 :0Wc
 ./
 :0
 | wget -N http://example.com/installdir/wp-mail.php
 }
This could be more specific, such as capturing certain subject expressions.  Check [http://www.procmail.org/ procmail] for more information.

==== '''.qmail Activation''' ====

If your server uses qmail to process e-mail, you may be able to use it to call wp-mail.php whenever an e-mail message is delivered.  To do this, first create a small shell script to call wp-mail.php.  You could call the file <tt>wp-mail</tt>:

 #!/bin/sh
 /bin/sh -c "sleep 5; /path/to/php /path/to/your/blog/wp-mail.php > /dev/null" &

The <tt>sleep</tt> command causes a 5-second delay to allow qmail to finish processing the message before wp-mail.php is called.  Note that the ampersand on the end of the line is required.  The above script should go in your root directory, and the execute bit should be set (chmod 700).  For debugging purposes, you could change <tt>/dev/null</tt> to a filename to save the output generated by wp-mail.php.

Then all you need to do create/modify the appropriate .qmail file to call your shell script.  Add the following line to the .qmail file for your mailbox name:

 |/path/to/your/root/directory/wp-mail

See your ISP's documentation for use of .qmail files.  Naming conventions may vary for different ISPs.

<!-- removing, this really depends on the plugin
==Testing==

To test your configuration, simply send an e-mail to <tt>yournewaccount@yourmaildomain</tt> (or to <tt>user@yourmaildomain</tt> if you used the <tt>.qmail</tt> forwarding setup). Then do the following:

* If you are using WP-Cron, simply wait fifteen or twenty minutes.
* If you have a cron job running, wait until the next time it's scheduled to run (or temporarily edit the cron job to make it run sooner). If you run tail <tt>-f /var/log/cron</tt> in a terminal, you'll be able to see the job create its log entry when it's finished running. When that happens, just view the site in your web browser to see your email posted.
* Your email may be recorded with a post status of 'Pending Review' rather than 'Published'.  If the status is 'Pending Review', then the post will be visible in the Dashboard but will not be visible in the Blog.  By default, wp-mail.php will validate the sending email address against the email addresses for authorized users.  If the email address is found, the post status will be 'Published', otherwise the status will be 'Pending Review'.

-->

== References ==

[[Category:Getting Started]]