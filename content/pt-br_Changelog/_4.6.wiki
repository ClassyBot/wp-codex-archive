{{Languages|
{{en|Version 4.6}}
{{ja|Version 4.6}}
{{pt-br|Version 4.6}}
}}

For [[Version 4.6]], the database version ('''db_version''' in '''wp_options''') changed to xxxxx, and the [https://core.trac.wordpress.org Trac] revision was xxxxx.

* [http://core.trac.wordpress.org/query?status=closed&milestone=4.6 View Closed Tickets.]


==Installation/Upgrading Information==
To download WordPress 4.6, visit https://wordpress.org/download/release-archive/

==Highlights==
===The Finer Points===

;Shiny Updates v2: [https://make.wordpress.org/core/features/shiny-updates Shiny Updates] replaces progress updates with a simpler and more straight forward experience when installing, updating, and deleting plugins and themes. Those actions are now all performed via AJAX.
:One big user facing change is about search. There is now an AJAX search on both the Installed Plugins screen as well as the Add New Plugin screen, this means the search results change as you type, drastically simplifying your workflow. ([https://make.wordpress.org/core/2016/07/06/shiny-updates-in-4-6/ read more])

[[image:shiny_updates_v2_2.jpg|355px|Multiple Puglins Update]] [[image:shiny_updates_v2_1.jpg|355px|Puglin Deletes]]<br />Left: Multiple plugins update, Right: Plugin delete

;Native Font supports in the [[Administration Screens|Administration Screen]]: The operating system’s UI font is used for any text that’s part of the WordPress user interface. Although WordPress switched to Open Sans in [[Version 3.8]] at the end of 2013 by various reasons, today, the background condition and technology have changed. Then, experience faster load times, especially when working offline, a removal of a third-party dependency, and a more [https://make.wordpress.org/core/features/font-natively/ native-feeling experience] as the lines between the mobile web and native applications continue to blur. ([https://make.wordpress.org/core/2016/07/07/native-fonts-in-4-6/ read more])

[[Image:macOS-Safari-1024x576.png|355px|Browser: Safari, OS: macOS, Font: San Francisco|]] &nbsp; [[Image:Windows-Edge-1024x711.png|288px|Browser: Edge, OS: Windows 10, Font: Segoe UI |]] <br />Left: Browser: Safari, OS: macOS, Font: San Francisco / Right: Browser: Edge, OS: Windows 10, Font: Segoe UI

;Import Screen overhaul: The Import Screen was overhauled, improving accessibility and making it much easier to install and run an importer.

[[Image:import_screen.png|600px|Overhauled Import Screen]]<br />Overhauled Import Screen

;Internationalization improvements: The translation platform for plugins and themes was opened up in December 2015. Since then 15,000 plugins and themes were imported and are now benefiting from automated translation updates. Translations files are usually inside <tt>wp-content/languages</tt>, and WordPress now scans that directory for available translations and automatically loads them if it encounters a text domain for the first time. Also, jQuery UI datepicker was localized. ([https://make.wordpress.org/core/2016/07/06/i18n-improvements-in-4-6/ read more])

;Editor Improvements: A more reliable recovery mode and detection of broken URLs while you type them.

;Emoji: Emoji support has been updated to include all of the latest Unicode 9.0 emoji characters.

===For Developers===

;Resource Hints: Resource Hints is a rather new W3C specification that "defines the dns-prefetch, preconnect, prefetch, and prerender relationships of the HTML Link Element (&lt;link>)". Allow browsers to prefetch specific pages, render them in the background, perform DNS lookups, or to begin the connection handshake (DNS, TCP, TLS) in the background. ([https://make.wordpress.org/core/2016/07/06/resource-hints-in-4-6/ read more])

;HTTP API internal changes: The HTTP API ([https://developer.wordpress.org/reference/functions/wp_remote_request <tt>wp_remote_request()</tt>] and family) have undergone a large internal change. Rather than using a WordPress-specific HTTP library, WordPress now uses the open-source independent [http://requests.ryanmccue.info/ Requests library]. ([https://make.wordpress.org/core/2016/07/27/http-api-in-4-6/ read more])

;Language Packs: Translations managed through [https://translate.wordpress.org translate.wordpress.org] now have a higher priority and are loaded just-in-time.

;WP_Site_Query: New <tt>WP_Site_Query</tt> class to query sites with lazy loading for details.

;WP_Network_Query: New <tt>WP_Network_Query</tt> class to query networks with lazy loading for details.

;WP_Term_Query: New <tt>WP_Term_Query</tt> is modeled on existing query classes and provides a more consistent structure for generating term queries. ([https://make.wordpress.org/core/2016/07/06/wp_term_query-in-wordpress-4-6/ read more])

;WP_Post_Type: New <tt>WP_Post_Type</tt> class provides methods to handle post type supports, rewrite rules, meta boxes, hooks, and taxonomies. This changes the global $wp_post_types to an array of WP_Post_Type objects. ([https://make.wordpress.org/core/2016/07/13/wp_post_type-in-4-6/ read more])

;Widgets API: The Widgets API was enhanced to support registering pre-instantiated widgets. ([https://make.wordpress.org/core/2016/07/06/pre-instantiated-widget-registration-in-4-6/ read more])

;dbDelta updates: [https://developer.wordpress.org/reference/functions/dbDelta/ dbDelta()] is a function which helps to modify the database based on specified SQL statements. This function has been updated to resolve some long standing bugs ([https://make.wordpress.org/core/2016/07/13/dbdelta-updates-in-4-6/ read more])
:* Normalized index definitions
:* Backtick all the things
:* Support for SPATIAL keys

;Persistent Comment Cache: Since [[Version 2.6]], the comments API has purposefully not used a persistent cache. Over the past 20 releases, changes have been made to purge the problems from the comments API that caused this. Comments can now be stored in a persistent object cache. When comments are added, modified, or deleted, out of date cache values are properly invalidated. ([https://make.wordpress.org/core/2016/07/18/comments-in-4-6-can-now-be-cached-by-a-persistent-object-cache/ read more])

;External Libraries: External Libraries were updated to the latest versions – Masonry to 3.3.2 and imagesLoaded to 3.2.0, MediaElement.js to 2.22.0, TinyMCE to 4.4.1 and Backbone.js to 1.3.3. ([https://make.wordpress.org/core/2016/07/18/external-library-updates-in-4-6/ read more])

;REST API: REST API responses now include an auto-discovery header and a refreshed nonce when responding to an authenticated response.

;Enhancing <tt>register_meta()</tt>: The [https://developer.wordpress.org/reference/functions/register_meta <tt>register_meta()</tt>] function is getting some updates to enable greater flexibility and features in the future (such as inclusion in the Rest API). It expands to support the registration of meta keys and what to expect from those keys. Its behavior is similar to [https://developer.wordpress.org/reference/functions/register_post_type <tt>register_post_type()</tt>] in that the registration of this data is stored in the global scope. This makes an object’s meta data more accessible to parts of core and extending code.([https://make.wordpress.org/core/2016/07/20/additional-register_meta-changes-in-4-6/ read more] and [https://make.wordpress.org/core/2016/07/08/enhancing-register_meta-in-4-6/ more])

;Customizer: Improved API for [https://make.wordpress.org/core/2016/05/04/improving-setting-validation-in-the-customizer/ Setting Validation in the Customizer]. ([https://make.wordpress.org/core/2016/07/05/customizer-apis-in-4-6-for-setting-validation-and-notifications/ read more]).

==What's New==
===General===
* Unifying permission error messages ([https://core.trac.wordpress.org/ticket/34521 #34521])

===Posts===
* Editor Improvements ([https://core.trac.wordpress.org/ticket/36638 #36638]) - A more reliable recovery mode and detection of broken URLs while you type them. 

* Emoji ([https://core.trac.wordpress.org/ticket/37361 #37361]) - Emoji support has been updated to include all of the latest Unicode 9 emoji characters.


===Media===

* Featured images are no longer immediately saved to posts or non-image attachments until the corresponding post or attachment has been updated.

===Comments===

* Comments: Allow for default comment form action, /wp-comments-post.php, to be changed via the comment_form_defaults filter. ([https://core.trac.wordpress.org/ticket/26841 #26841])

* Comments: Add parameters to edit_comment_link() to allow specifying a Comment and link class. Matches the parameters for edit_post_link(). ([https://core.trac.wordpress.org/ticket/36538 #36538])

Comments: add a $comment parameter to <tt>get_comment_author_url_link()</tt>, <tt>comment_author_email_link()</tt>, and <tt>get_comment_author_email_link()</tt>. ([https://core.trac.wordpress.org/ticket/36571 #36573]) ([https://core.trac.wordpress.org/ticket/36573 #36573])

===Appearance===
* Native Fonts in the [[Administration Screens|Administration Screen]] ([https://core.trac.wordpress.org/ticket/36753 #36753]) - Experience faster load times, especially when working offline, a removal of a third-party dependency, and a more [https://make.wordpress.org/core/features/font-natively/ native-feeling experience] as the lines between the mobile web and native applications continue to blur. <br /> The operating system’s UI font is used for any text that’s part of the WordPress user interface.  In other contexts, like the Editor, we continue to use a serif system typeface, Georgia. ([https://make.wordpress.org/core/2016/07/07/native-fonts-in-4-6/ read more])

* Import Screen overhaul ([https://core.trac.wordpress.org/ticket/35191 #35191) - The Import Screen was overhauled, improving accessibility and making it much easier to install and run an importer.

* Loading Translations in Different Order ([https://core.trac.wordpress.org/ticket/34213 #34213]) - <tt>load_plugin_textdomain( $domain )</tt> and <tt>load_theme_textdomain( $domain )</tt> are used to load the translations for a specific text domain, where <tt>$domain</tt> equals the slug of your plugin or theme. Now, these functions first looked inside the <tt>wp-content/languages</tt> directory, where language packs reside, then, the plugin/theme folder.

* Just-in-time Loading for Translations ([https://core.trac.wordpress.org/ticket/34114 #34114]) - Translations files are usually inside <tt>wp-content/languages</tt>, and WordPress now scans that directory for available translations and automatically loads them if it encounters a text domain for the first time.

* jQuery UI datepicker localization ([https://core.trac.wordpress.org/ticket/29420 #29420]) - localization defaults were added for the jQuery UI datepicker based on the current locale using the new [https://developer.wordpress.org/reference/wp_add_inline_script <tt>wp_add_inline_script()</tt>] function. ([https://make.wordpress.org/core/2016/07/06/jquery-ui-datepicker-localization-in-4-6/ read more])

===Users===

* Users: In wp_new_user_notification(), add 'user' option for the $notify parameter, which allows for sending notification only to the user created. ([https://core.trac.wordpress.org/ticket/36009 #36009])

* Multisite: Add the pre_get_blogs_of_user filter. This allows a plugin to short circuit get_blogs_of_user() in cases where the default behavior of the function is unnecessary or slow. (e.g. A user is a member of thousands of sites.) ([https://core.trac.wordpress.org/ticket/36707 #36707])

* List Tables: Pass the $which parameter to restrict_manage_posts and restrict_manage_users. $which contains the location of the extra table nav markup: 'top' or 'bottom'. ([[https://core.trac.wordpress.org/ticket/35307 #35307])

===Install Process===
* Shiny Updates v2 ([https://core.trac.wordpress.org/ticket/37714 #37714]) - [https://make.wordpress.org/core/features/shiny-updates/ Shiny Updates] replaces progress updates with a simpler and more straight forward experience when installing, updating, and deleting plugins and themes.

===Multisite===

See the [[#For_Developers | For Developers]] section for information on the new Multisite classes, WP_Site_Query, WP_Network_Query, and WP_Term_Query.

===Accessibility===

* Taxonomy pages tab order now reflects the visual order. ([https://core.trac.wordpress.org/ticket/35664 #35664]) ([https://make.wordpress.org/core/2016/05/16/categories-and-tags-screens-changes/ read more])

* Themes: Make default "read more" link more accessible. ([https://core.trac.wordpress.org/ticket/36572 #36572])

* Import: Enhance accessibility on the Import screen. ([https://core.trac.wordpress.org/ticket/35191 #35191])
** Remove title attributes.
** Show "Install Now" and "Details" links if the importer isn't installed yet.
** Show a "Run Importer" link if the importer is installed. It also handles activation if the plugin isn't activated.
** Add aria-label attributes to each link.
** Unify the importer descriptions to make them independent from the plugin state.
** Adjust JavaScript callbacks for ajaxified importer installs.

==Under The Hood==

=== General ===
* Resource Hints ([https://core.trac.wordpress.org/ticket/34292 #34292]) – Allow browsers to prefetch specific pages, render them in the background, perform DNS lookups, or to begin the connection handshake (DNS, TCP, TLS) in the background.<br />By default, [https://developer.wordpress.org/reference/functions/wp_resource_hints <tt>wp_resource_hints()</tt>] prints hints for <tt>s.w.org</tt> (the WordPress.org CDN) and for all scripts and styles which are enqueued from external hosts. ([https://make.wordpress.org/core/2016/07/06/resource-hints-in-4-6/ read more])

* HTTP API internal changes ([https://core.trac.wordpress.org/ticket/33055 #33055]) - The HTTP API ([https://developer.wordpress.org/reference/functions/wp_remote_request <tt>wp_remote_request()</tt>] and family) now uses the open-source independent [http://requests.ryanmccue.info/ Requests library], rather than using a WordPress-specific HTTP library. Requests provide the same functionalities with current library, and better HTTP standard support, case-insensitive headers, parallel HTTP requests, support for Internationalized Domain Names (like <tt>böcean901.ch</tt>), and many other internal improvements. ([https://make.wordpress.org/core/2016/07/27/http-api-in-4-6/ read more])

* Language Packs ([https://core.trac.wordpress.org/ticket/34114 #34114], [https://core.trac.wordpress.org/ticket/34213 #34213]) - Translations managed through [https://translate.wordpress.org translate.wordpress.org] now have a higher priority and are loaded just-in-time.

* Persistent Comment Cache ([https://core.trac.wordpress.org/ticket/36906 #36906]) - Comments can now be stored in a persistent object cache. When comments are added, modified, or deleted, out of date cache values are properly invalidated. ([https://make.wordpress.org/core/2016/07/18/comments-in-4-6-can-now-be-cached-by-a-persistent-object-cache/ read more])

===Images===

* Allowed upload file types are now checked before uploading ([https://core.trac.wordpress.org/ticket/14244 #14244])
* Adds a new action hook, <tt>wp_edit_form_attachment_display</tt> to <tt>edit_form_image_editor()</tt>, which can be used as a fallback to render previews of an attachment that isn't an image, audio, or video file included in the media library. ([https://core.trac.wordpress.org/ticket/36052 #36052])
* Removed a private, deprecated and unused function, <tt>_wp_upload_dir_baseurl()</tt>. ([https://core.trac.wordpress.org/ticket/36375 #36375])
* Prior image edits are now cleaned up properly when `IMAGE_EDIT_OVERWRITE` is true. ([https://core.trac.wordpress.org/ticket/32171 #32171])

=== Bootstrap / Load ===
There are changes to the bootstrap or loading process focused on making pieces available earlier. These changes are all expected to be backward compatible. ([https://make.wordpress.org/core/2016/07/06/bootstrapload-updates-in-4-6/ read more])
* Load <tt>plugin.php</tt> earlier in <tt>wp-settings.php</tt> ([https://core.trac.wordpress.org/ticket/36819 #36819])
* Reconcile <tt>wp-settings-cli.php</tt> with <tt>wp-settings.php</tt> ([https://core.trac.wordpress.org/ticket/34936 #34936])
* [https://developer.wordpress.org/reference/functions/is_ssl <tt>is_ssl()</tt>] is now located in <tt>wp-includes/load.php</tt> ([https://core.trac.wordpress.org/ticket/35844 #35844])
* <tt>ABSPATH</tt> can now be safely defined before WordPress is loaded ([https://core.trac.wordpress.org/ticket/26592 #26592])

=== Bug Fixes ===

==== Embeds ====
* Autoembeds now work with paragraphs. ([https://core.trac.wordpress.org/ticket/25387 #25387])
* Improved height calculation for slow loading images. ([https://core.trac.wordpress.org/ticket/35657 #35657])
* Docs: Added missing <tt>@access</tt> tags to methods in <tt>WP_oEmbed_Controller</tt>. ([https://core.trac.wordpress.org/ticket/36297 #36297])
* Removed support for Google Video since the service has been retired for years. ([https://core.trac.wordpress.org/ticket/36304 #36304])
* Now WordPress includes the locale stylesheets after the default styles. ([https://core.trac.wordpress.org/ticket/36839 #36839])
* Added unit tests for the <tt>WP_Embed</tt> class.([https://core.trac.wordpress.org/ticket/37214 #37214])
* WordPress doesn't print the HTML for a featured image if an embedded post has no featured image. ([https://core.trac.wordpress.org/ticket/37288 #37288])

=== Multisite ===
For detail about multisite changes in [[Version 4.6]], refer [https://make.wordpress.org/core/2016/07/08/multisite-focused-changes-in-4-6/ this Tech Docs].
* <tt>WP_Site_Query</tt> ([https://core.trac.wordpress.org/ticket/35791 #35791]) - With new [https://developer.wordpress.org/reference/classes/wp_site_query <tt>WP_Site_Query</tt>] or [https://developer.wordpress.org/reference/get_sites <tt>get_sites()</tt>], sites can now be queried from the <tt>$wpdb->blogs</tt> table in a flexible way by id, domain, path, and more.
* <tt>WP_Network_Query</tt> ([https://core.trac.wordpress.org/ticket/35791 #32504]) - With new [https://developer.wordpress.org/reference/classes/wp_network_query <tt>WP_Network_Query</tt>] or [https://developer.wordpress.org/reference/functions/get_networks <tt>get_networks()</tt>], networks can now be queried from the <tt>$wpdb->site</tt> table by id, domain, and path.
* Enhancements to <tt>WP_Site</tt> and <tt>WP_Network</tt> - It includes new utility methods, property changes ([https://core.trac.wordpress.org/ticket/36717 #36717], [https://core.trac.wordpress.org/ticket/37050 #37050]), Lazy-loading extended properties ([https://core.trac.wordpress.org/ticket/36935 #36935]), New Actions and Filters ([https://core.trac.wordpress.org/ticket/26580 #26580]) and others.

'''Note''': WP Multi Network compatibility - The introduction of [https://developer.wordpress.org/functions/get_networks <tt>get_networks()</tt>] in [[Version 4.6]] conflicts with the function of the same name in WP Multi Network, a plugin commonly used to provide multiple networks on a multisite installation.  If you are using WP Multi Network, please be sure to update the plugin to the latest ([https://github.com/stuttter/wp-multi-network/compare/2de58dd...840c834 detail]).

=== Classes ===

==== What's New ====

<div style="clear:both; border:1px solid #bbbbbb; border-radius: 5px; color:#000000; padding:7px; margin:0.5em auto; vertical-align:middle; text-align:center;"><strong>Visit the Code Reference for a [https://developer.wordpress.org/reference/since/4.6.0/?post_type%5B%5D=wp-parser-class full list] of classes added or changed in 4.6.</strong></div>

* New [https://developer.wordpress.org/reference/classes/wp_site_query <tt>WP_Site_Query</tt>] class to query sites with lazy loading for details. ([https://core.trac.wordpress.org/ticket/35791 #35791])

* New [https://developer.wordpress.org/reference/classes/wp_network_query <tt>WP_Network_Query</tt>] class to query networks with lazy loading for details. ([https://core.trac.wordpress.org/ticket/32504 #32504])

* New [https://developer.wordpress.org/reference/classes/wp_term_query <tt>WP_Term_Query</tt>] is modeled on existing query classes and provides a more consistent structure for generating term queries. It brings parity between taxonomy term queries and WordPress's other content type queries ([https://make.wordpress.org/core/2016/07/06/wp_term_query-in-wordpress-4-6/ read more])

* New [https://developer.wordpress.org/reference/classes/wp_post_type <tt>WP_Post_Type</tt>]  class provides methods to handle post type supports, rewrite rules, meta boxes, hooks, and taxonomies. ([https://core.trac.wordpress.org/ticket/36217 #36217])

=== Functions ===

==== What's New ====

<div style="clear:both; border:1px solid #bbbbbb; border-radius: 5px; color:#000000; padding:7px; margin:0.5em auto; vertical-align:middle; text-align:center;"><strong>Visit the Code Reference for a [https://developer.wordpress.org/reference/since/4.6.0/?post_type%5B%5D=wp-parser-function full list] of functions added or changed in 4.6.</strong></div>

* The Widgets API ([https://core.trac.wordpress.org/ticket/28216 #28216]) was enhanced to support registering pre-instantiated widgets. The [https://developer.wordpress.org/reference/functions/register_widget <tt>register_widget()</tt>] and [https://developer.wordpress.org/reference/functions/unregister_widget <tt>unregister_widget()</tt>] functions accept not only a class name but a class instance (object) of a <tt>WP_Widget</tt> subclass. ([https://make.wordpress.org/core/2016/07/06/pre-instantiated-widget-registration-in-4-6/ read more])

* [https://developer.wordpress.org/reference/functions/dbDelta/ dbDelta()] function updates resolve following issues ([https://make.wordpress.org/core/2016/07/13/dbdelta-updates-in-4-6/ read more])
** Normalized index definitions
** Backtick all the things
** Support for SPATIAL keys

* REST API responses now include an auto-discovery header ([https://core.trac.wordpress.org/ticket/35580 #35580]) and a refreshed nonce when responding to an authenticated response ([https://core.trac.wordpress.org/ticket/35662 #35662]).

* Enhancing [https://developer.wordpress.org/reference/functions/register_meta <tt>register_meta()</tt>] ([https://core.trac.wordpress.org/ticket/35658 #35658]) - <tt>register_meta()</tt> is getting some updates to enable greater flexibility and features in the future (such as inclusion in the Rest API). It expands to support the registration of meta keys and what to expect from those keys. Its behavior is similar to [https://developer.wordpress.org/reference/functions/register_post_type <tt>register_post_type()</tt>] in that the registration of this data is stored in the global scope. This makes an object’s meta data more accessible to parts of core and extending code. A global variable, <tt>$wp_meta_keys</tt>, contains all registered meta keys.([https://make.wordpress.org/core/2016/07/20/additional-register_meta-changes-in-4-6/ read more] and [https://make.wordpress.org/core/2016/07/08/enhancing-register_meta-in-4-6/ more])

* Customizer - Improved API for [https://make.wordpress.org/core/2016/05/04/improving-setting-validation-in-the-customizer/ Setting Validation in the Customizer]. ([https://core.trac.wordpress.org/ticket/34893 #34893], [https://core.trac.wordpress.org/ticket/36944 #36944]) ([https://make.wordpress.org/core/2016/07/05/customizer-apis-in-4-6-for-setting-validation-and-notifications/ read more]).

==== Deprecated ====

* [https://developer.wordpress.org/reference/functions/wp_embed_handler_googlevideo <tt>wp_embed_handler_googlevideo()</tt>] was deprecated following removal of Google Video support.
* [https://developer.wordpress.org/reference/functions/wp_get_sites <tt>wp_get_sites()</tt>] was deprecated in favor of [https://developer.wordpress.org/reference/functions/get_sites <tt>get_sites()</tt>].

=== Actions & Filters ===

<div style="clear:both; border:1px solid #bbbbbb; border-radius: 5px; color:#000000; padding:7px; margin:0.5em auto; vertical-align:middle; text-align:center;"><strong>Visit the Code Reference for a [https://developer.wordpress.org/reference/since/4.6.0/?post_type%5B%5D=wp-parser-hook full list] of hooks added or changed in 4.6.</strong></div>

=== External Libraries ===
* Masonry 3.3.2 ([https://core.trac.wordpress.org/ticket/32802 #32802])
* imagesLoaded 3.2.0 ([https://core.trac.wordpress.org/ticket/32802 #32802])
* MediaElement.js 2.22.0 ([https://core.trac.wordpress.org/ticket/36759 #36759], [https://core.trac.wordpress.org/ticket/37363 #37363])
* TinyMCE 4.4.1 ([https://core.trac.wordpress.org/ticket/37225 #37225], [https://core.trac.wordpress.org/ticket/37327 #37327])
* Backbone.js 1.3.3 ([https://core.trac.wordpress.org/ticket/37099] #37099)

=== Miscellaneous ===

{{Versions}}

[[Category:Versions]]